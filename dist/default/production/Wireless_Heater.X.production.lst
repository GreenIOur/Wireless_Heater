

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 22 15:22:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0074C9                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _TX_ADDRESS
    46  0074C9  41                 	db	65
    47  0074CA  41                 	db	65
    48  0074CB  41                 	db	65
    49  0074CC  41                 	db	65
    50  0074CD  41                 	db	65
    51  0000                     _ADCON1	set	4033
    52  0000                     _INTCONbits	set	4082
    53  0000                     _OSCCONbits	set	4051
    54  0000                     _PORTCbits	set	3970
    55  0000                     _SSPBUF	set	4041
    56  0000                     _SSPCON1	set	4038
    57  0000                     _SSPCON1bits	set	4038
    58  0000                     _SSPSTAT	set	4039
    59  0000                     _SSPSTATbits	set	4039
    60  0000                     _STATUS	set	4056
    61  0000                     _TRISAbits	set	3986
    62  0000                     _TRISBbits	set	3987
    63  0000                     _TRISCbits	set	3988
    64  0000                     _LATA0	set	31816
    65  0000                     _RA0	set	31744
    66  0000                     _RA1	set	31745
    67  0000                     _TRISA0	set	31888
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  00762C                     __pcinit:
    73                           	opt stack 0
    74  00762C                     start_initialization:
    75                           	opt stack 0
    76  00762C                     __initialization:
    77                           	opt stack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (19 bytes)
    80  00762C  EE00  F02E         	lfsr	0,__pbssCOMRAM
    81  007630  0E13               	movlw	19
    82  007632                     clear_0:
    83  007632  6AEE               	clrf	postinc0,c
    84  007634  06E8               	decf	wreg,f,c
    85  007636  E1FD               	bnz	clear_0
    86                           
    87                           ; Initialize objects allocated to COMRAM (5 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  007638  0EC9               	movlw	low __pidataCOMRAM
    90  00763A  6EF6               	movwf	tblptrl,c
    91  00763C  0E74               	movlw	high __pidataCOMRAM
    92  00763E  6EF7               	movwf	tblptrh,c
    93  007640  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  007642  6EF8               	movwf	tblptru,c
    95  007644  EE00  F041         	lfsr	0,__pdataCOMRAM
    96  007648  EE10 F005          	lfsr	1,5
    97  00764C                     copy_data0:
    98  00764C  0009               	tblrd		*+
    99  00764E  CFF5 FFEE          	movff	tablat,postinc0
   100  007652  50E5               	movf	postdec1,w,c
   101  007654  50E1               	movf	fsr1l,w,c
   102  007656  E1FA               	bnz	copy_data0
   103  007658                     end_of_initialization:
   104                           	opt stack 0
   105  007658                     __end_of__initialization:
   106                           	opt stack 0
   107  007658  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  00765A  6EF8               	movwf	tblptru,c
   109  00765C  0100               	movlb	0
   110  00765E  EF7A  F03D         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           postdec1	equ	0xFE5
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	bssCOMRAM
   121  00002E                     __pbssCOMRAM:
   122                           	opt stack 0
   123  00002E                     _DeviceAddress:
   124                           	opt stack 0
   125  00002E                     	ds	16
   126  00003E                     _temp_union:
   127                           	opt stack 0
   128  00003E                     	ds	3
   129                           tblptru	equ	0xFF8
   130                           tblptrh	equ	0xFF7
   131                           tblptrl	equ	0xFF6
   132                           tablat	equ	0xFF5
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           postdec1	equ	0xFE5
   136                           fsr1l	equ	0xFE1
   137                           
   138                           	psect	dataCOMRAM
   139  000041                     __pdataCOMRAM:
   140                           	opt stack 0
   141  000041                     _TX_ADDRESS:
   142                           	opt stack 0
   143  000041                     	ds	5
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	cstackBANK0
   154  000060                     __pcstackBANK0:
   155                           	opt stack 0
   156  000060                     main@rx_buf:
   157                           	opt stack 0
   158                           
   159                           ; 32 bytes @ 0x0
   160  000060                     	ds	32
   161  000080                     main@tx_buf:
   162                           	opt stack 0
   163                           
   164                           ; 32 bytes @ 0x20
   165  000080                     	ds	32
   166  0000A0                     main@Sucess:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x40
   170  0000A0                     	ds	1
   171  0000A1                     main@ds18b20_response:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x41
   175  0000A1                     	ds	1
   176  0000A2                     main@nrf24l01_response:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x42
   180  0000A2                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	opt stack 0
   193  000001                     ??_delay50ms:
   194  000001                     ??_delay100ms:
   195  000001                     ?___awdiv:
   196                           	opt stack 0
   197  000001                     ?___ftpack:
   198                           	opt stack 0
   199  000001                     init_sensor@reponse:
   200                           	opt stack 0
   201  000001                     write_Bit@WriteArg:
   202                           	opt stack 0
   203  000001                     read_Bit@result:
   204                           	opt stack 0
   205  000001                     nrf_getStatus@status:
   206                           	opt stack 0
   207  000001                     nrf_SPI_RW@data:
   208                           	opt stack 0
   209  000001                     OpenSPI@bus_mode:
   210                           	opt stack 0
   211  000001                     ___awdiv@dividend:
   212                           	opt stack 0
   213  000001                     fill_SendBuff@temperature:
   214                           	opt stack 0
   215  000001                     ___ftpack@arg:
   216                           	opt stack 0
   217                           
   218                           ; 3 bytes @ 0x0
   219  000001                     	ds	1
   220  000002                     write_Byte@data:
   221                           	opt stack 0
   222  000002                     read_Byte@data:
   223                           	opt stack 0
   224  000002                     nrf_SPI_RW_Reg@value:
   225                           	opt stack 0
   226  000002                     nrf_SPI_Read@reg:
   227                           	opt stack 0
   228  000002                     OpenSPI@smp_phase:
   229                           	opt stack 0
   230  000002                     nrf_SPI_Read_Buf@pBuf:
   231                           	opt stack 0
   232  000002                     nrf_SPI_Write_Buf@pBuf:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x1
   236  000002                     	ds	1
   237  000003                     nrf_SPI_RW_Reg@status:
   238                           	opt stack 0
   239  000003                     nrf_SPI_Read@reg_val:
   240                           	opt stack 0
   241  000003                     OpenSPI@sync_mode:
   242                           	opt stack 0
   243  000003                     write_Byte@i:
   244                           	opt stack 0
   245  000003                     read_Byte@i:
   246                           	opt stack 0
   247  000003                     ___awdiv@divisor:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251  000003                     	ds	1
   252  000004                     nrf_SPI_RW_Reg@reg:
   253                           	opt stack 0
   254  000004                     nrf_SPI_Read_Buf@bytes:
   255                           	opt stack 0
   256  000004                     nrf_SPI_Write_Buf@bytes:
   257                           	opt stack 0
   258  000004                     ___ftpack@exp:
   259                           	opt stack 0
   260  000004                     fill_SendBuff@buffer:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x3
   264  000004                     	ds	1
   265  000005                     nrf_SPI_Read_Buf@status:
   266                           	opt stack 0
   267  000005                     nrf_SPI_Write_Buf@status:
   268                           	opt stack 0
   269  000005                     ___awdiv@counter:
   270                           	opt stack 0
   271  000005                     ___ftpack@sign:
   272                           	opt stack 0
   273  000005                     address_Device@Adress:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     ??___ftpack:
   279  000006                     fill_SendBuff@i:
   280                           	opt stack 0
   281  000006                     nrf_SPI_Read_Buf@reg:
   282                           	opt stack 0
   283  000006                     nrf_SPI_Write_Buf@reg:
   284                           	opt stack 0
   285  000006                     ___awdiv@sign:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x5
   289  000006                     	ds	1
   290  000007                     nrf_SPI_Read_Buf@i:
   291                           	opt stack 0
   292  000007                     nrf_SPI_Write_Buf@i:
   293                           	opt stack 0
   294  000007                     address_Device@i:
   295                           	opt stack 0
   296  000007                     ___awdiv@quotient:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x6
   300  000007                     	ds	1
   301  000008                     nrf_init@status:
   302                           	opt stack 0
   303  000008                     nrf_send@tx_buf:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x7
   307  000008                     	ds	1
   308  000009                     ??_search_Devices:
   309  000009                     ?___awtoft:
   310                           	opt stack 0
   311  000009                     ___awtoft@c:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x8
   315  000009                     	ds	1
   316  00000A                     nrf_send@rx_buf:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x9
   320  00000A                     	ds	2
   321  00000C                     ___awtoft@sign:
   322                           	opt stack 0
   323  00000C                     nrf_send@i:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0xB
   327  00000C                     	ds	1
   328  00000D                     ?___ftmul:
   329                           	opt stack 0
   330  00000D                     ___ftmul@f1:
   331                           	opt stack 0
   332  00000D                     search_Devices@list_Devices:
   333                           	opt stack 0
   334                           
   335                           ; 8 bytes @ 0xC
   336  00000D                     	ds	1
   337  00000E                     nrf_send@status:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0xD
   341  00000E                     	ds	2
   342  000010                     ___ftmul@f2:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0xF
   346  000010                     	ds	3
   347  000013                     ??___ftmul:
   348                           
   349                           ; 0 bytes @ 0x12
   350  000013                     	ds	2
   351  000015                     search_Devices@LastConflictBitNum:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x14
   355  000015                     	ds	1
   356  000016                     search_Devices@CurrentConflictBitPos:
   357                           	opt stack 0
   358  000016                     ___ftmul@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x15
   362  000016                     	ds	1
   363  000017                     search_Devices@mask:
   364                           	opt stack 0
   365  000017                     ___ftmul@f3_as_product:
   366                           	opt stack 0
   367                           
   368                           ; 3 bytes @ 0x16
   369  000017                     	ds	1
   370  000018                     search_Devices@SelectedBit:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x17
   374  000018                     	ds	1
   375  000019                     search_Devices@i:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x18
   379  000019                     	ds	1
   380  00001A                     ___ftmul@cntr:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x19
   384  00001A                     	ds	1
   385  00001B                     ___ftmul@sign:
   386                           	opt stack 0
   387  00001B                     search_Devices@k:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x1A
   391  00001B                     	ds	1
   392  00001C                     ?_read_temp:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0x1B
   396  00001C                     	ds	1
   397  00001D                     search_Devices@InputBitStatus:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x1C
   401  00001D                     	ds	1
   402  00001E                     search_Devices@j:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x1D
   406  00001E                     	ds	1
   407  00001F                     ??_read_temp:
   408                           
   409                           ; 0 bytes @ 0x1E
   410  00001F                     	ds	1
   411  000020                     search_Devices@bitnum:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x1F
   415  000020                     	ds	1
   416  000021                     read_temp@temperature:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x20
   420  000021                     	ds	3
   421  000024                     read_temp@templ:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x23
   425  000024                     	ds	1
   426  000025                     read_temp@temph:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x24
   430  000025                     	ds	1
   431  000026                     read_temp@temp:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x25
   435  000026                     	ds	2
   436  000028                     read_temp@DeviceAddress:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x27
   440  000028                     	ds	1
   441  000029                     
   442                           ; 2 bytes @ 0x28
   443  000029                     	ds	2
   444  00002B                     
   445                           ; 3 bytes @ 0x2A
   446  00002B                     	ds	3
   447  00002E                     tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           ; 0 bytes @ 0x2D
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 19 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  argc            2   40[COMRAM] int 
   465 ;;  argv            3   42[COMRAM] PTR PTR unsigned char 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  Sucess          1   64[BANK0 ] unsigned char 
   468 ;;  tx_buf         32   32[BANK0 ] unsigned char [32]
   469 ;;  rx_buf         32    0[BANK0 ] unsigned char [32]
   470 ;;  temperature     3    0        float 
   471 ;;  nrf24l01_res    1   66[BANK0 ] unsigned char 
   472 ;;  ds18b20_resp    1   65[BANK0 ] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  2   40[COMRAM] int 
   475 ;; Registers used:
   476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   482 ;;      Params:         5       0       0       0       0       0       0       0       0
   483 ;;      Locals:         0      67       0       0       0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0       0       0       0       0
   485 ;;      Totals:         5      67       0       0       0       0       0       0       0
   486 ;;Total ram usage:       72 bytes
   487 ;; Hardware stack levels required when called:    4
   488 ;; This function calls:
   489 ;;		_delay50ms
   490 ;;		_delay750ms
   491 ;;		_fill_SendBuff
   492 ;;		_init_sensor
   493 ;;		_nrf_init
   494 ;;		_nrf_send
   495 ;;		_nrf_txmode
   496 ;;		_read_temp
   497 ;;		_search_Devices
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text0
   504  007AF4                     __ptext0:
   505                           	opt stack 0
   506  007AF4                     _main:
   507                           	opt stack 27
   508                           
   509                           ;main.c: 22: TRISAbits.TRISA1 = 0;
   510                           
   511                           ;incstack = 0
   512  007AF4  9292               	bcf	3986,1,c	;volatile
   513                           
   514                           ;main.c: 24: unsigned char tx_buf[32];
   515                           ;main.c: 25: unsigned char rx_buf[32];
   516                           ;main.c: 26: unsigned char ds18b20_response = 1;
   517  007AF6  0E01               	movlw	1
   518  007AF8  0100               	movlb	0	; () banked
   519  007AFA  6FA1               	movwf	main@ds18b20_response& (0+255),b
   520                           
   521                           ;main.c: 27: unsigned char nrf24l01_response = 1;
   522  007AFC  0E01               	movlw	1
   523  007AFE  0100               	movlb	0	; () banked
   524  007B00  6FA2               	movwf	main@nrf24l01_response& (0+255),b
   525                           
   526                           ; BSR set to: 0
   527                           ;main.c: 28: float temperature;
   528                           ;main.c: 32: OSCCONbits.IRCF = 0xF;
   529  007B02  88D3               	bsf	4051,4,c	;volatile
   530  007B04  8AD3               	bsf	4051,5,c	;volatile
   531  007B06  8CD3               	bsf	4051,6,c	;volatile
   532                           
   533                           ; BSR set to: 0
   534                           ;main.c: 33: ADCON1 |= 0xF;
   535  007B08  0E0F               	movlw	15
   536  007B0A  12C1               	iorwf	4033,f,c	;volatile
   537                           
   538                           ; BSR set to: 0
   539                           ;main.c: 34: (INTCONbits.GIE = 1);
   540  007B0C  8EF2               	bsf	intcon,7,c	;volatile
   541                           
   542                           ; BSR set to: 0
   543                           ;main.c: 38: TRISCbits.TRISC0 = 0;
   544  007B0E  9094               	bcf	3988,0,c	;volatile
   545                           
   546                           ; BSR set to: 0
   547                           ;main.c: 39: TRISCbits.TRISC1 = 0;
   548  007B10  9294               	bcf	3988,1,c	;volatile
   549                           
   550                           ; BSR set to: 0
   551                           ;main.c: 40: TRISCbits.TRISC2 = 1;
   552  007B12  8494               	bsf	3988,2,c	;volatile
   553                           
   554                           ; BSR set to: 0
   555                           ;main.c: 41: TRISBbits.TRISB1 = 0;
   556  007B14  9293               	bcf	3987,1,c	;volatile
   557                           
   558                           ; BSR set to: 0
   559                           ;main.c: 42: TRISBbits.TRISB0 = 1;
   560  007B16  8093               	bsf	3987,0,c	;volatile
   561                           
   562                           ; BSR set to: 0
   563                           ;main.c: 43: TRISCbits.TRISC7 = 0;
   564  007B18  9E94               	bcf	3988,7,c	;volatile
   565                           
   566                           ; BSR set to: 0
   567                           ;main.c: 45: RA1=1;
   568  007B1A  8280               	bsf	3968,1,c	;volatile
   569                           
   570                           ; BSR set to: 0
   571                           ;main.c: 46: nrf_init();
   572  007B1C  EC35  F03E         	call	_nrf_init	;wreg free
   573                           
   574                           ;main.c: 47: delay50ms();
   575  007B20  ECCA  F03B         	call	_delay50ms	;wreg free
   576                           
   577                           ;main.c: 48: nrf_txmode();
   578  007B24  EC67  F03A         	call	_nrf_txmode	;wreg free
   579                           
   580                           ;main.c: 51: ds18b20_response=init_sensor();
   581  007B28  ECFB  F03A         	call	_init_sensor	;wreg free
   582  007B2C  0100               	movlb	0	; () banked
   583  007B2E  6FA1               	movwf	main@ds18b20_response& (0+255),b
   584                           
   585                           ; BSR set to: 0
   586                           ;main.c: 54: if(ds18b20_response==0)
   587  007B30  0100               	movlb	0	; () banked
   588  007B32  51A1               	movf	main@ds18b20_response& (0+255),w,b
   589  007B34  0100               	movlb	0	; () banked
   590  007B36  A4D8               	btfss	status,2,c
   591  007B38  EF00  F000         	goto	start
   592                           
   593                           ; BSR set to: 0
   594                           ;main.c: 55: {
   595                           ;main.c: 56: unsigned char Sucess;
   596                           ;main.c: 57: Sucess=search_Devices();
   597  007B3C  EC1C  F03F         	call	_search_Devices	;wreg free
   598  007B40  0100               	movlb	0	; () banked
   599  007B42  6FA0               	movwf	main@Sucess& (0+255),b
   600  007B44  D000               	goto	l2154
   601  007B46                     l2154:
   602                           
   603                           ;main.c: 59: {
   604                           ;main.c: 61: temp_union.temperature=read_temp(DeviceAddress[0]);
   605  007B46  0E2E               	movlw	_DeviceAddress& (0+255)
   606  007B48  ECDC  F03C         	call	_read_temp
   607  007B4C  C01C  F03E         	movff	?_read_temp,_temp_union
   608  007B50  C01D  F03F         	movff	?_read_temp+1,_temp_union+1
   609  007B54  C01E  F040         	movff	?_read_temp+2,_temp_union+2
   610                           
   611                           ;main.c: 62: fill_SendBuff(temp_union.temperature,&tx_buf);
   612  007B58  C03E  F001         	movff	_temp_union,fill_SendBuff@temperature
   613  007B5C  C03F  F002         	movff	_temp_union+1,fill_SendBuff@temperature+1
   614  007B60  C040  F003         	movff	_temp_union+2,fill_SendBuff@temperature+2
   615  007B64  0E80               	movlw	low main@tx_buf
   616  007B66  6E04               	movwf	fill_SendBuff@buffer,c
   617  007B68  0E00               	movlw	high main@tx_buf
   618  007B6A  6E05               	movwf	fill_SendBuff@buffer+1,c
   619  007B6C  EC1E  F03C         	call	_fill_SendBuff	;wreg free
   620                           
   621                           ;main.c: 63: nrf24l01_response = nrf_send(&tx_buf,&rx_buf);
   622  007B70  0E80               	movlw	low main@tx_buf
   623  007B72  6E08               	movwf	nrf_send@tx_buf,c
   624  007B74  0E00               	movlw	high main@tx_buf
   625  007B76  6E09               	movwf	nrf_send@tx_buf+1,c
   626  007B78  0E60               	movlw	low main@rx_buf
   627  007B7A  6E0A               	movwf	nrf_send@rx_buf,c
   628  007B7C  0E00               	movlw	high main@rx_buf
   629  007B7E  6E0B               	movwf	nrf_send@rx_buf+1,c
   630  007B80  EC4B  F03C         	call	_nrf_send	;wreg free
   631  007B84  0100               	movlb	0	; () banked
   632  007B86  6FA2               	movwf	main@nrf24l01_response& (0+255),b
   633                           
   634                           ; BSR set to: 0
   635                           ;main.c: 64: if(nrf24l01_response){RA1 = 1;}else{RA1 = 0;}
   636  007B88  0100               	movlb	0	; () banked
   637  007B8A  51A2               	movf	main@nrf24l01_response& (0+255),w,b
   638  007B8C  0100               	movlb	0	; () banked
   639  007B8E  B4D8               	btfsc	status,2,c
   640  007B90  D002               	goto	l43
   641                           
   642                           ; BSR set to: 0
   643  007B92  8280               	bsf	3968,1,c	;volatile
   644  007B94  D002               	goto	l2162
   645  007B96                     l43:
   646                           
   647                           ; BSR set to: 0
   648  007B96  9280               	bcf	3968,1,c	;volatile
   649  007B98  D000               	goto	l2162
   650  007B9A                     l2162:
   651                           
   652                           ; BSR set to: 0
   653                           ;main.c: 65: delay750ms();
   654  007B9A  EC9E  F03A         	call	_delay750ms	;wreg free
   655                           
   656                           ;main.c: 66: }while(1);
   657  007B9E  D7D3               	goto	l2154
   658                           
   659                           ;main.c: 67: };
   660                           ;main.c: 69: return (0);
   661                           ;	Return value of _main is never used
   662  007BA0  EF00  F000         	goto	start
   663  007BA4                     __end_of_main:
   664                           	opt stack 0
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           intcon	equ	0xFF2
   670                           postinc0	equ	0xFEE
   671                           wreg	equ	0xFE8
   672                           postdec1	equ	0xFE5
   673                           fsr1l	equ	0xFE1
   674                           status	equ	0xFD8
   675                           
   676 ;; *************** function _search_Devices *****************
   677 ;; Defined at:
   678 ;;		line 98 in file "DS18B20/DS18B20.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  j               2   29[COMRAM] int 
   683 ;;  InputBitStat    1   28[COMRAM] unsigned char 
   684 ;;  SelectedBit     1   23[COMRAM] unsigned char 
   685 ;;  k               2   26[COMRAM] int 
   686 ;;  bitnum          2   31[COMRAM] int 
   687 ;;  mask            1   22[COMRAM] unsigned char 
   688 ;;  CurrentConfl    1   21[COMRAM] unsigned char 
   689 ;;  i               2   24[COMRAM] int 
   690 ;;  list_Devices    8   12[COMRAM] unsigned char [8]
   691 ;;  LastConflict    1   20[COMRAM] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      unsigned char 
   694 ;; Registers used:
   695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:        21       0       0       0       0       0       0       0       0
   703 ;;      Temps:          4       0       0       0       0       0       0       0       0
   704 ;;      Totals:        25       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:       25 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    2
   708 ;; This function calls:
   709 ;;		___awdiv
   710 ;;		_init_sensor
   711 ;;		_read_Bit
   712 ;;		_write_Bit
   713 ;;		_write_Byte
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text1
   720  007E38                     __ptext1:
   721                           	opt stack 0
   722  007E38                     _search_Devices:
   723                           	opt stack 28
   724                           
   725                           ;DS18B20.c: 100: unsigned char list_Devices[8];
   726                           ;DS18B20.c: 101: unsigned char LastConflictBitNum=0;
   727                           
   728                           ;incstack = 0
   729  007E38  0E00               	movlw	0
   730  007E3A  6E15               	movwf	search_Devices@LastConflictBitNum,c
   731                           
   732                           ;DS18B20.c: 102: for(int i=0;i<2;i++){
   733  007E3C  0E00               	movlw	0
   734  007E3E  6E1A               	movwf	search_Devices@i+1,c
   735  007E40  0E00               	movlw	0
   736  007E42  6E19               	movwf	search_Devices@i,c
   737  007E44  BE1A               	btfsc	search_Devices@i+1,7,c
   738  007E46  D008               	goto	l1944
   739  007E48  501A               	movf	search_Devices@i+1,w,c
   740  007E4A  E105               	bnz	u990
   741  007E4C  0E02               	movlw	2
   742  007E4E  5C19               	subwf	search_Devices@i,w,c
   743  007E50  B0D8               	btfsc	status,0,c
   744  007E52  D0D3               	goto	l2026
   745  007E54  D001               	goto	l1944
   746  007E56                     u990:
   747  007E56  D0D1               	goto	l2026
   748  007E58                     l1944:
   749                           
   750                           ;DS18B20.c: 103: unsigned char mask=0x01;
   751  007E58  0E01               	movlw	1
   752  007E5A  6E17               	movwf	search_Devices@mask,c
   753                           
   754                           ;DS18B20.c: 104: for(int k=0;k<8;k++)
   755  007E5C  0E00               	movlw	0
   756  007E5E  6E1C               	movwf	search_Devices@k+1,c
   757  007E60  0E00               	movlw	0
   758  007E62  6E1B               	movwf	search_Devices@k,c
   759  007E64                     l1946:
   760  007E64  BE1C               	btfsc	search_Devices@k+1,7,c
   761  007E66  D008               	goto	l1950
   762  007E68  501C               	movf	search_Devices@k+1,w,c
   763  007E6A  E112               	bnz	l1956
   764  007E6C  0E08               	movlw	8
   765  007E6E  5C1B               	subwf	search_Devices@k,w,c
   766  007E70  B0D8               	btfsc	status,0,c
   767  007E72  D00E               	goto	l1956
   768  007E74  D001               	goto	l1950
   769  007E76  D00C               	goto	l1956
   770  007E78                     l1950:
   771                           
   772                           ;DS18B20.c: 105: {
   773                           ;DS18B20.c: 106: list_Devices[k]=0x00;
   774  007E78  0E0D               	movlw	low search_Devices@list_Devices
   775  007E7A  241B               	addwf	search_Devices@k,w,c
   776  007E7C  6ED9               	movwf	fsr2l,c
   777  007E7E  0E00               	movlw	high search_Devices@list_Devices
   778  007E80  201C               	addwfc	search_Devices@k+1,w,c
   779  007E82  6EDA               	movwf	fsr2h,c
   780  007E84  0E00               	movlw	0
   781  007E86  6EDF               	movwf	indf2,c
   782  007E88  4A1B               	infsnz	search_Devices@k,f,c
   783  007E8A  2A1C               	incf	search_Devices@k+1,f,c
   784  007E8C  D7EB               	goto	l1946
   785  007E8E  D000               	goto	l1956
   786  007E90                     l1956:
   787                           
   788                           ;DS18B20.c: 107: }
   789                           ;DS18B20.c: 108: if (init_sensor())
   790  007E90  ECFB  F03A         	call	_init_sensor	;wreg free
   791  007E94  0900               	iorlw	0
   792  007E96  B4D8               	btfsc	status,2,c
   793  007E98  D002               	goto	l1962
   794  007E9A  D021               	goto	l1980
   795                           
   796                           ;DS18B20.c: 109: {
   797                           ;DS18B20.c: 110: return 0;
   798  007E9C  D0B0               	goto	l102
   799  007E9E                     l1962:
   800                           
   801                           ;DS18B20.c: 111: }
   802                           ;DS18B20.c: 112: write_Byte(0xF0);
   803  007E9E  0EF0               	movlw	240
   804  007EA0  ECE1  F03A         	call	_write_Byte
   805                           
   806                           ;DS18B20.c: 113: int bitnum=1;
   807  007EA4  0E00               	movlw	0
   808  007EA6  6E21               	movwf	search_Devices@bitnum+1,c
   809  007EA8  0E01               	movlw	1
   810  007EAA  6E20               	movwf	search_Devices@bitnum,c
   811                           
   812                           ;DS18B20.c: 114: unsigned char CurrentConflictBitPos=0;
   813  007EAC  0E00               	movlw	0
   814  007EAE  6E16               	movwf	search_Devices@CurrentConflictBitPos,c
   815                           
   816                           ;DS18B20.c: 115: while(bitnum<65)
   817  007EB0  D05D               	goto	l2008
   818  007EB2                     l1968:
   819                           
   820                           ;DS18B20.c: 116: {
   821                           ;DS18B20.c: 117: unsigned char SelectedBit=0;
   822  007EB2  0E00               	movlw	0
   823  007EB4  6E18               	movwf	search_Devices@SelectedBit,c
   824                           
   825                           ;DS18B20.c: 118: unsigned char InputBitStatus=0x00;
   826  007EB6  0E00               	movlw	0
   827  007EB8  6E1D               	movwf	search_Devices@InputBitStatus,c
   828                           
   829                           ;DS18B20.c: 119: if (read_Bit()==1)
   830  007EBA  ECAF  F03A         	call	_read_Bit	;wreg free
   831  007EBE  06E8               	decf	wreg,f,c
   832  007EC0  A4D8               	btfss	status,2,c
   833  007EC2  D002               	goto	l1974
   834                           
   835                           ;DS18B20.c: 120: {
   836                           ;DS18B20.c: 121: InputBitStatus|=2;
   837  007EC4  821D               	bsf	search_Devices@InputBitStatus,1,c
   838  007EC6  D000               	goto	l1974
   839  007EC8                     l1974:
   840                           
   841                           ;DS18B20.c: 122: }
   842                           ;DS18B20.c: 123: if(read_Bit()==1)
   843  007EC8  ECAF  F03A         	call	_read_Bit	;wreg free
   844  007ECC  06E8               	decf	wreg,f,c
   845  007ECE  A4D8               	btfss	status,2,c
   846  007ED0  D002               	goto	l1978
   847                           
   848                           ;DS18B20.c: 124: {
   849                           ;DS18B20.c: 125: InputBitStatus|=1;
   850  007ED2  801D               	bsf	search_Devices@InputBitStatus,0,c
   851  007ED4  D000               	goto	l1978
   852  007ED6                     l1978:
   853                           
   854                           ;DS18B20.c: 126: }
   855                           ;DS18B20.c: 133: if (InputBitStatus==3)
   856  007ED6  0E03               	movlw	3
   857  007ED8  181D               	xorwf	search_Devices@InputBitStatus,w,c
   858  007EDA  A4D8               	btfss	status,2,c
   859  007EDC  D002               	goto	l1984
   860  007EDE                     l1980:
   861                           
   862                           ;DS18B20.c: 134: {
   863                           ;DS18B20.c: 135: return 0;
   864  007EDE  0E00               	movlw	0
   865  007EE0  D08E               	goto	l102
   866  007EE2                     l1984:
   867                           
   868                           ;DS18B20.c: 136: }
   869                           ;DS18B20.c: 137: if(InputBitStatus>0)
   870  007EE2  501D               	movf	search_Devices@InputBitStatus,w,c
   871  007EE4  B4D8               	btfsc	status,2,c
   872  007EE6  D003               	goto	l1988
   873                           
   874                           ;DS18B20.c: 138: {
   875                           ;DS18B20.c: 139: SelectedBit=InputBitStatus>>1;
   876  007EE8  90D8               	bcf	status,0,c
   877  007EEA  301D               	rrcf	search_Devices@InputBitStatus,w,c
   878  007EEC  D00B               	goto	L1
   879  007EEE                     l1988:
   880                           
   881                           ;DS18B20.c: 141: else
   882                           ;DS18B20.c: 142: {
   883                           ;DS18B20.c: 143: if(bitnum==LastConflictBitNum)
   884  007EEE  5015               	movf	search_Devices@LastConflictBitNum,w,c
   885  007EF0  6E09               	movwf	??_search_Devices& (0+255),c
   886  007EF2  6A0A               	clrf	(??_search_Devices+1)& (0+255),c
   887  007EF4  5020               	movf	search_Devices@bitnum,w,c
   888  007EF6  1809               	xorwf	??_search_Devices,w,c
   889  007EF8  E107               	bnz	l1992
   890  007EFA  5021               	movf	search_Devices@bitnum+1,w,c
   891  007EFC  180A               	xorwf	??_search_Devices+1,w,c
   892  007EFE  A4D8               	btfss	status,2,c
   893  007F00  D003               	goto	l1992
   894                           
   895                           ;DS18B20.c: 144: {
   896                           ;DS18B20.c: 145: SelectedBit=1;
   897  007F02  0E01               	movlw	1
   898  007F04                     L1:
   899  007F04  6E18               	movwf	search_Devices@SelectedBit,c
   900                           
   901                           ;DS18B20.c: 146: }
   902  007F06  D005               	goto	l1996
   903  007F08                     l1992:
   904                           
   905                           ;DS18B20.c: 147: else
   906                           ;DS18B20.c: 148: {
   907                           ;DS18B20.c: 149: SelectedBit=0;
   908  007F08  0E00               	movlw	0
   909  007F0A  6E18               	movwf	search_Devices@SelectedBit,c
   910                           
   911                           ;DS18B20.c: 150: CurrentConflictBitPos=bitnum;
   912  007F0C  C020  F016         	movff	search_Devices@bitnum,search_Devices@CurrentConflictBitPos
   913  007F10  D000               	goto	l1996
   914  007F12                     l1996:
   915                           
   916                           ;DS18B20.c: 151: }
   917                           ;DS18B20.c: 152: }
   918                           ;DS18B20.c: 153: write_Bit(SelectedBit);
   919  007F12  5018               	movf	search_Devices@SelectedBit,w,c
   920  007F14  EC31  F03B         	call	_write_Bit
   921                           
   922                           ;DS18B20.c: 154: mask=0x01;
   923  007F18  0E01               	movlw	1
   924  007F1A  6E17               	movwf	search_Devices@mask,c
   925                           
   926                           ;DS18B20.c: 155: mask<<=(bitnum-1)%8;
   927  007F1C  C020  F009         	movff	search_Devices@bitnum,??_search_Devices
   928  007F20  0EFF               	movlw	-1
   929  007F22  2609               	addwf	??_search_Devices,f,c
   930  007F24  0E07               	movlw	7
   931  007F26  1609               	andwf	??_search_Devices,f,c
   932  007F28  2809               	incf	??_search_Devices,w,c
   933  007F2A  6E0A               	movwf	(??_search_Devices+1)& (0+255),c
   934  007F2C  D002               	goto	u1080
   935  007F2E                     u1085:
   936  007F2E  90D8               	bcf	status,0,c
   937  007F30  3617               	rlcf	search_Devices@mask,f,c
   938  007F32                     u1080:
   939  007F32  2E0A               	decfsz	(??_search_Devices+1)& (0+255),f,c
   940  007F34  D7FC               	goto	u1085
   941                           
   942                           ;DS18B20.c: 156: if (SelectedBit==1)
   943  007F36  0418               	decf	search_Devices@SelectedBit,w,c
   944  007F38  A4D8               	btfss	status,2,c
   945  007F3A  D015               	goto	l2006
   946                           
   947                           ;DS18B20.c: 157: {
   948                           ;DS18B20.c: 158: list_Devices[(bitnum-1)/8]|=mask;
   949  007F3C  0EFF               	movlw	255
   950  007F3E  2420               	addwf	search_Devices@bitnum,w,c
   951  007F40  6E01               	movwf	___awdiv@dividend,c
   952  007F42  0EFF               	movlw	255
   953  007F44  2021               	addwfc	search_Devices@bitnum+1,w,c
   954  007F46  6E02               	movwf	___awdiv@dividend+1,c
   955  007F48  0E00               	movlw	0
   956  007F4A  6E04               	movwf	___awdiv@divisor+1,c
   957  007F4C  0E08               	movlw	8
   958  007F4E  6E03               	movwf	___awdiv@divisor,c
   959  007F50  EC91  F03C         	call	___awdiv	;wreg free
   960  007F54  0E0D               	movlw	low search_Devices@list_Devices
   961  007F56  2401               	addwf	?___awdiv,w,c
   962  007F58  6ED9               	movwf	fsr2l,c
   963  007F5A  0E00               	movlw	high search_Devices@list_Devices
   964  007F5C  2002               	addwfc	?___awdiv+1,w,c
   965  007F5E  6EDA               	movwf	fsr2h,c
   966  007F60  5017               	movf	search_Devices@mask,w,c
   967  007F62  12DF               	iorwf	indf2,f,c
   968  007F64  D000               	goto	l2006
   969  007F66                     l2006:
   970                           
   971                           ;DS18B20.c: 159: }
   972                           ;DS18B20.c: 160: bitnum++;
   973  007F66  4A20               	infsnz	search_Devices@bitnum,f,c
   974  007F68  2A21               	incf	search_Devices@bitnum+1,f,c
   975  007F6A  D000               	goto	l2008
   976  007F6C                     l2008:
   977  007F6C  BE21               	btfsc	search_Devices@bitnum+1,7,c
   978  007F6E  D7A1               	goto	l1968
   979  007F70  5021               	movf	search_Devices@bitnum+1,w,c
   980  007F72  E104               	bnz	u1100
   981  007F74  0E41               	movlw	65
   982  007F76  5C20               	subwf	search_Devices@bitnum,w,c
   983  007F78  A0D8               	btfss	status,0,c
   984  007F7A  D79B               	goto	l1968
   985  007F7C                     u1100:
   986                           
   987                           ;DS18B20.c: 161: }
   988                           ;DS18B20.c: 162: LastConflictBitNum=CurrentConflictBitPos;
   989  007F7C  C016  F015         	movff	search_Devices@CurrentConflictBitPos,search_Devices@LastConflictBitNum
   990                           
   991                           ;DS18B20.c: 163: for(int j=0;j<8;j++){
   992  007F80  0E00               	movlw	0
   993  007F82  6E1F               	movwf	search_Devices@j+1,c
   994  007F84  0E00               	movlw	0
   995  007F86  6E1E               	movwf	search_Devices@j,c
   996  007F88                     l2012:
   997  007F88  BE1F               	btfsc	search_Devices@j+1,7,c
   998  007F8A  D008               	goto	l2016
   999  007F8C  501F               	movf	search_Devices@j+1,w,c
  1000  007F8E  E12D               	bnz	l2022
  1001  007F90  0E08               	movlw	8
  1002  007F92  5C1E               	subwf	search_Devices@j,w,c
  1003  007F94  B0D8               	btfsc	status,0,c
  1004  007F96  D029               	goto	l2022
  1005  007F98  D001               	goto	l2016
  1006  007F9A  D027               	goto	l2022
  1007  007F9C                     l2016:
  1008                           
  1009                           ;DS18B20.c: 164: DeviceAddress[i][j]=list_Devices[j];
  1010  007F9C  0E0D               	movlw	low search_Devices@list_Devices
  1011  007F9E  241E               	addwf	search_Devices@j,w,c
  1012  007FA0  6ED9               	movwf	fsr2l,c
  1013  007FA2  0E00               	movlw	high search_Devices@list_Devices
  1014  007FA4  201F               	addwfc	search_Devices@j+1,w,c
  1015  007FA6  6EDA               	movwf	fsr2h,c
  1016  007FA8  C019  F009         	movff	search_Devices@i,??_search_Devices
  1017  007FAC  C01A  F00A         	movff	search_Devices@i+1,??_search_Devices+1
  1018  007FB0  90D8               	bcf	status,0,c
  1019  007FB2  3609               	rlcf	??_search_Devices,f,c
  1020  007FB4  360A               	rlcf	??_search_Devices+1,f,c
  1021  007FB6  90D8               	bcf	status,0,c
  1022  007FB8  3609               	rlcf	??_search_Devices,f,c
  1023  007FBA  360A               	rlcf	??_search_Devices+1,f,c
  1024  007FBC  90D8               	bcf	status,0,c
  1025  007FBE  3609               	rlcf	??_search_Devices,f,c
  1026  007FC0  360A               	rlcf	??_search_Devices+1,f,c
  1027  007FC2  0E2E               	movlw	low _DeviceAddress
  1028  007FC4  6E0B               	movwf	(??_search_Devices+2)& (0+255),c
  1029  007FC6  0E00               	movlw	high _DeviceAddress
  1030  007FC8  6E0C               	movwf	(??_search_Devices+3)& (0+255),c
  1031  007FCA  5009               	movf	??_search_Devices,w,c
  1032  007FCC  260B               	addwf	??_search_Devices+2,f,c
  1033  007FCE  500A               	movf	??_search_Devices+1,w,c
  1034  007FD0  220C               	addwfc	??_search_Devices+3,f,c
  1035  007FD2  501E               	movf	search_Devices@j,w,c
  1036  007FD4  240B               	addwf	??_search_Devices+2,w,c
  1037  007FD6  6EE1               	movwf	fsr1l,c
  1038  007FD8  501F               	movf	search_Devices@j+1,w,c
  1039  007FDA  200C               	addwfc	??_search_Devices+3,w,c
  1040  007FDC  6EE2               	movwf	fsr1h,c
  1041  007FDE  CFDF FFE7          	movff	indf2,indf1
  1042  007FE2  4A1E               	infsnz	search_Devices@j,f,c
  1043  007FE4  2A1F               	incf	search_Devices@j+1,f,c
  1044  007FE6  D7D0               	goto	l2012
  1045  007FE8  D000               	goto	l2022
  1046  007FEA                     l2022:
  1047  007FEA  4A19               	infsnz	search_Devices@i,f,c
  1048  007FEC  2A1A               	incf	search_Devices@i+1,f,c
  1049  007FEE  BE1A               	btfsc	search_Devices@i+1,7,c
  1050  007FF0  D733               	goto	l1944
  1051  007FF2  501A               	movf	search_Devices@i+1,w,c
  1052  007FF4  E102               	bnz	l2026
  1053  007FF6  D72A               	goto	L2
  1054  007FF8  D000               	goto	l2026
  1055  007FFA                     l2026:
  1056                           
  1057                           ;DS18B20.c: 165: }
  1058                           ;DS18B20.c: 166: }
  1059                           ;DS18B20.c: 167: return 1;
  1060  007FFA  0E01               	movlw	1
  1061  007FFC  D000               	goto	l102
  1062  007FFE                     l102:
  1063  007FFE  0012               	return		;funcret
  1064  008000                     __end_of_search_Devices:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           intcon	equ	0xFF2
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           indf1	equ	0xFE7
  1074                           postdec1	equ	0xFE5
  1075                           fsr1h	equ	0xFE2
  1076                           fsr1l	equ	0xFE1
  1077                           indf2	equ	0xFDF
  1078                           fsr2h	equ	0xFDA
  1079                           fsr2l	equ	0xFD9
  1080                           status	equ	0xFD8
  1081                           
  1082 ;; *************** function ___awdiv *****************
  1083 ;; Defined at:
  1084 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/awdiv.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  dividend        2    0[COMRAM] int 
  1087 ;;  divisor         2    2[COMRAM] int 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  quotient        2    6[COMRAM] int 
  1090 ;;  sign            1    5[COMRAM] unsigned char 
  1091 ;;  counter         1    4[COMRAM] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2    0[COMRAM] int 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1101 ;;      Params:         4       0       0       0       0       0       0       0       0
  1102 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1104 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        8 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; This function calls:
  1108 ;;		Nothing
  1109 ;; This function is called by:
  1110 ;;		_search_Devices
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text2
  1115  007922                     __ptext2:
  1116                           	opt stack 0
  1117  007922                     ___awdiv:
  1118                           	opt stack 29
  1119                           
  1120                           ;incstack = 0
  1121  007922  0E00               	movlw	0
  1122  007924  6E06               	movwf	___awdiv@sign,c
  1123  007926  AE04               	btfss	___awdiv@divisor+1,7,c
  1124  007928  D007               	goto	l1838
  1125  00792A  6C03               	negf	___awdiv@divisor,c
  1126  00792C  1E04               	comf	___awdiv@divisor+1,f,c
  1127  00792E  B0D8               	btfsc	status,0,c
  1128  007930  2A04               	incf	___awdiv@divisor+1,f,c
  1129  007932  0E01               	movlw	1
  1130  007934  6E06               	movwf	___awdiv@sign,c
  1131  007936  D000               	goto	l1838
  1132  007938                     l1838:
  1133  007938  AE02               	btfss	___awdiv@dividend+1,7,c
  1134  00793A  D007               	goto	l1844
  1135  00793C  6C01               	negf	___awdiv@dividend,c
  1136  00793E  1E02               	comf	___awdiv@dividend+1,f,c
  1137  007940  B0D8               	btfsc	status,0,c
  1138  007942  2A02               	incf	___awdiv@dividend+1,f,c
  1139  007944  0E01               	movlw	1
  1140  007946  1A06               	xorwf	___awdiv@sign,f,c
  1141  007948  D000               	goto	l1844
  1142  00794A                     l1844:
  1143  00794A  0E00               	movlw	0
  1144  00794C  6E08               	movwf	___awdiv@quotient+1,c
  1145  00794E  0E00               	movlw	0
  1146  007950  6E07               	movwf	___awdiv@quotient,c
  1147  007952  5003               	movf	___awdiv@divisor,w,c
  1148  007954  1004               	iorwf	___awdiv@divisor+1,w,c
  1149  007956  B4D8               	btfsc	status,2,c
  1150  007958  D021               	goto	l1866
  1151  00795A  0E01               	movlw	1
  1152  00795C  6E05               	movwf	___awdiv@counter,c
  1153  00795E  D005               	goto	l1852
  1154  007960                     l1850:
  1155  007960  90D8               	bcf	status,0,c
  1156  007962  3603               	rlcf	___awdiv@divisor,f,c
  1157  007964  3604               	rlcf	___awdiv@divisor+1,f,c
  1158  007966  2A05               	incf	___awdiv@counter,f,c
  1159  007968  D000               	goto	l1852
  1160  00796A                     l1852:
  1161  00796A  BE04               	btfsc	___awdiv@divisor+1,7,c
  1162  00796C  D002               	goto	l1854
  1163  00796E  D7F8               	goto	l1850
  1164  007970  D000               	goto	l1854
  1165  007972                     l1854:
  1166  007972  90D8               	bcf	status,0,c
  1167  007974  3607               	rlcf	___awdiv@quotient,f,c
  1168  007976  3608               	rlcf	___awdiv@quotient+1,f,c
  1169  007978  5003               	movf	___awdiv@divisor,w,c
  1170  00797A  5C01               	subwf	___awdiv@dividend,w,c
  1171  00797C  5004               	movf	___awdiv@divisor+1,w,c
  1172  00797E  5802               	subwfb	___awdiv@dividend+1,w,c
  1173  007980  A0D8               	btfss	status,0,c
  1174  007982  D006               	goto	l1862
  1175  007984  5003               	movf	___awdiv@divisor,w,c
  1176  007986  5E01               	subwf	___awdiv@dividend,f,c
  1177  007988  5004               	movf	___awdiv@divisor+1,w,c
  1178  00798A  5A02               	subwfb	___awdiv@dividend+1,f,c
  1179  00798C  8007               	bsf	___awdiv@quotient,0,c
  1180  00798E  D000               	goto	l1862
  1181  007990                     l1862:
  1182  007990  90D8               	bcf	status,0,c
  1183  007992  3204               	rrcf	___awdiv@divisor+1,f,c
  1184  007994  3203               	rrcf	___awdiv@divisor,f,c
  1185  007996  2E05               	decfsz	___awdiv@counter,f,c
  1186  007998  D7EC               	goto	l1854
  1187  00799A  D000               	goto	l1866
  1188  00799C                     l1866:
  1189  00799C  5006               	movf	___awdiv@sign,w,c
  1190  00799E  B4D8               	btfsc	status,2,c
  1191  0079A0  D005               	goto	l1870
  1192  0079A2  6C07               	negf	___awdiv@quotient,c
  1193  0079A4  1E08               	comf	___awdiv@quotient+1,f,c
  1194  0079A6  B0D8               	btfsc	status,0,c
  1195  0079A8  2A08               	incf	___awdiv@quotient+1,f,c
  1196  0079AA  D000               	goto	l1870
  1197  0079AC                     l1870:
  1198  0079AC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1199  0079B0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1200  0079B4  D000               	goto	l452
  1201  0079B6                     l452:
  1202  0079B6  0012               	return		;funcret
  1203  0079B8                     __end_of___awdiv:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           intcon	equ	0xFF2
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           indf1	equ	0xFE7
  1213                           postdec1	equ	0xFE5
  1214                           fsr1h	equ	0xFE2
  1215                           fsr1l	equ	0xFE1
  1216                           indf2	equ	0xFDF
  1217                           fsr2h	equ	0xFDA
  1218                           fsr2l	equ	0xFD9
  1219                           status	equ	0xFD8
  1220                           
  1221 ;; *************** function _read_temp *****************
  1222 ;; Defined at:
  1223 ;;		line 170 in file "DS18B20/DS18B20.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  DeviceAddres    1    wreg     unsigned char 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  DeviceAddres    1   39[COMRAM] unsigned char 
  1228 ;;  temperature     3   32[COMRAM] float 
  1229 ;;  temp            2   37[COMRAM] int 
  1230 ;;  temph           1   36[COMRAM] unsigned char 
  1231 ;;  templ           1   35[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  3   27[COMRAM] float 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         3       0       0       0       0       0       0       0       0
  1242 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1244 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1245 ;;Total ram usage:       13 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    3
  1248 ;; This function calls:
  1249 ;;		___awtoft
  1250 ;;		___ftmul
  1251 ;;		_address_Device
  1252 ;;		_delay750ms
  1253 ;;		_init_sensor
  1254 ;;		_read_Byte
  1255 ;;		_write_Byte
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text3
  1262  0079B8                     __ptext3:
  1263                           	opt stack 0
  1264  0079B8                     _read_temp:
  1265                           	opt stack 27
  1266                           
  1267                           ;incstack = 0
  1268                           ;read_temp@DeviceAddress stored from wreg
  1269  0079B8  6E28               	movwf	read_temp@DeviceAddress,c
  1270                           
  1271                           ;DS18B20.c: 172: unsigned char templ,temph;
  1272                           ;DS18B20.c: 173: int temp;
  1273                           ;DS18B20.c: 174: float temperature;
  1274                           ;DS18B20.c: 176: address_Device(DeviceAddress);
  1275  0079BA  5028               	movf	read_temp@DeviceAddress,w,c
  1276  0079BC  6E1F               	movwf	??_read_temp& (0+255),c
  1277  0079BE  6A20               	clrf	(??_read_temp+1)& (0+255),c
  1278  0079C0  C01F  F005         	movff	??_read_temp,address_Device@Adress
  1279  0079C4  C020  F006         	movff	??_read_temp+1,address_Device@Adress+1
  1280  0079C8  ECA6  F03B         	call	_address_Device	;wreg free
  1281                           
  1282                           ;DS18B20.c: 177: write_Byte(0x44);
  1283  0079CC  0E44               	movlw	68
  1284  0079CE  ECE1  F03A         	call	_write_Byte
  1285                           
  1286                           ;DS18B20.c: 178: delay750ms();
  1287  0079D2  EC9E  F03A         	call	_delay750ms	;wreg free
  1288                           
  1289                           ;DS18B20.c: 179: init_sensor();
  1290  0079D6  ECFB  F03A         	call	_init_sensor	;wreg free
  1291                           
  1292                           ;DS18B20.c: 180: address_Device(DeviceAddress);
  1293  0079DA  5028               	movf	read_temp@DeviceAddress,w,c
  1294  0079DC  6E1F               	movwf	??_read_temp& (0+255),c
  1295  0079DE  6A20               	clrf	(??_read_temp+1)& (0+255),c
  1296  0079E0  C01F  F005         	movff	??_read_temp,address_Device@Adress
  1297  0079E4  C020  F006         	movff	??_read_temp+1,address_Device@Adress+1
  1298  0079E8  ECA6  F03B         	call	_address_Device	;wreg free
  1299                           
  1300                           ;DS18B20.c: 181: write_Byte(0xBE);
  1301  0079EC  0EBE               	movlw	190
  1302  0079EE  ECE1  F03A         	call	_write_Byte
  1303                           
  1304                           ;DS18B20.c: 182: templ= read_Byte();
  1305  0079F2  EC88  F03B         	call	_read_Byte	;wreg free
  1306  0079F6  6E24               	movwf	read_temp@templ,c
  1307                           
  1308                           ;DS18B20.c: 183: temph=read_Byte();
  1309  0079F8  EC88  F03B         	call	_read_Byte	;wreg free
  1310  0079FC  6E25               	movwf	read_temp@temph,c
  1311                           
  1312                           ;DS18B20.c: 184: temp=temph;
  1313  0079FE  C025  F026         	movff	read_temp@temph,read_temp@temp
  1314  007A02  6A27               	clrf	read_temp@temp+1,c
  1315                           
  1316                           ;DS18B20.c: 185: temp<<=8;
  1317  007A04  5026               	movf	read_temp@temp,w,c
  1318  007A06  6E27               	movwf	read_temp@temp+1,c
  1319  007A08  6A26               	clrf	read_temp@temp,c
  1320                           
  1321                           ;DS18B20.c: 186: temp|=templ;
  1322  007A0A  5024               	movf	read_temp@templ,w,c
  1323  007A0C  1226               	iorwf	read_temp@temp,f,c
  1324                           
  1325                           ;DS18B20.c: 187: temperature=temp*0.0625;
  1326  007A0E  C026  F009         	movff	read_temp@temp,___awtoft@c
  1327  007A12  C027  F00A         	movff	read_temp@temp+1,___awtoft@c+1
  1328  007A16  EC6A  F03B         	call	___awtoft	;wreg free
  1329  007A1A  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1330  007A1E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1331  007A22  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1332  007A26  0E00               	movlw	0
  1333  007A28  6E10               	movwf	___ftmul@f2,c
  1334  007A2A  0E80               	movlw	128
  1335  007A2C  6E11               	movwf	___ftmul@f2+1,c
  1336  007A2E  0E3D               	movlw	61
  1337  007A30  6E12               	movwf	___ftmul@f2+2,c
  1338  007A32  ECA0  F03E         	call	___ftmul	;wreg free
  1339  007A36  C00D  F021         	movff	?___ftmul,read_temp@temperature
  1340  007A3A  C00E  F022         	movff	?___ftmul+1,read_temp@temperature+1
  1341  007A3E  C00F  F023         	movff	?___ftmul+2,read_temp@temperature+2
  1342                           
  1343                           ;DS18B20.c: 188: return temperature;
  1344  007A42  C021  F01C         	movff	read_temp@temperature,?_read_temp
  1345  007A46  C022  F01D         	movff	read_temp@temperature+1,?_read_temp+1
  1346  007A4A  C023  F01E         	movff	read_temp@temperature+2,?_read_temp+2
  1347  007A4E  D000               	goto	l118
  1348  007A50                     l118:
  1349  007A50  0012               	return		;funcret
  1350  007A52                     __end_of_read_temp:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           intcon	equ	0xFF2
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           indf1	equ	0xFE7
  1360                           postdec1	equ	0xFE5
  1361                           fsr1h	equ	0xFE2
  1362                           fsr1l	equ	0xFE1
  1363                           indf2	equ	0xFDF
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function _read_Byte *****************
  1369 ;; Defined at:
  1370 ;;		line 68 in file "DS18B20/DS18B20.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  i               2    2[COMRAM] int 
  1375 ;;  data            1    1[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      unsigned char 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    1
  1392 ;; This function calls:
  1393 ;;		_read_Bit
  1394 ;; This function is called by:
  1395 ;;		_read_temp
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text4
  1400  007710                     __ptext4:
  1401                           	opt stack 0
  1402  007710                     _read_Byte:
  1403                           	opt stack 28
  1404                           
  1405                           ;DS18B20.c: 70: unsigned char data=0;
  1406                           
  1407                           ;incstack = 0
  1408  007710  0E00               	movlw	0
  1409  007712  6E02               	movwf	read_Byte@data,c
  1410                           
  1411                           ;DS18B20.c: 71: for (int i=0;i<8;i++)
  1412  007714  0E00               	movlw	0
  1413  007716  6E04               	movwf	read_Byte@i+1,c
  1414  007718  0E00               	movlw	0
  1415  00771A  6E03               	movwf	read_Byte@i,c
  1416  00771C                     l1680:
  1417  00771C  BE04               	btfsc	read_Byte@i+1,7,c
  1418  00771E  D008               	goto	l1684
  1419  007720  5004               	movf	read_Byte@i+1,w,c
  1420  007722  E111               	bnz	l1692
  1421  007724  0E08               	movlw	8
  1422  007726  5C03               	subwf	read_Byte@i,w,c
  1423  007728  B0D8               	btfsc	status,0,c
  1424  00772A  D00D               	goto	l1692
  1425  00772C  D001               	goto	l1684
  1426  00772E  D00B               	goto	l1692
  1427  007730                     l1684:
  1428                           
  1429                           ;DS18B20.c: 72: {
  1430                           ;DS18B20.c: 73: data>>=1;
  1431  007730  90D8               	bcf	status,0,c
  1432  007732  3202               	rrcf	read_Byte@data,f,c
  1433                           
  1434                           ;DS18B20.c: 74: if(read_Bit())
  1435  007734  ECAF  F03A         	call	_read_Bit	;wreg free
  1436  007738  0900               	iorlw	0
  1437  00773A  A4D8               	btfss	status,2,c
  1438                           
  1439                           ;DS18B20.c: 75: {
  1440                           ;DS18B20.c: 76: data|=0x80;
  1441  00773C  8E02               	bsf	read_Byte@data,7,c
  1442  00773E  4A03               	infsnz	read_Byte@i,f,c
  1443  007740  2A04               	incf	read_Byte@i+1,f,c
  1444  007742  D7EC               	goto	l1680
  1445  007744  D000               	goto	l1692
  1446  007746                     l1692:
  1447                           
  1448                           ;DS18B20.c: 77: }
  1449                           ;DS18B20.c: 78: }
  1450                           ;DS18B20.c: 79: return data;
  1451  007746  5002               	movf	read_Byte@data,w,c
  1452  007748  D000               	goto	l87
  1453  00774A                     l87:
  1454  00774A  0012               	return		;funcret
  1455  00774C                     __end_of_read_Byte:
  1456                           	opt stack 0
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           intcon	equ	0xFF2
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           indf1	equ	0xFE7
  1465                           postdec1	equ	0xFE5
  1466                           fsr1h	equ	0xFE2
  1467                           fsr1l	equ	0xFE1
  1468                           indf2	equ	0xFDF
  1469                           fsr2h	equ	0xFDA
  1470                           fsr2l	equ	0xFD9
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _read_Bit *****************
  1474 ;; Defined at:
  1475 ;;		line 52 in file "DS18B20/DS18B20.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  result          1    0[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      unsigned char 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        1 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_read_Byte
  1499 ;;		_search_Devices
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text5
  1504  00755E                     __ptext5:
  1505                           	opt stack 0
  1506  00755E                     _read_Bit:
  1507                           	opt stack 29
  1508                           
  1509                           ;DS18B20.c: 54: unsigned char result = 0x00;
  1510                           
  1511                           ;incstack = 0
  1512  00755E  0E00               	movlw	0
  1513  007560  6E01               	movwf	read_Bit@result,c
  1514                           
  1515                           ;DS18B20.c: 56: TRISA0=0;
  1516  007562  9092               	bcf	3986,0,c	;volatile
  1517                           
  1518                           ;DS18B20.c: 57: LATA0=0;
  1519  007564  9089               	bcf	3977,0,c	;volatile
  1520                           
  1521                           ;DS18B20.c: 58: _delay((unsigned long)((6)*(8000000/4000000.0)));
  1522  007566  0E04               	movlw	4
  1523  007568                     u1297:
  1524  007568  2EE8               	decfsz	wreg,f,c
  1525  00756A  D7FE               	goto	u1297
  1526                           
  1527                           ;DS18B20.c: 59: TRISA0=0;
  1528  00756C  9092               	bcf	3986,0,c	;volatile
  1529                           
  1530                           ;DS18B20.c: 60: LATA0=1;
  1531  00756E  8089               	bsf	3977,0,c	;volatile
  1532                           
  1533                           ;DS18B20.c: 61: _delay((unsigned long)((9)*(8000000/4000000.0)));
  1534  007570  0E06               	movlw	6
  1535  007572                     u1307:
  1536  007572  2EE8               	decfsz	wreg,f,c
  1537  007574  D7FE               	goto	u1307
  1538                           
  1539                           ;DS18B20.c: 62: TRISA0=1;
  1540  007576  8092               	bsf	3986,0,c	;volatile
  1541                           
  1542                           ;DS18B20.c: 63: result= RA0;
  1543  007578  0E00               	movlw	0
  1544  00757A  B080               	btfsc	3968,0,c	;volatile
  1545  00757C  0E01               	movlw	1
  1546  00757E  6E01               	movwf	read_Bit@result,c
  1547                           
  1548                           ;DS18B20.c: 64: _delay((unsigned long)((55)*(8000000/4000000.0)));
  1549  007580  0E24               	movlw	36
  1550  007582                     u1317:
  1551  007582  2EE8               	decfsz	wreg,f,c
  1552  007584  D7FE               	goto	u1317
  1553  007586  D000               	nop2		;nop
  1554                           
  1555                           ;DS18B20.c: 65: return result;
  1556  007588  5001               	movf	read_Bit@result,w,c
  1557  00758A  D000               	goto	l81
  1558  00758C                     l81:
  1559  00758C  0012               	return		;funcret
  1560  00758E                     __end_of_read_Bit:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           intcon	equ	0xFF2
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           indf1	equ	0xFE7
  1570                           postdec1	equ	0xFE5
  1571                           fsr1h	equ	0xFE2
  1572                           fsr1l	equ	0xFE1
  1573                           indf2	equ	0xFDF
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _delay750ms *****************
  1579 ;; Defined at:
  1580 ;;		line 214 in file "DS18B20/DS18B20.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;		None               void
  1587 ;; Registers used:
  1588 ;;		wreg, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    1
  1601 ;; This function calls:
  1602 ;;		_delay100ms
  1603 ;;		_delay50ms
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;;		_read_temp
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text6
  1611  00753C                     __ptext6:
  1612                           	opt stack 0
  1613  00753C                     _delay750ms:
  1614                           	opt stack 28
  1615                           
  1616                           ;DS18B20.c: 216: delay100ms();
  1617                           
  1618                           ;incstack = 0
  1619  00753C  EC29  F03D         	call	_delay100ms	;wreg free
  1620                           
  1621                           ;DS18B20.c: 217: delay100ms();
  1622  007540  EC29  F03D         	call	_delay100ms	;wreg free
  1623                           
  1624                           ;DS18B20.c: 218: delay100ms();
  1625  007544  EC29  F03D         	call	_delay100ms	;wreg free
  1626                           
  1627                           ;DS18B20.c: 219: delay100ms();
  1628  007548  EC29  F03D         	call	_delay100ms	;wreg free
  1629                           
  1630                           ;DS18B20.c: 220: delay100ms();
  1631  00754C  EC29  F03D         	call	_delay100ms	;wreg free
  1632                           
  1633                           ;DS18B20.c: 221: delay100ms();
  1634  007550  EC29  F03D         	call	_delay100ms	;wreg free
  1635                           
  1636                           ;DS18B20.c: 222: delay100ms();
  1637  007554  EC29  F03D         	call	_delay100ms	;wreg free
  1638                           
  1639                           ;DS18B20.c: 223: delay50ms();
  1640  007558  ECCA  F03B         	call	_delay50ms	;wreg free
  1641  00755C  0012               	return		;funcret
  1642  00755E                     __end_of_delay750ms:
  1643                           	opt stack 0
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           intcon	equ	0xFF2
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           indf1	equ	0xFE7
  1652                           postdec1	equ	0xFE5
  1653                           fsr1h	equ	0xFE2
  1654                           fsr1l	equ	0xFE1
  1655                           indf2	equ	0xFDF
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _delay50ms *****************
  1661 ;; Defined at:
  1662 ;;		line 205 in file "DS18B20/DS18B20.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;		None               void
  1669 ;; Registers used:
  1670 ;;		wreg
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;;		_delay750ms
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text7
  1691  007794                     __ptext7:
  1692                           	opt stack 0
  1693  007794                     _delay50ms:
  1694                           	opt stack 28
  1695                           
  1696                           ;DS18B20.c: 207: _delay((unsigned long)((10)*(8000000/4000.0)));
  1697                           
  1698                           ;incstack = 0
  1699  007794  0E1A               	movlw	26
  1700  007796  6E01               	movwf	??_delay50ms& (0+255),c
  1701  007798  0EF8               	movlw	248
  1702  00779A                     u1327:
  1703  00779A  2EE8               	decfsz	wreg,f,c
  1704  00779C  D7FE               	goto	u1327
  1705  00779E  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1706  0077A0  D7FC               	goto	u1327
  1707  0077A2  D000               	nop2	
  1708                           
  1709                           ;DS18B20.c: 208: _delay((unsigned long)((10)*(8000000/4000.0)));
  1710  0077A4  0E1A               	movlw	26
  1711  0077A6  6E01               	movwf	??_delay50ms& (0+255),c
  1712  0077A8  0EF8               	movlw	248
  1713  0077AA                     u1337:
  1714  0077AA  2EE8               	decfsz	wreg,f,c
  1715  0077AC  D7FE               	goto	u1337
  1716  0077AE  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1717  0077B0  D7FC               	goto	u1337
  1718  0077B2  D000               	nop2	
  1719                           
  1720                           ;DS18B20.c: 209: _delay((unsigned long)((10)*(8000000/4000.0)));
  1721  0077B4  0E1A               	movlw	26
  1722  0077B6  6E01               	movwf	??_delay50ms& (0+255),c
  1723  0077B8  0EF8               	movlw	248
  1724  0077BA                     u1347:
  1725  0077BA  2EE8               	decfsz	wreg,f,c
  1726  0077BC  D7FE               	goto	u1347
  1727  0077BE  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1728  0077C0  D7FC               	goto	u1347
  1729  0077C2  D000               	nop2	
  1730                           
  1731                           ;DS18B20.c: 210: _delay((unsigned long)((10)*(8000000/4000.0)));
  1732  0077C4  0E1A               	movlw	26
  1733  0077C6  6E01               	movwf	??_delay50ms& (0+255),c
  1734  0077C8  0EF8               	movlw	248
  1735  0077CA                     u1357:
  1736  0077CA  2EE8               	decfsz	wreg,f,c
  1737  0077CC  D7FE               	goto	u1357
  1738  0077CE  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1739  0077D0  D7FC               	goto	u1357
  1740  0077D2  D000               	nop2	
  1741                           
  1742                           ;DS18B20.c: 211: _delay((unsigned long)((10)*(8000000/4000.0)));
  1743  0077D4  0E1A               	movlw	26
  1744  0077D6  6E01               	movwf	??_delay50ms& (0+255),c
  1745  0077D8  0EF8               	movlw	248
  1746  0077DA                     u1367:
  1747  0077DA  2EE8               	decfsz	wreg,f,c
  1748  0077DC  D7FE               	goto	u1367
  1749  0077DE  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1750  0077E0  D7FC               	goto	u1367
  1751  0077E2  D000               	nop2	
  1752  0077E4  0012               	return		;funcret
  1753  0077E6                     __end_of_delay50ms:
  1754                           	opt stack 0
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           intcon	equ	0xFF2
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           indf1	equ	0xFE7
  1763                           postdec1	equ	0xFE5
  1764                           fsr1h	equ	0xFE2
  1765                           fsr1l	equ	0xFE1
  1766                           indf2	equ	0xFDF
  1767                           fsr2h	equ	0xFDA
  1768                           fsr2l	equ	0xFD9
  1769                           status	equ	0xFD8
  1770                           
  1771 ;; *************** function _delay100ms *****************
  1772 ;; Defined at:
  1773 ;;		line 191 in file "DS18B20/DS18B20.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;		None               void
  1780 ;; Registers used:
  1781 ;;		wreg
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1789 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1790 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1791 ;;Total ram usage:        1 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_delay750ms
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text8
  1801  007A52                     __ptext8:
  1802                           	opt stack 0
  1803  007A52                     _delay100ms:
  1804                           	opt stack 28
  1805                           
  1806                           ;DS18B20.c: 193: _delay((unsigned long)((10)*(8000000/4000.0)));
  1807                           
  1808                           ;incstack = 0
  1809  007A52  0E1A               	movlw	26
  1810  007A54  6E01               	movwf	??_delay100ms& (0+255),c
  1811  007A56  0EF8               	movlw	248
  1812  007A58                     u1377:
  1813  007A58  2EE8               	decfsz	wreg,f,c
  1814  007A5A  D7FE               	goto	u1377
  1815  007A5C  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1816  007A5E  D7FC               	goto	u1377
  1817  007A60  D000               	nop2	
  1818                           
  1819                           ;DS18B20.c: 194: _delay((unsigned long)((10)*(8000000/4000.0)));
  1820  007A62  0E1A               	movlw	26
  1821  007A64  6E01               	movwf	??_delay100ms& (0+255),c
  1822  007A66  0EF8               	movlw	248
  1823  007A68                     u1387:
  1824  007A68  2EE8               	decfsz	wreg,f,c
  1825  007A6A  D7FE               	goto	u1387
  1826  007A6C  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1827  007A6E  D7FC               	goto	u1387
  1828  007A70  D000               	nop2	
  1829                           
  1830                           ;DS18B20.c: 195: _delay((unsigned long)((10)*(8000000/4000.0)));
  1831  007A72  0E1A               	movlw	26
  1832  007A74  6E01               	movwf	??_delay100ms& (0+255),c
  1833  007A76  0EF8               	movlw	248
  1834  007A78                     u1397:
  1835  007A78  2EE8               	decfsz	wreg,f,c
  1836  007A7A  D7FE               	goto	u1397
  1837  007A7C  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1838  007A7E  D7FC               	goto	u1397
  1839  007A80  D000               	nop2	
  1840                           
  1841                           ;DS18B20.c: 196: _delay((unsigned long)((10)*(8000000/4000.0)));
  1842  007A82  0E1A               	movlw	26
  1843  007A84  6E01               	movwf	??_delay100ms& (0+255),c
  1844  007A86  0EF8               	movlw	248
  1845  007A88                     u1407:
  1846  007A88  2EE8               	decfsz	wreg,f,c
  1847  007A8A  D7FE               	goto	u1407
  1848  007A8C  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1849  007A8E  D7FC               	goto	u1407
  1850  007A90  D000               	nop2	
  1851                           
  1852                           ;DS18B20.c: 197: _delay((unsigned long)((10)*(8000000/4000.0)));
  1853  007A92  0E1A               	movlw	26
  1854  007A94  6E01               	movwf	??_delay100ms& (0+255),c
  1855  007A96  0EF8               	movlw	248
  1856  007A98                     u1417:
  1857  007A98  2EE8               	decfsz	wreg,f,c
  1858  007A9A  D7FE               	goto	u1417
  1859  007A9C  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1860  007A9E  D7FC               	goto	u1417
  1861  007AA0  D000               	nop2	
  1862                           
  1863                           ;DS18B20.c: 198: _delay((unsigned long)((10)*(8000000/4000.0)));
  1864  007AA2  0E1A               	movlw	26
  1865  007AA4  6E01               	movwf	??_delay100ms& (0+255),c
  1866  007AA6  0EF8               	movlw	248
  1867  007AA8                     u1427:
  1868  007AA8  2EE8               	decfsz	wreg,f,c
  1869  007AAA  D7FE               	goto	u1427
  1870  007AAC  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1871  007AAE  D7FC               	goto	u1427
  1872  007AB0  D000               	nop2	
  1873                           
  1874                           ;DS18B20.c: 199: _delay((unsigned long)((10)*(8000000/4000.0)));
  1875  007AB2  0E1A               	movlw	26
  1876  007AB4  6E01               	movwf	??_delay100ms& (0+255),c
  1877  007AB6  0EF8               	movlw	248
  1878  007AB8                     u1437:
  1879  007AB8  2EE8               	decfsz	wreg,f,c
  1880  007ABA  D7FE               	goto	u1437
  1881  007ABC  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1882  007ABE  D7FC               	goto	u1437
  1883  007AC0  D000               	nop2	
  1884                           
  1885                           ;DS18B20.c: 200: _delay((unsigned long)((10)*(8000000/4000.0)));
  1886  007AC2  0E1A               	movlw	26
  1887  007AC4  6E01               	movwf	??_delay100ms& (0+255),c
  1888  007AC6  0EF8               	movlw	248
  1889  007AC8                     u1447:
  1890  007AC8  2EE8               	decfsz	wreg,f,c
  1891  007ACA  D7FE               	goto	u1447
  1892  007ACC  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1893  007ACE  D7FC               	goto	u1447
  1894  007AD0  D000               	nop2	
  1895                           
  1896                           ;DS18B20.c: 201: _delay((unsigned long)((10)*(8000000/4000.0)));
  1897  007AD2  0E1A               	movlw	26
  1898  007AD4  6E01               	movwf	??_delay100ms& (0+255),c
  1899  007AD6  0EF8               	movlw	248
  1900  007AD8                     u1457:
  1901  007AD8  2EE8               	decfsz	wreg,f,c
  1902  007ADA  D7FE               	goto	u1457
  1903  007ADC  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1904  007ADE  D7FC               	goto	u1457
  1905  007AE0  D000               	nop2	
  1906                           
  1907                           ;DS18B20.c: 202: _delay((unsigned long)((10)*(8000000/4000.0)));
  1908  007AE2  0E1A               	movlw	26
  1909  007AE4  6E01               	movwf	??_delay100ms& (0+255),c
  1910  007AE6  0EF8               	movlw	248
  1911  007AE8                     u1467:
  1912  007AE8  2EE8               	decfsz	wreg,f,c
  1913  007AEA  D7FE               	goto	u1467
  1914  007AEC  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1915  007AEE  D7FC               	goto	u1467
  1916  007AF0  D000               	nop2	
  1917  007AF2  0012               	return		;funcret
  1918  007AF4                     __end_of_delay100ms:
  1919                           	opt stack 0
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           indf1	equ	0xFE7
  1928                           postdec1	equ	0xFE5
  1929                           fsr1h	equ	0xFE2
  1930                           fsr1l	equ	0xFE1
  1931                           indf2	equ	0xFDF
  1932                           fsr2h	equ	0xFDA
  1933                           fsr2l	equ	0xFD9
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function _address_Device *****************
  1937 ;; Defined at:
  1938 ;;		line 82 in file "DS18B20/DS18B20.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  Adress          2    4[COMRAM] PTR unsigned char 
  1941 ;;		 -> RAM(2047), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  i               2    6[COMRAM] int 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      unsigned char 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         2       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        4 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    2
  1960 ;; This function calls:
  1961 ;;		_init_sensor
  1962 ;;		_write_Byte
  1963 ;; This function is called by:
  1964 ;;		_read_temp
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text9
  1969  00774C                     __ptext9:
  1970                           	opt stack 0
  1971  00774C                     _address_Device:
  1972                           	opt stack 27
  1973                           
  1974                           ;DS18B20.c: 84: if( init_sensor()==0)
  1975                           
  1976                           ;incstack = 0
  1977  00774C  ECFB  F03A         	call	_init_sensor	;wreg free
  1978  007750  0900               	iorlw	0
  1979  007752  A4D8               	btfss	status,2,c
  1980  007754  D01E               	goto	l93
  1981                           
  1982                           ;DS18B20.c: 85: {
  1983                           ;DS18B20.c: 86: write_Byte(0x55);
  1984  007756  0E55               	movlw	85
  1985  007758  ECE1  F03A         	call	_write_Byte
  1986                           
  1987                           ;DS18B20.c: 87: for(int i=0;i<8;i++)
  1988  00775C  0E00               	movlw	0
  1989  00775E  6E08               	movwf	address_Device@i+1,c
  1990  007760  0E00               	movlw	0
  1991  007762  6E07               	movwf	address_Device@i,c
  1992  007764                     l1702:
  1993  007764  BE08               	btfsc	address_Device@i+1,7,c
  1994  007766  D008               	goto	l1706
  1995  007768  5008               	movf	address_Device@i+1,w,c
  1996  00776A  E113               	bnz	l93
  1997  00776C  0E08               	movlw	8
  1998  00776E  5C07               	subwf	address_Device@i,w,c
  1999  007770  B0D8               	btfsc	status,0,c
  2000  007772  D00F               	goto	l93
  2001  007774  D001               	goto	l1706
  2002  007776  D00D               	goto	l93
  2003  007778                     l1706:
  2004                           
  2005                           ;DS18B20.c: 88: {
  2006                           ;DS18B20.c: 89: write_Byte(Adress[i]);
  2007  007778  5007               	movf	address_Device@i,w,c
  2008  00777A  2405               	addwf	address_Device@Adress,w,c
  2009  00777C  6ED9               	movwf	fsr2l,c
  2010  00777E  5008               	movf	address_Device@i+1,w,c
  2011  007780  2006               	addwfc	address_Device@Adress+1,w,c
  2012  007782  6EDA               	movwf	fsr2h,c
  2013  007784  50DF               	movf	indf2,w,c
  2014  007786  ECE1  F03A         	call	_write_Byte
  2015  00778A  4A07               	infsnz	address_Device@i,f,c
  2016  00778C  2A08               	incf	address_Device@i+1,f,c
  2017  00778E  D7EA               	goto	l1702
  2018                           
  2019                           ;DS18B20.c: 93: {
  2020                           ;DS18B20.c: 94: return 0;
  2021                           ;	Return value of _address_Device is never used
  2022                           
  2023                           ;DS18B20.c: 92: }else
  2024                           
  2025                           ;DS18B20.c: 90: }
  2026                           ;DS18B20.c: 91: return 1;
  2027                           ;	Return value of _address_Device is never used
  2028  007790  D000               	goto	l93
  2029  007792                     l93:
  2030  007792  0012               	return		;funcret
  2031  007794                     __end_of_address_Device:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           intcon	equ	0xFF2
  2038                           postinc0	equ	0xFEE
  2039                           wreg	equ	0xFE8
  2040                           indf1	equ	0xFE7
  2041                           postdec1	equ	0xFE5
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           indf2	equ	0xFDF
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function _write_Byte *****************
  2050 ;; Defined at:
  2051 ;;		line 43 in file "DS18B20/DS18B20.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  data            1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  data            1    1[COMRAM] unsigned char 
  2056 ;;  i               2    2[COMRAM] int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2066 ;;      Params:         0       0       0       0       0       0       0       0       0
  2067 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2069 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2070 ;;Total ram usage:        3 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    1
  2073 ;; This function calls:
  2074 ;;		_write_Bit
  2075 ;; This function is called by:
  2076 ;;		_address_Device
  2077 ;;		_search_Devices
  2078 ;;		_read_temp
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text10
  2083  0075C2                     __ptext10:
  2084                           	opt stack 0
  2085  0075C2                     _write_Byte:
  2086                           	opt stack 28
  2087                           
  2088                           ;incstack = 0
  2089                           ;write_Byte@data stored from wreg
  2090  0075C2  6E02               	movwf	write_Byte@data,c
  2091                           
  2092                           ;DS18B20.c: 45: for(int i=0;i<8;i++)
  2093  0075C4  0E00               	movlw	0
  2094  0075C6  6E04               	movwf	write_Byte@i+1,c
  2095  0075C8  0E00               	movlw	0
  2096  0075CA  6E03               	movwf	write_Byte@i,c
  2097  0075CC                     l1598:
  2098  0075CC  BE04               	btfsc	write_Byte@i+1,7,c
  2099  0075CE  D008               	goto	l1602
  2100  0075D0  5004               	movf	write_Byte@i+1,w,c
  2101  0075D2  E110               	bnz	l78
  2102  0075D4  0E08               	movlw	8
  2103  0075D6  5C03               	subwf	write_Byte@i,w,c
  2104  0075D8  B0D8               	btfsc	status,0,c
  2105  0075DA  D00C               	goto	l78
  2106  0075DC  D001               	goto	l1602
  2107  0075DE  D00A               	goto	l78
  2108  0075E0                     l1602:
  2109                           
  2110                           ;DS18B20.c: 46: {
  2111                           ;DS18B20.c: 47: write_Bit(data & 0x01);
  2112  0075E0  5002               	movf	write_Byte@data,w,c
  2113  0075E2  0B01               	andlw	1
  2114  0075E4  EC31  F03B         	call	_write_Bit
  2115                           
  2116                           ;DS18B20.c: 48: data>>=1;
  2117  0075E8  90D8               	bcf	status,0,c
  2118  0075EA  3202               	rrcf	write_Byte@data,f,c
  2119  0075EC  4A03               	infsnz	write_Byte@i,f,c
  2120  0075EE  2A04               	incf	write_Byte@i+1,f,c
  2121  0075F0  D7ED               	goto	l1598
  2122  0075F2  D000               	goto	l78
  2123  0075F4                     l78:
  2124  0075F4  0012               	return		;funcret
  2125  0075F6                     __end_of_write_Byte:
  2126                           	opt stack 0
  2127                           tblptru	equ	0xFF8
  2128                           tblptrh	equ	0xFF7
  2129                           tblptrl	equ	0xFF6
  2130                           tablat	equ	0xFF5
  2131                           intcon	equ	0xFF2
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           indf1	equ	0xFE7
  2135                           postdec1	equ	0xFE5
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           indf2	equ	0xFDF
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _write_Bit *****************
  2144 ;; Defined at:
  2145 ;;		line 21 in file "DS18B20/DS18B20.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  WriteArg        1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  WriteArg        1    0[COMRAM] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        1 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_write_Byte
  2169 ;;		_search_Devices
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text11
  2174  007662                     __ptext11:
  2175                           	opt stack 0
  2176  007662                     _write_Bit:
  2177                           	opt stack 28
  2178                           
  2179                           ;incstack = 0
  2180                           ;write_Bit@WriteArg stored from wreg
  2181  007662  6E01               	movwf	write_Bit@WriteArg,c
  2182                           
  2183                           ;DS18B20.c: 23: if (WriteArg==1)
  2184  007664  0401               	decf	write_Bit@WriteArg,w,c
  2185  007666  A4D8               	btfss	status,2,c
  2186  007668  D00B               	goto	l71
  2187                           
  2188                           ;DS18B20.c: 24: {
  2189                           ;DS18B20.c: 25: TRISA0=0;
  2190  00766A  9092               	bcf	3986,0,c	;volatile
  2191                           
  2192                           ;DS18B20.c: 26: LATA0=0;
  2193  00766C  9089               	bcf	3977,0,c	;volatile
  2194                           
  2195                           ;DS18B20.c: 27: _delay((unsigned long)((6)*(8000000/4000000.0)));
  2196  00766E  0E04               	movlw	4
  2197  007670                     u1477:
  2198  007670  2EE8               	decfsz	wreg,f,c
  2199  007672  D7FE               	goto	u1477
  2200                           
  2201                           ;DS18B20.c: 28: TRISA0=0;
  2202  007674  9092               	bcf	3986,0,c	;volatile
  2203                           
  2204                           ;DS18B20.c: 29: LATA0=1;
  2205  007676  8089               	bsf	3977,0,c	;volatile
  2206                           
  2207                           ;DS18B20.c: 30: _delay((unsigned long)((64)*(8000000/4000000.0)));
  2208  007678  0E2A               	movlw	42
  2209  00767A                     u1487:
  2210  00767A  2EE8               	decfsz	wreg,f,c
  2211  00767C  D7FE               	goto	u1487
  2212  00767E  D00A               	goto	L3
  2213  007680                     l71:
  2214                           
  2215                           ;DS18B20.c: 32: else
  2216                           ;DS18B20.c: 33: {
  2217                           ;DS18B20.c: 34: TRISA0=0;
  2218  007680  9092               	bcf	3986,0,c	;volatile
  2219                           
  2220                           ;DS18B20.c: 35: LATA0=0;
  2221  007682  9089               	bcf	3977,0,c	;volatile
  2222                           
  2223                           ;DS18B20.c: 36: _delay((unsigned long)((60)*(8000000/4000000.0)));
  2224  007684  0E28               	movlw	40
  2225  007686                     u1497:
  2226  007686  2EE8               	decfsz	wreg,f,c
  2227  007688  D7FE               	goto	u1497
  2228                           
  2229                           ;DS18B20.c: 37: TRISA0=0;
  2230  00768A  9092               	bcf	3986,0,c	;volatile
  2231                           
  2232                           ;DS18B20.c: 38: LATA0=1;
  2233  00768C  8089               	bsf	3977,0,c	;volatile
  2234                           
  2235                           ;DS18B20.c: 39: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2236  00768E  0E06               	movlw	6
  2237  007690                     u1507:
  2238  007690  2EE8               	decfsz	wreg,f,c
  2239  007692  D7FE               	goto	u1507
  2240  007694                     L3:
  2241  007694  D000               	nop2		;nop
  2242  007696  D000               	goto	l73
  2243  007698                     l73:
  2244  007698  0012               	return		;funcret
  2245  00769A                     __end_of_write_Bit:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           intcon	equ	0xFF2
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           indf1	equ	0xFE7
  2255                           postdec1	equ	0xFE5
  2256                           fsr1h	equ	0xFE2
  2257                           fsr1l	equ	0xFE1
  2258                           indf2	equ	0xFDF
  2259                           fsr2h	equ	0xFDA
  2260                           fsr2l	equ	0xFD9
  2261                           status	equ	0xFD8
  2262                           
  2263 ;; *************** function _init_sensor *****************
  2264 ;; Defined at:
  2265 ;;		line 5 in file "DS18B20/DS18B20.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  reponse         1    0[COMRAM] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      unsigned char 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0
  2280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2282 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2283 ;;Total ram usage:        1 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;;		_address_Device
  2290 ;;		_search_Devices
  2291 ;;		_read_temp
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text12
  2296  0075F6                     __ptext12:
  2297                           	opt stack 0
  2298  0075F6                     _init_sensor:
  2299                           	opt stack 29
  2300                           
  2301                           ;DS18B20.c: 7: unsigned char reponse=1;
  2302                           
  2303                           ;incstack = 0
  2304  0075F6  0E01               	movlw	1
  2305  0075F8  6E01               	movwf	init_sensor@reponse,c
  2306                           
  2307                           ;DS18B20.c: 8: TRISA0=0;
  2308  0075FA  9092               	bcf	3986,0,c	;volatile
  2309                           
  2310                           ;DS18B20.c: 9: LATA0=0;
  2311  0075FC  9089               	bcf	3977,0,c	;volatile
  2312                           
  2313                           ;DS18B20.c: 10: _delay((unsigned long)((480)*(8000000/4000000.0)));
  2314  0075FE  0EF0               	movlw	240
  2315  007600                     u1517:
  2316  007600  F000               	nop	
  2317  007602  2EE8               	decfsz	wreg,f,c
  2318  007604  D7FD               	goto	u1517
  2319                           
  2320                           ;DS18B20.c: 11: LATA0=1;
  2321  007606  8089               	bsf	3977,0,c	;volatile
  2322                           
  2323                           ;DS18B20.c: 12: _delay((unsigned long)((64)*(8000000/4000000.0)));
  2324  007608  0E2A               	movlw	42
  2325  00760A                     u1527:
  2326  00760A  2EE8               	decfsz	wreg,f,c
  2327  00760C  D7FE               	goto	u1527
  2328  00760E  D000               	nop2		;nop
  2329                           
  2330                           ;DS18B20.c: 13: TRISA0=1;
  2331  007610  8092               	bsf	3986,0,c	;volatile
  2332                           
  2333                           ;DS18B20.c: 14: reponse= RA0;
  2334  007612  0E00               	movlw	0
  2335  007614  B080               	btfsc	3968,0,c	;volatile
  2336  007616  0E01               	movlw	1
  2337  007618  6E01               	movwf	init_sensor@reponse,c
  2338                           
  2339                           ;DS18B20.c: 15: _delay((unsigned long)((416)*(8000000/4000000.0)));
  2340  00761A  0ED0               	movlw	208
  2341  00761C                     u1537:
  2342  00761C  F000               	nop	
  2343  00761E  2EE8               	decfsz	wreg,f,c
  2344  007620  D7FD               	goto	u1537
  2345                           
  2346                           ;DS18B20.c: 16: TRISA0=0;
  2347  007622  9092               	bcf	3986,0,c	;volatile
  2348                           
  2349                           ;DS18B20.c: 17: LATA0=1;
  2350  007624  8089               	bsf	3977,0,c	;volatile
  2351                           
  2352                           ;DS18B20.c: 18: return reponse;
  2353  007626  5001               	movf	init_sensor@reponse,w,c
  2354  007628  D000               	goto	l68
  2355  00762A                     l68:
  2356  00762A  0012               	return		;funcret
  2357  00762C                     __end_of_init_sensor:
  2358                           	opt stack 0
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           intcon	equ	0xFF2
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           indf1	equ	0xFE7
  2367                           postdec1	equ	0xFE5
  2368                           fsr1h	equ	0xFE2
  2369                           fsr1l	equ	0xFE1
  2370                           indf2	equ	0xFDF
  2371                           fsr2h	equ	0xFDA
  2372                           fsr2l	equ	0xFD9
  2373                           status	equ	0xFD8
  2374                           
  2375 ;; *************** function ___ftmul *****************
  2376 ;; Defined at:
  2377 ;;		line 62 in file "/Applications/microchip/xc8/v1.34/sources/common/ftmul.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  f1              3   12[COMRAM] float 
  2380 ;;  f2              3   15[COMRAM] float 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  2383 ;;  sign            1   26[COMRAM] unsigned char 
  2384 ;;  cntr            1   25[COMRAM] unsigned char 
  2385 ;;  exp             1   21[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  3   12[COMRAM] float 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         6       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2398 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:       15 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    1
  2402 ;; This function calls:
  2403 ;;		___ftpack
  2404 ;; This function is called by:
  2405 ;;		_read_temp
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text13
  2410  007D40                     __ptext13:
  2411                           	opt stack 0
  2412  007D40                     ___ftmul:
  2413                           	opt stack 28
  2414                           
  2415                           ;incstack = 0
  2416  007D40  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  2417  007D44  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2418  007D46  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2419  007D48  340E               	rlcf	___ftmul@f1+1,w,c
  2420  007D4A  3613               	rlcf	??___ftmul& (0+255),f,c
  2421  007D4C  E301               	bnc	u861
  2422  007D4E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2423  007D50                     u861:
  2424  007D50  5013               	movf	??___ftmul,w,c
  2425  007D52  6E16               	movwf	___ftmul@exp,c
  2426  007D54  5016               	movf	___ftmul@exp,w,c
  2427  007D56  A4D8               	btfss	status,2,c
  2428  007D58  D002               	goto	l1788
  2429  007D5A  D00E               	goto	l1790
  2430  007D5C  D06C               	goto	l654
  2431  007D5E                     l1788:
  2432  007D5E  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  2433  007D62  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2434  007D64  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2435  007D66  3411               	rlcf	___ftmul@f2+1,w,c
  2436  007D68  3613               	rlcf	??___ftmul& (0+255),f,c
  2437  007D6A  E301               	bnc	u881
  2438  007D6C  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2439  007D6E                     u881:
  2440  007D6E  5013               	movf	??___ftmul,w,c
  2441  007D70  6E1B               	movwf	___ftmul@sign,c
  2442  007D72  501B               	movf	___ftmul@sign,w,c
  2443  007D74  A4D8               	btfss	status,2,c
  2444  007D76  D007               	goto	l1794
  2445  007D78                     l1790:
  2446  007D78  0E00               	movlw	0
  2447  007D7A  6E0D               	movwf	?___ftmul,c
  2448  007D7C  0E00               	movlw	0
  2449  007D7E  6E0E               	movwf	?___ftmul+1,c
  2450  007D80  0E00               	movlw	0
  2451  007D82  6E0F               	movwf	?___ftmul+2,c
  2452  007D84  D058               	goto	l654
  2453  007D86                     l1794:
  2454  007D86  501B               	movf	___ftmul@sign,w,c
  2455  007D88  0F7B               	addlw	123
  2456  007D8A  2616               	addwf	___ftmul@exp,f,c
  2457  007D8C  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  2458  007D90  5012               	movf	___ftmul@f2+2,w,c
  2459  007D92  1A1B               	xorwf	___ftmul@sign,f,c
  2460  007D94  0E80               	movlw	128
  2461  007D96  161B               	andwf	___ftmul@sign,f,c
  2462  007D98  8E0E               	bsf	___ftmul@f1+1,7,c
  2463  007D9A  8E11               	bsf	___ftmul@f2+1,7,c
  2464  007D9C  0EFF               	movlw	255
  2465  007D9E  1610               	andwf	___ftmul@f2,f,c
  2466  007DA0  0EFF               	movlw	255
  2467  007DA2  1611               	andwf	___ftmul@f2+1,f,c
  2468  007DA4  0E00               	movlw	0
  2469  007DA6  1612               	andwf	___ftmul@f2+2,f,c
  2470  007DA8  0E00               	movlw	0
  2471  007DAA  6E17               	movwf	___ftmul@f3_as_product,c
  2472  007DAC  0E00               	movlw	0
  2473  007DAE  6E18               	movwf	___ftmul@f3_as_product+1,c
  2474  007DB0  0E00               	movlw	0
  2475  007DB2  6E19               	movwf	___ftmul@f3_as_product+2,c
  2476  007DB4  0E07               	movlw	7
  2477  007DB6  6E1A               	movwf	___ftmul@cntr,c
  2478  007DB8  D000               	goto	l1808
  2479  007DBA                     l1808:
  2480  007DBA  A00D               	btfss	___ftmul@f1,0,c
  2481  007DBC  D007               	goto	l1812
  2482  007DBE  5010               	movf	___ftmul@f2,w,c
  2483  007DC0  2617               	addwf	___ftmul@f3_as_product,f,c
  2484  007DC2  5011               	movf	___ftmul@f2+1,w,c
  2485  007DC4  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2486  007DC6  5012               	movf	___ftmul@f2+2,w,c
  2487  007DC8  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2488  007DCA  D000               	goto	l1812
  2489  007DCC                     l1812:
  2490  007DCC  90D8               	bcf	status,0,c
  2491  007DCE  320F               	rrcf	___ftmul@f1+2,f,c
  2492  007DD0  320E               	rrcf	___ftmul@f1+1,f,c
  2493  007DD2  320D               	rrcf	___ftmul@f1,f,c
  2494  007DD4  90D8               	bcf	status,0,c
  2495  007DD6  3610               	rlcf	___ftmul@f2,f,c
  2496  007DD8  3611               	rlcf	___ftmul@f2+1,f,c
  2497  007DDA  3612               	rlcf	___ftmul@f2+2,f,c
  2498  007DDC  2E1A               	decfsz	___ftmul@cntr,f,c
  2499  007DDE  D7ED               	goto	l1808
  2500  007DE0  D000               	goto	l1816
  2501  007DE2                     l1816:
  2502  007DE2  0E09               	movlw	9
  2503  007DE4  6E1A               	movwf	___ftmul@cntr,c
  2504  007DE6  D000               	goto	l1818
  2505  007DE8                     l1818:
  2506  007DE8  A00D               	btfss	___ftmul@f1,0,c
  2507  007DEA  D007               	goto	l1822
  2508  007DEC  5010               	movf	___ftmul@f2,w,c
  2509  007DEE  2617               	addwf	___ftmul@f3_as_product,f,c
  2510  007DF0  5011               	movf	___ftmul@f2+1,w,c
  2511  007DF2  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2512  007DF4  5012               	movf	___ftmul@f2+2,w,c
  2513  007DF6  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2514  007DF8  D000               	goto	l1822
  2515  007DFA                     l1822:
  2516  007DFA  90D8               	bcf	status,0,c
  2517  007DFC  320F               	rrcf	___ftmul@f1+2,f,c
  2518  007DFE  320E               	rrcf	___ftmul@f1+1,f,c
  2519  007E00  320D               	rrcf	___ftmul@f1,f,c
  2520  007E02  90D8               	bcf	status,0,c
  2521  007E04  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  2522  007E06  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  2523  007E08  3217               	rrcf	___ftmul@f3_as_product,f,c
  2524  007E0A  2E1A               	decfsz	___ftmul@cntr,f,c
  2525  007E0C  D7ED               	goto	l1818
  2526  007E0E  D000               	goto	l1826
  2527  007E10                     l1826:
  2528  007E10  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2529  007E14  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2530  007E18  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2531  007E1C  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2532  007E20  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2533  007E24  ECD2  F03D         	call	___ftpack	;wreg free
  2534  007E28  C001  F00D         	movff	?___ftpack,?___ftmul
  2535  007E2C  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2536  007E30  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2537  007E34  D000               	goto	l654
  2538  007E36                     l654:
  2539  007E36  0012               	return		;funcret
  2540  007E38                     __end_of___ftmul:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           intcon	equ	0xFF2
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           indf1	equ	0xFE7
  2550                           postdec1	equ	0xFE5
  2551                           fsr1h	equ	0xFE2
  2552                           fsr1l	equ	0xFE1
  2553                           indf2	equ	0xFDF
  2554                           fsr2h	equ	0xFDA
  2555                           fsr2l	equ	0xFD9
  2556                           status	equ	0xFD8
  2557                           
  2558 ;; *************** function ___awtoft *****************
  2559 ;; Defined at:
  2560 ;;		line 32 in file "/Applications/microchip/xc8/v1.34/sources/common/awtoft.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  c               2    8[COMRAM] int 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  sign            1   11[COMRAM] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  3    8[COMRAM] float 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2574 ;;      Params:         3       0       0       0       0       0       0       0       0
  2575 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2577 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2578 ;;Total ram usage:        4 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    1
  2581 ;; This function calls:
  2582 ;;		___ftpack
  2583 ;; This function is called by:
  2584 ;;		_read_temp
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text14
  2589  0076D4                     __ptext14:
  2590                           	opt stack 0
  2591  0076D4                     ___awtoft:
  2592                           	opt stack 28
  2593                           
  2594                           ;incstack = 0
  2595  0076D4  0E00               	movlw	0
  2596  0076D6  6E0C               	movwf	___awtoft@sign,c
  2597  0076D8  AE0A               	btfss	___awtoft@c+1,7,c
  2598  0076DA  D007               	goto	l1882
  2599  0076DC  6C09               	negf	___awtoft@c,c
  2600  0076DE  1E0A               	comf	___awtoft@c+1,f,c
  2601  0076E0  B0D8               	btfsc	status,0,c
  2602  0076E2  2A0A               	incf	___awtoft@c+1,f,c
  2603  0076E4  0E01               	movlw	1
  2604  0076E6  6E0C               	movwf	___awtoft@sign,c
  2605  0076E8  D000               	goto	l1882
  2606  0076EA                     l1882:
  2607  0076EA  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2608  0076EE  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2609  0076F2  6A03               	clrf	___ftpack@arg+2,c
  2610  0076F4  0E8E               	movlw	142
  2611  0076F6  6E04               	movwf	___ftpack@exp,c
  2612  0076F8  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2613  0076FC  ECD2  F03D         	call	___ftpack	;wreg free
  2614  007700  C001  F009         	movff	?___ftpack,?___awtoft
  2615  007704  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2616  007708  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2617  00770C  D000               	goto	l477
  2618  00770E                     l477:
  2619  00770E  0012               	return		;funcret
  2620  007710                     __end_of___awtoft:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           indf1	equ	0xFE7
  2630                           postdec1	equ	0xFE5
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           indf2	equ	0xFDF
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function ___ftpack *****************
  2639 ;; Defined at:
  2640 ;;		line 62 in file "/Applications/microchip/xc8/v1.34/sources/common/float.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  arg             3    0[COMRAM] unsigned um
  2643 ;;  exp             1    3[COMRAM] unsigned char 
  2644 ;;  sign            1    4[COMRAM] unsigned char 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  3    0[COMRAM] float 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2656 ;;      Params:         5       0       0       0       0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2658 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2659 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2660 ;;Total ram usage:        8 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		___awtoft
  2666 ;;		___ftmul
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text15
  2671  007BA4                     __ptext15:
  2672                           	opt stack 0
  2673  007BA4                     ___ftpack:
  2674                           	opt stack 28
  2675                           
  2676                           ;incstack = 0
  2677  007BA4  5004               	movf	___ftpack@exp,w,c
  2678  007BA6  B4D8               	btfsc	status,2,c
  2679  007BA8  D005               	goto	l1644
  2680  007BAA  5001               	movf	___ftpack@arg,w,c
  2681  007BAC  1002               	iorwf	___ftpack@arg+1,w,c
  2682  007BAE  1003               	iorwf	___ftpack@arg+2,w,c
  2683  007BB0  A4D8               	btfss	status,2,c
  2684  007BB2  D00E               	goto	l1650
  2685  007BB4                     l1644:
  2686  007BB4  0E00               	movlw	0
  2687  007BB6  6E01               	movwf	?___ftpack,c
  2688  007BB8  0E00               	movlw	0
  2689  007BBA  6E02               	movwf	?___ftpack+1,c
  2690  007BBC  0E00               	movlw	0
  2691  007BBE  6E03               	movwf	?___ftpack+2,c
  2692  007BC0  D053               	goto	l567
  2693  007BC2  D006               	goto	l1650
  2694  007BC4                     l1648:
  2695  007BC4  2A04               	incf	___ftpack@exp,f,c
  2696  007BC6  90D8               	bcf	status,0,c
  2697  007BC8  3203               	rrcf	___ftpack@arg+2,f,c
  2698  007BCA  3202               	rrcf	___ftpack@arg+1,f,c
  2699  007BCC  3201               	rrcf	___ftpack@arg,f,c
  2700  007BCE  D000               	goto	l1650
  2701  007BD0                     l1650:
  2702  007BD0  0E00               	movlw	0
  2703  007BD2  1401               	andwf	___ftpack@arg,w,c
  2704  007BD4  6E06               	movwf	??___ftpack& (0+255),c
  2705  007BD6  0E00               	movlw	0
  2706  007BD8  1402               	andwf	___ftpack@arg+1,w,c
  2707  007BDA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2708  007BDC  0EFE               	movlw	254
  2709  007BDE  1403               	andwf	___ftpack@arg+2,w,c
  2710  007BE0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2711  007BE2  5006               	movf	??___ftpack,w,c
  2712  007BE4  1007               	iorwf	??___ftpack+1,w,c
  2713  007BE6  1008               	iorwf	??___ftpack+2,w,c
  2714  007BE8  B4D8               	btfsc	status,2,c
  2715  007BEA  D00E               	goto	l1656
  2716  007BEC  D7EB               	goto	l1648
  2717  007BEE  D00C               	goto	l1656
  2718  007BF0                     l1652:
  2719  007BF0  2A04               	incf	___ftpack@exp,f,c
  2720  007BF2  0E01               	movlw	1
  2721  007BF4  2601               	addwf	___ftpack@arg,f,c
  2722  007BF6  0E00               	movlw	0
  2723  007BF8  2202               	addwfc	___ftpack@arg+1,f,c
  2724  007BFA  0E00               	movlw	0
  2725  007BFC  2203               	addwfc	___ftpack@arg+2,f,c
  2726  007BFE  90D8               	bcf	status,0,c
  2727  007C00  3203               	rrcf	___ftpack@arg+2,f,c
  2728  007C02  3202               	rrcf	___ftpack@arg+1,f,c
  2729  007C04  3201               	rrcf	___ftpack@arg,f,c
  2730  007C06  D000               	goto	l1656
  2731  007C08                     l1656:
  2732  007C08  0E00               	movlw	0
  2733  007C0A  1401               	andwf	___ftpack@arg,w,c
  2734  007C0C  6E06               	movwf	??___ftpack& (0+255),c
  2735  007C0E  0E00               	movlw	0
  2736  007C10  1402               	andwf	___ftpack@arg+1,w,c
  2737  007C12  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2738  007C14  0EFF               	movlw	255
  2739  007C16  1403               	andwf	___ftpack@arg+2,w,c
  2740  007C18  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2741  007C1A  5006               	movf	??___ftpack,w,c
  2742  007C1C  1007               	iorwf	??___ftpack+1,w,c
  2743  007C1E  1008               	iorwf	??___ftpack+2,w,c
  2744  007C20  B4D8               	btfsc	status,2,c
  2745  007C22  D008               	goto	l1660
  2746  007C24  D7E5               	goto	l1652
  2747  007C26  D006               	goto	l1660
  2748  007C28                     l1658:
  2749  007C28  0604               	decf	___ftpack@exp,f,c
  2750  007C2A  90D8               	bcf	status,0,c
  2751  007C2C  3601               	rlcf	___ftpack@arg,f,c
  2752  007C2E  3602               	rlcf	___ftpack@arg+1,f,c
  2753  007C30  3603               	rlcf	___ftpack@arg+2,f,c
  2754  007C32  D000               	goto	l1660
  2755  007C34                     l1660:
  2756  007C34  BE02               	btfsc	___ftpack@arg+1,7,c
  2757  007C36  D004               	goto	l578
  2758  007C38  0E02               	movlw	2
  2759  007C3A  6004               	cpfslt	___ftpack@exp,c
  2760  007C3C  D7F5               	goto	l1658
  2761  007C3E  D000               	goto	l578
  2762  007C40                     l578:
  2763  007C40  B004               	btfsc	___ftpack@exp,0,c
  2764  007C42  D002               	goto	l1666
  2765  007C44  9E02               	bcf	___ftpack@arg+1,7,c
  2766  007C46  D000               	goto	l1666
  2767  007C48                     l1666:
  2768  007C48  90D8               	bcf	status,0,c
  2769  007C4A  3204               	rrcf	___ftpack@exp,f,c
  2770  007C4C  5004               	movf	___ftpack@exp,w,c
  2771  007C4E  1203               	iorwf	___ftpack@arg+2,f,c
  2772  007C50  5005               	movf	___ftpack@sign,w,c
  2773  007C52  B4D8               	btfsc	status,2,c
  2774  007C54  D002               	goto	l1672
  2775  007C56  8E03               	bsf	___ftpack@arg+2,7,c
  2776  007C58  D000               	goto	l1672
  2777  007C5A                     l1672:
  2778  007C5A  C001  F001         	movff	___ftpack@arg,?___ftpack
  2779  007C5E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2780  007C62  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2781  007C66  D000               	goto	l567
  2782  007C68                     l567:
  2783  007C68  0012               	return		;funcret
  2784  007C6A                     __end_of___ftpack:
  2785                           	opt stack 0
  2786                           tblptru	equ	0xFF8
  2787                           tblptrh	equ	0xFF7
  2788                           tblptrl	equ	0xFF6
  2789                           tablat	equ	0xFF5
  2790                           intcon	equ	0xFF2
  2791                           postinc0	equ	0xFEE
  2792                           wreg	equ	0xFE8
  2793                           indf1	equ	0xFE7
  2794                           postdec1	equ	0xFE5
  2795                           fsr1h	equ	0xFE2
  2796                           fsr1l	equ	0xFE1
  2797                           indf2	equ	0xFDF
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _nrf_txmode *****************
  2803 ;; Defined at:
  2804 ;;		line 152 in file "NRF_24L01/nRF2401.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;		None               void
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    2
  2825 ;; This function calls:
  2826 ;;		_nrf_SPI_RW_Reg
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text16
  2833  0074CE                     __ptext16:
  2834                           	opt stack 0
  2835  0074CE                     _nrf_txmode:
  2836                           	opt stack 28
  2837                           
  2838                           ;nRF2401.c: 153: PORTCbits.RC0 = 0;
  2839                           
  2840                           ;incstack = 0
  2841  0074CE  9082               	bcf	3970,0,c	;volatile
  2842                           
  2843                           ;nRF2401.c: 155: nrf_SPI_RW_Reg(0x20 + 0x00, 0x0E);
  2844  0074D0  0E0E               	movlw	14
  2845  0074D2  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2846  0074D4  0E20               	movlw	32
  2847  0074D6  EC85  F03A         	call	_nrf_SPI_RW_Reg
  2848                           
  2849                           ;nRF2401.c: 157: PORTCbits.RC0 = 1;
  2850  0074DA  8082               	bsf	3970,0,c	;volatile
  2851  0074DC  0012               	return		;funcret
  2852  0074DE                     __end_of_nrf_txmode:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           intcon	equ	0xFF2
  2859                           postinc0	equ	0xFEE
  2860                           wreg	equ	0xFE8
  2861                           indf1	equ	0xFE7
  2862                           postdec1	equ	0xFE5
  2863                           fsr1h	equ	0xFE2
  2864                           fsr1l	equ	0xFE1
  2865                           indf2	equ	0xFDF
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _nrf_send *****************
  2871 ;; Defined at:
  2872 ;;		line 16 in file "NRF_24L01/nRF2401.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  tx_buf          2    7[COMRAM] PTR unsigned char 
  2875 ;;		 -> main@tx_buf(32), 
  2876 ;;  rx_buf          2    9[COMRAM] PTR unsigned char 
  2877 ;;		 -> main@rx_buf(32), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  i               2   11[COMRAM] int 
  2880 ;;  status          1   13[COMRAM] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      unsigned char 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2890 ;;      Params:         4       0       0       0       0       0       0       0       0
  2891 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2893 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2894 ;;Total ram usage:        7 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    2
  2897 ;; This function calls:
  2898 ;;		_nrf_SPI_RW_Reg
  2899 ;;		_nrf_SPI_Read_Buf
  2900 ;;		_nrf_SPI_Write_Buf
  2901 ;;		_nrf_getStatus
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text17
  2908  007896                     __ptext17:
  2909                           	opt stack 0
  2910  007896                     _nrf_send:
  2911                           	opt stack 28
  2912                           
  2913                           ;nRF2401.c: 17: char status;
  2914                           ;nRF2401.c: 18: int i;
  2915                           ;nRF2401.c: 20: nrf_SPI_RW_Reg(0xE1,0);
  2916                           
  2917                           ;incstack = 0
  2918  007896  0E00               	movlw	0
  2919  007898  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2920  00789A  0EE1               	movlw	225
  2921  00789C  EC85  F03A         	call	_nrf_SPI_RW_Reg
  2922                           
  2923                           ;nRF2401.c: 22: status = nrf_getStatus();
  2924  0078A0  EC7A  F03A         	call	_nrf_getStatus	;wreg free
  2925  0078A4  6E0E               	movwf	nrf_send@status,c
  2926                           
  2927                           ;nRF2401.c: 23: nrf_SPI_RW_Reg(0x20 + 0x07, status);
  2928  0078A6  C00E  F002         	movff	nrf_send@status,nrf_SPI_RW_Reg@value
  2929  0078AA  0E27               	movlw	39
  2930  0078AC  EC85  F03A         	call	_nrf_SPI_RW_Reg
  2931                           
  2932                           ;nRF2401.c: 24: nrf_SPI_Write_Buf(0xA0,tx_buf,32);
  2933  0078B0  C008  F002         	movff	nrf_send@tx_buf,nrf_SPI_Write_Buf@pBuf
  2934  0078B4  C009  F003         	movff	nrf_send@tx_buf+1,nrf_SPI_Write_Buf@pBuf+1
  2935  0078B8  0E20               	movlw	32
  2936  0078BA  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
  2937  0078BC  0EA0               	movlw	160
  2938  0078BE  ECC7  F03A         	call	_nrf_SPI_Write_Buf
  2939                           
  2940                           ;nRF2401.c: 27: PORTCbits.RC0 = 1;
  2941  0078C2  8082               	bsf	3970,0,c	;volatile
  2942                           
  2943                           ;nRF2401.c: 28: for(i=0; i<2000; i++);
  2944  0078C4  0E00               	movlw	0
  2945  0078C6  6E0D               	movwf	nrf_send@i+1,c
  2946  0078C8  0E00               	movlw	0
  2947  0078CA  6E0C               	movwf	nrf_send@i,c
  2948  0078CC                     l2090:
  2949  0078CC  BE0D               	btfsc	nrf_send@i+1,7,c
  2950  0078CE  D008               	goto	l2094
  2951  0078D0  0ED0               	movlw	208
  2952  0078D2  5C0C               	subwf	nrf_send@i,w,c
  2953  0078D4  0E07               	movlw	7
  2954  0078D6  580D               	subwfb	nrf_send@i+1,w,c
  2955  0078D8  B0D8               	btfsc	status,0,c
  2956  0078DA  D005               	goto	l159
  2957  0078DC  D001               	goto	l2094
  2958  0078DE  D003               	goto	l159
  2959  0078E0                     l2094:
  2960  0078E0  4A0C               	infsnz	nrf_send@i,f,c
  2961  0078E2  2A0D               	incf	nrf_send@i+1,f,c
  2962  0078E4  D7F3               	goto	l2090
  2963  0078E6                     l159:
  2964                           
  2965                           ;nRF2401.c: 29: PORTCbits.RC0 = 0;
  2966  0078E6  9082               	bcf	3970,0,c	;volatile
  2967                           
  2968                           ;nRF2401.c: 31: status = nrf_getStatus();
  2969  0078E8  EC7A  F03A         	call	_nrf_getStatus	;wreg free
  2970  0078EC  6E0E               	movwf	nrf_send@status,c
  2971                           
  2972                           ;nRF2401.c: 32: if(status & 0x40) {
  2973  0078EE  AC0E               	btfss	nrf_send@status,6,c
  2974  0078F0  D015               	goto	l2114
  2975                           
  2976                           ;nRF2401.c: 33: nrf_SPI_RW_Reg(0x20 + 0x07, 0x40);
  2977  0078F2  0E40               	movlw	64
  2978  0078F4  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2979  0078F6  0E27               	movlw	39
  2980  0078F8  EC85  F03A         	call	_nrf_SPI_RW_Reg
  2981                           
  2982                           ;nRF2401.c: 34: nrf_SPI_Read_Buf(0x61,rx_buf,2);
  2983  0078FC  C00A  F002         	movff	nrf_send@rx_buf,nrf_SPI_Read_Buf@pBuf
  2984  007900  C00B  F003         	movff	nrf_send@rx_buf+1,nrf_SPI_Read_Buf@pBuf+1
  2985  007904  0E02               	movlw	2
  2986  007906  6E04               	movwf	nrf_SPI_Read_Buf@bytes,c
  2987  007908  0E61               	movlw	97
  2988  00790A  EC4D  F03B         	call	_nrf_SPI_Read_Buf
  2989                           
  2990                           ;nRF2401.c: 35: nrf_SPI_RW_Reg(0xE2,0);
  2991  00790E  0E00               	movlw	0
  2992  007910  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2993  007912  0EE2               	movlw	226
  2994  007914  EC85  F03A         	call	_nrf_SPI_RW_Reg
  2995                           
  2996                           ;nRF2401.c: 36: return 0x01;
  2997  007918  0E01               	movlw	1
  2998                           
  2999                           ;nRF2401.c: 37: } else {
  3000  00791A  D002               	goto	l161
  3001  00791C                     l2114:
  3002                           
  3003                           ;nRF2401.c: 38: return 0x00;
  3004  00791C  0E00               	movlw	0
  3005  00791E  D000               	goto	l161
  3006  007920                     l161:
  3007  007920  0012               	return		;funcret
  3008  007922                     __end_of_nrf_send:
  3009                           	opt stack 0
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           intcon	equ	0xFF2
  3015                           postinc0	equ	0xFEE
  3016                           wreg	equ	0xFE8
  3017                           indf1	equ	0xFE7
  3018                           postdec1	equ	0xFE5
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _nrf_getStatus *****************
  3027 ;; Defined at:
  3028 ;;		line 6 in file "NRF_24L01/nRF2401.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  status          1    0[COMRAM] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      unsigned char 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0
  3043 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3045 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3046 ;;Total ram usage:        1 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_nrf_send
  3052 ;;		_nrf_send_noack
  3053 ;;		_nrf_receive
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text18
  3058  0074F4                     __ptext18:
  3059                           	opt stack 0
  3060  0074F4                     _nrf_getStatus:
  3061                           	opt stack 29
  3062                           
  3063                           ;nRF2401.c: 7: unsigned char status;
  3064                           ;nRF2401.c: 8: PORTCbits.RC1 = 0;
  3065                           
  3066                           ;incstack = 0
  3067  0074F4  9282               	bcf	3970,1,c	;volatile
  3068                           
  3069                           ;nRF2401.c: 9: SSPBUF = 0xFF;
  3070  0074F6  68C9               	setf	4041,c	;volatile
  3071                           
  3072                           ;nRF2401.c: 10: while(!SSPSTATbits.BF);
  3073  0074F8  D000               	goto	l152
  3074  0074FA                     l152:
  3075  0074FA  A0C7               	btfss	4039,0,c	;volatile
  3076  0074FC  D7FE               	goto	l152
  3077                           
  3078                           ;nRF2401.c: 11: status = SSPBUF;
  3079  0074FE  CFC9 F001          	movff	4041,nrf_getStatus@status	;volatile
  3080                           
  3081                           ;nRF2401.c: 12: PORTCbits.RC1 = 1;
  3082  007502  8282               	bsf	3970,1,c	;volatile
  3083                           
  3084                           ;nRF2401.c: 13: return status;
  3085  007504  5001               	movf	nrf_getStatus@status,w,c
  3086  007506  D000               	goto	l155
  3087  007508                     l155:
  3088  007508  0012               	return		;funcret
  3089  00750A                     __end_of_nrf_getStatus:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           intcon	equ	0xFF2
  3096                           postinc0	equ	0xFEE
  3097                           wreg	equ	0xFE8
  3098                           indf1	equ	0xFE7
  3099                           postdec1	equ	0xFE5
  3100                           fsr1h	equ	0xFE2
  3101                           fsr1l	equ	0xFE1
  3102                           indf2	equ	0xFDF
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _nrf_SPI_Read_Buf *****************
  3108 ;; Defined at:
  3109 ;;		line 285 in file "NRF_24L01/nRF2401.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  reg             1    wreg     unsigned char 
  3112 ;;  pBuf            2    1[COMRAM] PTR unsigned char 
  3113 ;;		 -> main@rx_buf(32), 
  3114 ;;  bytes           1    3[COMRAM] unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  reg             1    5[COMRAM] unsigned char 
  3117 ;;  i               1    6[COMRAM] unsigned char 
  3118 ;;  status          1    4[COMRAM] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      unsigned char 
  3121 ;; Registers used:
  3122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3128 ;;      Params:         3       0       0       0       0       0       0       0       0
  3129 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3131 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3132 ;;Total ram usage:        6 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    1
  3135 ;; This function calls:
  3136 ;;		_nrf_SPI_RW
  3137 ;; This function is called by:
  3138 ;;		_nrf_send
  3139 ;;		_nrf_receive
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text19
  3144  00769A                     __ptext19:
  3145                           	opt stack 0
  3146  00769A                     _nrf_SPI_Read_Buf:
  3147                           	opt stack 28
  3148                           
  3149                           ;incstack = 0
  3150                           ;nrf_SPI_Read_Buf@reg stored from wreg
  3151  00769A  6E06               	movwf	nrf_SPI_Read_Buf@reg,c
  3152                           
  3153                           ;nRF2401.c: 286: unsigned char status,i;
  3154                           ;nRF2401.c: 288: PORTCbits.RC1 = 0;
  3155  00769C  9282               	bcf	3970,1,c	;volatile
  3156                           
  3157                           ;nRF2401.c: 289: status = nrf_SPI_RW(reg);
  3158  00769E  5006               	movf	nrf_SPI_Read_Buf@reg,w,c
  3159  0076A0  EC6F  F03A         	call	_nrf_SPI_RW
  3160  0076A4  6E05               	movwf	nrf_SPI_Read_Buf@status,c
  3161                           
  3162                           ;nRF2401.c: 291: for(i=0;i<bytes;i++) {
  3163  0076A6  0E00               	movlw	0
  3164  0076A8  6E07               	movwf	nrf_SPI_Read_Buf@i,c
  3165  0076AA  D00E               	goto	l1752
  3166  0076AC                     l1748:
  3167                           
  3168                           ;nRF2401.c: 292: pBuf[i] = nrf_SPI_RW(0xFF);
  3169  0076AC  5007               	movf	nrf_SPI_Read_Buf@i,w,c
  3170  0076AE  0D01               	mullw	1
  3171  0076B0  50F3               	movf	prodl,w,c
  3172  0076B2  2402               	addwf	nrf_SPI_Read_Buf@pBuf,w,c
  3173  0076B4  6ED9               	movwf	fsr2l,c
  3174  0076B6  50F4               	movf	prodh,w,c
  3175  0076B8  2003               	addwfc	nrf_SPI_Read_Buf@pBuf+1,w,c
  3176  0076BA  6EDA               	movwf	fsr2h,c
  3177  0076BC  0EFF               	movlw	255
  3178  0076BE  EC6F  F03A         	call	_nrf_SPI_RW
  3179  0076C2  6EDF               	movwf	indf2,c
  3180  0076C4  2A07               	incf	nrf_SPI_Read_Buf@i,f,c
  3181  0076C6  D000               	goto	l1752
  3182  0076C8                     l1752:
  3183  0076C8  5004               	movf	nrf_SPI_Read_Buf@bytes,w,c
  3184  0076CA  5C07               	subwf	nrf_SPI_Read_Buf@i,w,c
  3185  0076CC  A0D8               	btfss	status,0,c
  3186  0076CE  D7EE               	goto	l1748
  3187                           
  3188                           ;nRF2401.c: 293: }
  3189                           ;nRF2401.c: 295: PORTCbits.RC1 = 1;
  3190  0076D0  8282               	bsf	3970,1,c	;volatile
  3191                           
  3192                           ;nRF2401.c: 297: return(status);
  3193                           ;	Return value of _nrf_SPI_Read_Buf is never used
  3194  0076D2  0012               	return		;funcret
  3195  0076D4                     __end_of_nrf_SPI_Read_Buf:
  3196                           	opt stack 0
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           prodh	equ	0xFF4
  3202                           prodl	equ	0xFF3
  3203                           intcon	equ	0xFF2
  3204                           postinc0	equ	0xFEE
  3205                           wreg	equ	0xFE8
  3206                           indf1	equ	0xFE7
  3207                           postdec1	equ	0xFE5
  3208                           fsr1h	equ	0xFE2
  3209                           fsr1l	equ	0xFE1
  3210                           indf2	equ	0xFDF
  3211                           fsr2h	equ	0xFDA
  3212                           fsr2l	equ	0xFD9
  3213                           status	equ	0xFD8
  3214                           
  3215 ;; *************** function _nrf_init *****************
  3216 ;; Defined at:
  3217 ;;		line 85 in file "NRF_24L01/nRF2401.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  Test            5    0        unsigned char [5]
  3222 ;;  status          1    7[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		_OpenSPI
  3241 ;;		_nrf_SPI_RW_Reg
  3242 ;;		_nrf_SPI_Read
  3243 ;;		_nrf_SPI_Write_Buf
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text20
  3250  007C6A                     __ptext20:
  3251                           	opt stack 0
  3252  007C6A                     _nrf_init:
  3253                           	opt stack 28
  3254                           
  3255                           ;nRF2401.c: 86: char status=0;
  3256                           
  3257                           ;incstack = 0
  3258  007C6A  0E00               	movlw	0
  3259  007C6C  6E08               	movwf	nrf_init@status,c
  3260                           
  3261                           ;nRF2401.c: 87: unsigned char Test[5];
  3262                           ;nRF2401.c: 88: OpenSPI(0b00000010, 0b00000000, 0b00000000);
  3263  007C6E  0E00               	movlw	0
  3264  007C70  6E01               	movwf	OpenSPI@bus_mode,c
  3265  007C72  0E00               	movlw	0
  3266  007C74  6E02               	movwf	OpenSPI@smp_phase,c
  3267  007C76  0E02               	movlw	2
  3268  007C78  ECF3  F03B         	call	_OpenSPI
  3269                           
  3270                           ;nRF2401.c: 90: PORTCbits.RC0 = 1;
  3271  007C7C  8082               	bsf	3970,0,c	;volatile
  3272                           
  3273                           ;nRF2401.c: 91: PORTCbits.RC1 = 1;
  3274  007C7E  8282               	bsf	3970,1,c	;volatile
  3275                           
  3276                           ;nRF2401.c: 93: PORTCbits.RC0 = 0;
  3277  007C80  9082               	bcf	3970,0,c	;volatile
  3278                           
  3279                           ;nRF2401.c: 95: nrf_SPI_Write_Buf(0x20 + 0x10, TX_ADDRESS, 5);
  3280  007C82  0E41               	movlw	low _TX_ADDRESS
  3281  007C84  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
  3282  007C86  0E00               	movlw	high _TX_ADDRESS
  3283  007C88  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
  3284  007C8A  0E05               	movlw	5
  3285  007C8C  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
  3286  007C8E  0E30               	movlw	48
  3287  007C90  ECC7  F03A         	call	_nrf_SPI_Write_Buf
  3288                           
  3289                           ;nRF2401.c: 97: nrf_SPI_Write_Buf(0x20 + 0x0A, TX_ADDRESS, 5);
  3290  007C94  0E41               	movlw	low _TX_ADDRESS
  3291  007C96  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
  3292  007C98  0E00               	movlw	high _TX_ADDRESS
  3293  007C9A  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
  3294  007C9C  0E05               	movlw	5
  3295  007C9E  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
  3296  007CA0  0E2A               	movlw	42
  3297  007CA2  ECC7  F03A         	call	_nrf_SPI_Write_Buf
  3298                           
  3299                           ;nRF2401.c: 109: nrf_SPI_RW_Reg(0x50,0x73);
  3300  007CA6  0E73               	movlw	115
  3301  007CA8  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3302  007CAA  0E50               	movlw	80
  3303  007CAC  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3304                           
  3305                           ;nRF2401.c: 111: nrf_SPI_RW_Reg(0x20 + 0x1D, 0x06);
  3306  007CB0  0E06               	movlw	6
  3307  007CB2  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3308  007CB4  0E3D               	movlw	61
  3309  007CB6  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3310                           
  3311                           ;nRF2401.c: 113: nrf_SPI_RW_Reg(0x20 + 0x1C, 0b111111);
  3312  007CBA  0E3F               	movlw	63
  3313  007CBC  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3314  007CBE  0E3C               	movlw	60
  3315  007CC0  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3316                           
  3317                           ;nRF2401.c: 115: nrf_SPI_RW_Reg(0x20 + 0x01, 0b111111);
  3318  007CC4  0E3F               	movlw	63
  3319  007CC6  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3320  007CC8  0E21               	movlw	33
  3321  007CCA  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3322                           
  3323                           ;nRF2401.c: 117: nrf_SPI_RW_Reg(0x20 + 0x02, 0b0001);
  3324  007CCE  0E01               	movlw	1
  3325  007CD0  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3326  007CD2  0E22               	movlw	34
  3327  007CD4  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3328                           
  3329                           ;nRF2401.c: 119: nrf_SPI_RW_Reg(0x20 + 0x04, 0x12);
  3330  007CD8  0E12               	movlw	18
  3331  007CDA  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3332  007CDC  0E24               	movlw	36
  3333  007CDE  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3334                           
  3335                           ;nRF2401.c: 121: nrf_SPI_RW_Reg(0x20 + 0x05, 40);
  3336  007CE2  0E28               	movlw	40
  3337  007CE4  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3338  007CE6  0E25               	movlw	37
  3339  007CE8  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3340                           
  3341                           ;nRF2401.c: 123: nrf_SPI_RW_Reg(0x20 + 0x11, 32);
  3342  007CEC  0E20               	movlw	32
  3343  007CEE  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3344  007CF0  0E31               	movlw	49
  3345  007CF2  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3346                           
  3347                           ;nRF2401.c: 125: nrf_SPI_RW_Reg(0x20 + 0x12, 32);
  3348  007CF6  0E20               	movlw	32
  3349  007CF8  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3350  007CFA  0E32               	movlw	50
  3351  007CFC  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3352                           
  3353                           ;nRF2401.c: 127: nrf_SPI_RW_Reg(0x20 + 0x06, 0x07);
  3354  007D00  0E07               	movlw	7
  3355  007D02  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3356  007D04  0E26               	movlw	38
  3357  007D06  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3358                           
  3359                           ;nRF2401.c: 129: nrf_SPI_RW_Reg(0xE2,0);
  3360  007D0A  0E00               	movlw	0
  3361  007D0C  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3362  007D0E  0EE2               	movlw	226
  3363  007D10  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3364                           
  3365                           ;nRF2401.c: 131: nrf_SPI_RW_Reg(0xE1,0);
  3366  007D14  0E00               	movlw	0
  3367  007D16  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3368  007D18  0EE1               	movlw	225
  3369  007D1A  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3370                           
  3371                           ;nRF2401.c: 133: status=nrf_SPI_Read(STATUS);
  3372  007D1E  50D8               	movf	status,w,c	;volatile
  3373  007D20  EC91  F03A         	call	_nrf_SPI_Read
  3374  007D24  6E08               	movwf	nrf_init@status,c
  3375                           
  3376                           ;nRF2401.c: 135: nrf_SPI_RW_Reg(0x20 + STATUS, status);
  3377  007D26  C008  F002         	movff	nrf_init@status,nrf_SPI_RW_Reg@value
  3378  007D2A  50D8               	movf	status,w,c	;volatile
  3379  007D2C  0F20               	addlw	32
  3380  007D2E  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3381                           
  3382                           ;nRF2401.c: 137: nrf_SPI_RW_Reg(0x20 + 0x03, 0x3);
  3383  007D32  0E03               	movlw	3
  3384  007D34  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3385  007D36  0E23               	movlw	35
  3386  007D38  EC85  F03A         	call	_nrf_SPI_RW_Reg
  3387                           
  3388                           ;nRF2401.c: 139: PORTCbits.RC0 = 1;
  3389  007D3C  8082               	bsf	3970,0,c	;volatile
  3390  007D3E  0012               	return		;funcret
  3391  007D40                     __end_of_nrf_init:
  3392                           	opt stack 0
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           intcon	equ	0xFF2
  3400                           postinc0	equ	0xFEE
  3401                           wreg	equ	0xFE8
  3402                           indf1	equ	0xFE7
  3403                           postdec1	equ	0xFE5
  3404                           fsr1h	equ	0xFE2
  3405                           fsr1l	equ	0xFE1
  3406                           indf2	equ	0xFDF
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _nrf_SPI_Write_Buf *****************
  3412 ;; Defined at:
  3413 ;;		line 308 in file "NRF_24L01/nRF2401.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  reg             1    wreg     unsigned char 
  3416 ;;  pBuf            2    1[COMRAM] PTR unsigned char 
  3417 ;;		 -> TX_ADDRESS(5), main@tx_buf(32), 
  3418 ;;  bytes           1    3[COMRAM] unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  reg             1    5[COMRAM] unsigned char 
  3421 ;;  i               1    6[COMRAM] unsigned char 
  3422 ;;  status          1    4[COMRAM] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      unsigned char 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3432 ;;      Params:         3       0       0       0       0       0       0       0       0
  3433 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3435 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3436 ;;Total ram usage:        6 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    1
  3439 ;; This function calls:
  3440 ;;		_nrf_SPI_RW
  3441 ;; This function is called by:
  3442 ;;		_nrf_send
  3443 ;;		_nrf_init
  3444 ;;		_nrf_send_noack
  3445 ;;		_nrf_receive
  3446 ;;		_nrf_setTxAddr
  3447 ;;		_nrf_setRxAddr
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text21
  3452  00758E                     __ptext21:
  3453                           	opt stack 0
  3454  00758E                     _nrf_SPI_Write_Buf:
  3455                           	opt stack 28
  3456                           
  3457                           ;incstack = 0
  3458                           ;nrf_SPI_Write_Buf@reg stored from wreg
  3459  00758E  6E06               	movwf	nrf_SPI_Write_Buf@reg,c
  3460                           
  3461                           ;nRF2401.c: 309: unsigned char status,i;
  3462                           ;nRF2401.c: 311: PORTCbits.RC1 = 0;
  3463  007590  9282               	bcf	3970,1,c	;volatile
  3464                           
  3465                           ;nRF2401.c: 312: status = nrf_SPI_RW(reg);
  3466  007592  5006               	movf	nrf_SPI_Write_Buf@reg,w,c
  3467  007594  EC6F  F03A         	call	_nrf_SPI_RW
  3468  007598  6E05               	movwf	nrf_SPI_Write_Buf@status,c
  3469                           
  3470                           ;nRF2401.c: 313: for(i=0;i<bytes; i++) {
  3471  00759A  0E00               	movlw	0
  3472  00759C  6E07               	movwf	nrf_SPI_Write_Buf@i,c
  3473  00759E  D00B               	goto	l1740
  3474  0075A0                     l1734:
  3475                           
  3476                           ;nRF2401.c: 314: nrf_SPI_RW(*pBuf);
  3477  0075A0  C002  FFD9         	movff	nrf_SPI_Write_Buf@pBuf,fsr2l
  3478  0075A4  C003  FFDA         	movff	nrf_SPI_Write_Buf@pBuf+1,fsr2h
  3479  0075A8  50DF               	movf	indf2,w,c
  3480  0075AA  EC6F  F03A         	call	_nrf_SPI_RW
  3481                           
  3482                           ;nRF2401.c: 315: *pBuf++;
  3483  0075AE  4A02               	infsnz	nrf_SPI_Write_Buf@pBuf,f,c
  3484  0075B0  2A03               	incf	nrf_SPI_Write_Buf@pBuf+1,f,c
  3485  0075B2  2A07               	incf	nrf_SPI_Write_Buf@i,f,c
  3486  0075B4  D000               	goto	l1740
  3487  0075B6                     l1740:
  3488  0075B6  5004               	movf	nrf_SPI_Write_Buf@bytes,w,c
  3489  0075B8  5C07               	subwf	nrf_SPI_Write_Buf@i,w,c
  3490  0075BA  A0D8               	btfss	status,0,c
  3491  0075BC  D7F1               	goto	l1734
  3492                           
  3493                           ;nRF2401.c: 316: }
  3494                           ;nRF2401.c: 317: PORTCbits.RC1 = 1;
  3495  0075BE  8282               	bsf	3970,1,c	;volatile
  3496                           
  3497                           ;nRF2401.c: 318: return(status);
  3498                           ;	Return value of _nrf_SPI_Write_Buf is never used
  3499  0075C0  0012               	return		;funcret
  3500  0075C2                     __end_of_nrf_SPI_Write_Buf:
  3501                           	opt stack 0
  3502                           tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           prodh	equ	0xFF4
  3507                           prodl	equ	0xFF3
  3508                           intcon	equ	0xFF2
  3509                           postinc0	equ	0xFEE
  3510                           wreg	equ	0xFE8
  3511                           indf1	equ	0xFE7
  3512                           postdec1	equ	0xFE5
  3513                           fsr1h	equ	0xFE2
  3514                           fsr1l	equ	0xFE1
  3515                           indf2	equ	0xFDF
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           
  3520 ;; *************** function _nrf_SPI_Read *****************
  3521 ;; Defined at:
  3522 ;;		line 266 in file "NRF_24L01/nRF2401.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  reg             1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  reg             1    1[COMRAM] unsigned char 
  3527 ;;  reg_val         1    2[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      unsigned char 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0
  3538 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3540 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        2 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    1
  3544 ;; This function calls:
  3545 ;;		_nrf_SPI_RW
  3546 ;; This function is called by:
  3547 ;;		_nrf_init
  3548 ;;		_nrf_receive
  3549 ;;		_nrf_enablePipe
  3550 ;;		_nrf_disablePipe
  3551 ;;		_nrf_readRegister
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text22
  3556  007522                     __ptext22:
  3557                           	opt stack 0
  3558  007522                     _nrf_SPI_Read:
  3559                           	opt stack 28
  3560                           
  3561                           ;incstack = 0
  3562                           ;nrf_SPI_Read@reg stored from wreg
  3563  007522  6E02               	movwf	nrf_SPI_Read@reg,c
  3564                           
  3565                           ;nRF2401.c: 267: unsigned char reg_val;
  3566                           ;nRF2401.c: 269: PORTCbits.RC1 = 0;
  3567  007524  9282               	bcf	3970,1,c	;volatile
  3568                           
  3569                           ;nRF2401.c: 270: nrf_SPI_RW(reg);
  3570  007526  5002               	movf	nrf_SPI_Read@reg,w,c
  3571  007528  EC6F  F03A         	call	_nrf_SPI_RW
  3572                           
  3573                           ;nRF2401.c: 271: reg_val = nrf_SPI_RW(0);
  3574  00752C  0E00               	movlw	0
  3575  00752E  EC6F  F03A         	call	_nrf_SPI_RW
  3576  007532  6E03               	movwf	nrf_SPI_Read@reg_val,c
  3577                           
  3578                           ;nRF2401.c: 272: PORTCbits.RC1 = 1;
  3579  007534  8282               	bsf	3970,1,c	;volatile
  3580                           
  3581                           ;nRF2401.c: 274: return(reg_val);
  3582  007536  5003               	movf	nrf_SPI_Read@reg_val,w,c
  3583  007538  D000               	goto	l216
  3584  00753A                     l216:
  3585  00753A  0012               	return		;funcret
  3586  00753C                     __end_of_nrf_SPI_Read:
  3587                           	opt stack 0
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           intcon	equ	0xFF2
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           indf1	equ	0xFE7
  3598                           postdec1	equ	0xFE5
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function _nrf_SPI_RW_Reg *****************
  3607 ;; Defined at:
  3608 ;;		line 248 in file "NRF_24L01/nRF2401.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  reg             1    wreg     unsigned char 
  3611 ;;  value           1    1[COMRAM] unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  reg             1    3[COMRAM] unsigned char 
  3614 ;;  status          1    2[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3624 ;;      Params:         1       0       0       0       0       0       0       0       0
  3625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3627 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3628 ;;Total ram usage:        3 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    1
  3631 ;; This function calls:
  3632 ;;		_nrf_SPI_RW
  3633 ;; This function is called by:
  3634 ;;		_nrf_send
  3635 ;;		_nrf_init
  3636 ;;		_nrf_txmode
  3637 ;;		_nrf_send_noack
  3638 ;;		_nrf_receive
  3639 ;;		_nrf_rxmode
  3640 ;;		_nrf_powerdown
  3641 ;;		_nrf_enablePipe
  3642 ;;		_nrf_disablePipe
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text23
  3647  00750A                     __ptext23:
  3648                           	opt stack 0
  3649  00750A                     _nrf_SPI_RW_Reg:
  3650                           	opt stack 28
  3651                           
  3652                           ;incstack = 0
  3653                           ;nrf_SPI_RW_Reg@reg stored from wreg
  3654  00750A  6E04               	movwf	nrf_SPI_RW_Reg@reg,c
  3655                           
  3656                           ;nRF2401.c: 249: unsigned char status;
  3657                           ;nRF2401.c: 251: PORTCbits.RC1 = 0;
  3658  00750C  9282               	bcf	3970,1,c	;volatile
  3659                           
  3660                           ;nRF2401.c: 252: status = nrf_SPI_RW(reg);
  3661  00750E  5004               	movf	nrf_SPI_RW_Reg@reg,w,c
  3662  007510  EC6F  F03A         	call	_nrf_SPI_RW
  3663  007514  6E03               	movwf	nrf_SPI_RW_Reg@status,c
  3664                           
  3665                           ;nRF2401.c: 253: nrf_SPI_RW(value);
  3666  007516  5002               	movf	nrf_SPI_RW_Reg@value,w,c
  3667  007518  EC6F  F03A         	call	_nrf_SPI_RW
  3668                           
  3669                           ;nRF2401.c: 254: PORTCbits.RC1 = 1;
  3670  00751C  8282               	bsf	3970,1,c	;volatile
  3671  00751E  D000               	goto	l213
  3672  007520                     l213:
  3673  007520  0012               	return		;funcret
  3674  007522                     __end_of_nrf_SPI_RW_Reg:
  3675                           	opt stack 0
  3676                           tblptru	equ	0xFF8
  3677                           tblptrh	equ	0xFF7
  3678                           tblptrl	equ	0xFF6
  3679                           tablat	equ	0xFF5
  3680                           prodh	equ	0xFF4
  3681                           prodl	equ	0xFF3
  3682                           intcon	equ	0xFF2
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           indf1	equ	0xFE7
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _nrf_SPI_RW *****************
  3695 ;; Defined at:
  3696 ;;		line 233 in file "NRF_24L01/nRF2401.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  data            1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  data            1    0[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        1 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_nrf_SPI_RW_Reg
  3720 ;;		_nrf_SPI_Read
  3721 ;;		_nrf_SPI_Read_Buf
  3722 ;;		_nrf_SPI_Write_Buf
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text24
  3727  0074DE                     __ptext24:
  3728                           	opt stack 0
  3729  0074DE                     _nrf_SPI_RW:
  3730                           	opt stack 28
  3731                           
  3732                           ;incstack = 0
  3733                           ;nrf_SPI_RW@data stored from wreg
  3734  0074DE  6E01               	movwf	nrf_SPI_RW@data,c
  3735                           
  3736                           ;nRF2401.c: 234: SSPBUF = data;
  3737  0074E0  C001  FFC9         	movff	nrf_SPI_RW@data,4041	;volatile
  3738                           
  3739                           ;nRF2401.c: 235: while(!SSPSTATbits.BF);
  3740  0074E4  D000               	goto	l207
  3741  0074E6                     l207:
  3742  0074E6  A0C7               	btfss	4039,0,c	;volatile
  3743  0074E8  D7FE               	goto	l207
  3744                           
  3745                           ;nRF2401.c: 236: data = SSPBUF;
  3746  0074EA  CFC9 F001          	movff	4041,nrf_SPI_RW@data	;volatile
  3747                           
  3748                           ;nRF2401.c: 237: return(data);
  3749  0074EE  5001               	movf	nrf_SPI_RW@data,w,c
  3750  0074F0  D000               	goto	l210
  3751  0074F2                     l210:
  3752  0074F2  0012               	return		;funcret
  3753  0074F4                     __end_of_nrf_SPI_RW:
  3754                           	opt stack 0
  3755                           tblptru	equ	0xFF8
  3756                           tblptrh	equ	0xFF7
  3757                           tblptrl	equ	0xFF6
  3758                           tablat	equ	0xFF5
  3759                           prodh	equ	0xFF4
  3760                           prodl	equ	0xFF3
  3761                           intcon	equ	0xFF2
  3762                           postinc0	equ	0xFEE
  3763                           wreg	equ	0xFE8
  3764                           indf1	equ	0xFE7
  3765                           postdec1	equ	0xFE5
  3766                           fsr1h	equ	0xFE2
  3767                           fsr1l	equ	0xFE1
  3768                           indf2	equ	0xFDF
  3769                           fsr2h	equ	0xFDA
  3770                           fsr2l	equ	0xFD9
  3771                           status	equ	0xFD8
  3772                           
  3773 ;; *************** function _OpenSPI *****************
  3774 ;; Defined at:
  3775 ;;		line 14 in file "/Applications/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi_open.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  sync_mode       1    wreg     unsigned char 
  3778 ;;  bus_mode        1    0[COMRAM] unsigned char 
  3779 ;;  smp_phase       1    1[COMRAM] unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  sync_mode       1    2[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         2       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3794 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        3 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_nrf_init
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text25
  3805  0077E6                     __ptext25:
  3806                           	opt stack 0
  3807  0077E6                     _OpenSPI:
  3808                           	opt stack 29
  3809                           
  3810                           ;incstack = 0
  3811                           ;OpenSPI@sync_mode stored from wreg
  3812  0077E6  6E03               	movwf	OpenSPI@sync_mode,c
  3813  0077E8  0E3F               	movlw	63
  3814  0077EA  16C7               	andwf	4039,f,c	;volatile
  3815  0077EC  0E00               	movlw	0
  3816  0077EE  6EC6               	movwf	4038,c	;volatile
  3817  0077F0  5003               	movf	OpenSPI@sync_mode,w,c
  3818  0077F2  12C6               	iorwf	4038,f,c	;volatile
  3819  0077F4  5002               	movf	OpenSPI@smp_phase,w,c
  3820  0077F6  12C7               	iorwf	4039,f,c	;volatile
  3821  0077F8  D005               	goto	l1774
  3822  0077FA                     l246:
  3823  0077FA  8CC7               	bsf	4039,6,c	;volatile
  3824  0077FC  D013               	goto	l1778
  3825  0077FE                     l248:
  3826  0077FE  8CC7               	bsf	4039,6,c	;volatile
  3827  007800                     l249:
  3828  007800  88C6               	bsf	4038,4,c	;volatile
  3829  007802  D010               	goto	l1778
  3830  007804                     l1774:
  3831  007804  5001               	movf	OpenSPI@bus_mode,w,c
  3832                           
  3833                           ; Switch size 1, requested type "space"
  3834                           ; Number of cases is 3, Range of values is 0 to 3
  3835                           ; switch strategies available:
  3836                           ; Name         Instructions Cycles
  3837                           ; simple_byte           10     6 (average)
  3838                           ;	Chosen strategy is simple_byte
  3839  007806  0A00               	xorlw	0	; case 0
  3840  007808  B4D8               	btfsc	status,2,c
  3841  00780A  D7F7               	goto	l246
  3842  00780C  0A02               	xorlw	2	; case 2
  3843  00780E  B4D8               	btfsc	status,2,c
  3844  007810  D7F6               	goto	l248
  3845  007812  0A01               	xorlw	1	; case 3
  3846  007814  B4D8               	btfsc	status,2,c
  3847  007816  D7F4               	goto	l249
  3848  007818  D005               	goto	l1778
  3849  00781A                     l252:
  3850  00781A  8A92               	bsf	3986,5,c	;volatile
  3851  00781C                     l254:
  3852  00781C  8293               	bsf	3987,1,c	;volatile
  3853  00781E  D00A               	goto	l253
  3854  007820                     l255:
  3855  007820  9293               	bcf	3987,1,c	;volatile
  3856  007822  D008               	goto	l253
  3857  007824                     l1778:
  3858  007824  5003               	movf	OpenSPI@sync_mode,w,c
  3859                           
  3860                           ; Switch size 1, requested type "space"
  3861                           ; Number of cases is 2, Range of values is 4 to 5
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; simple_byte            7     4 (average)
  3865                           ;	Chosen strategy is simple_byte
  3866  007826  0A04               	xorlw	4	; case 4
  3867  007828  B4D8               	btfsc	status,2,c
  3868  00782A  D7F7               	goto	l252
  3869  00782C  0A01               	xorlw	1	; case 5
  3870  00782E  B4D8               	btfsc	status,2,c
  3871  007830  D7F5               	goto	l254
  3872  007832  D7F6               	goto	l255
  3873  007834                     l253:
  3874  007834  8093               	bsf	3987,0,c	;volatile
  3875  007836  9E94               	bcf	3988,7,c	;volatile
  3876  007838  8AC6               	bsf	4038,5,c	;volatile
  3877  00783A  0012               	return		;funcret
  3878  00783C                     __end_of_OpenSPI:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           tblptrh	equ	0xFF7
  3882                           tblptrl	equ	0xFF6
  3883                           tablat	equ	0xFF5
  3884                           prodh	equ	0xFF4
  3885                           prodl	equ	0xFF3
  3886                           intcon	equ	0xFF2
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           indf1	equ	0xFE7
  3890                           postdec1	equ	0xFE5
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           indf2	equ	0xFDF
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function _fill_SendBuff *****************
  3899 ;; Defined at:
  3900 ;;		line 72 in file "main.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  temperature     3    0[COMRAM] float 
  3903 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  3904 ;;		 -> main@tx_buf(32), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  i               1    5[COMRAM] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;		None               void
  3909 ;; Registers used:
  3910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3916 ;;      Params:         5       0       0       0       0       0       0       0       0
  3917 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3919 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3920 ;;Total ram usage:        6 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text26
  3930  00783C                     __ptext26:
  3931                           	opt stack 0
  3932  00783C                     _fill_SendBuff:
  3933                           	opt stack 30
  3934                           
  3935                           ;main.c: 73: unsigned char i;
  3936                           ;main.c: 75: for(i = 0; i< sizeof(float); i++){
  3937                           
  3938                           ;incstack = 0
  3939  00783C  0E00               	movlw	0
  3940  00783E  6E06               	movwf	fill_SendBuff@i,c
  3941  007840                     l2060:
  3942  007840  0E02               	movlw	2
  3943  007842  6406               	cpfsgt	fill_SendBuff@i,c
  3944  007844  D001               	goto	l2064
  3945  007846  D014               	goto	l2070
  3946  007848                     l2064:
  3947                           
  3948                           ;main.c: 76: buffer[i] = temp_union.value[i];
  3949  007848  5006               	movf	fill_SendBuff@i,w,c
  3950  00784A  0D01               	mullw	1
  3951  00784C  0E3E               	movlw	low _temp_union
  3952  00784E  24F3               	addwf	prodl,w,c
  3953  007850  6ED9               	movwf	fsr2l,c
  3954  007852  0E00               	movlw	high _temp_union
  3955  007854  20F4               	addwfc	prodh,w,c
  3956  007856  6EDA               	movwf	fsr2h,c
  3957  007858  5006               	movf	fill_SendBuff@i,w,c
  3958  00785A  0D01               	mullw	1
  3959  00785C  50F3               	movf	prodl,w,c
  3960  00785E  2404               	addwf	fill_SendBuff@buffer,w,c
  3961  007860  6EE1               	movwf	fsr1l,c
  3962  007862  50F4               	movf	prodh,w,c
  3963  007864  2005               	addwfc	fill_SendBuff@buffer+1,w,c
  3964  007866  6EE2               	movwf	fsr1h,c
  3965  007868  CFDF FFE7          	movff	indf2,indf1
  3966  00786C  2A06               	incf	fill_SendBuff@i,f,c
  3967  00786E  D7E8               	goto	l2060
  3968  007870                     l2070:
  3969                           
  3970                           ;main.c: 77: }
  3971                           ;main.c: 78: for( i = sizeof(float) ; i < 32 ; i++){
  3972  007870  0E03               	movlw	3
  3973  007872  6E06               	movwf	fill_SendBuff@i,c
  3974  007874                     l2072:
  3975  007874  0E1F               	movlw	31
  3976  007876  6406               	cpfsgt	fill_SendBuff@i,c
  3977  007878  D001               	goto	l2076
  3978  00787A  D00C               	goto	l53
  3979  00787C                     l2076:
  3980                           
  3981                           ;main.c: 79: buffer[i] = 0;
  3982  00787C  5006               	movf	fill_SendBuff@i,w,c
  3983  00787E  0D01               	mullw	1
  3984  007880  50F3               	movf	prodl,w,c
  3985  007882  2404               	addwf	fill_SendBuff@buffer,w,c
  3986  007884  6ED9               	movwf	fsr2l,c
  3987  007886  50F4               	movf	prodh,w,c
  3988  007888  2005               	addwfc	fill_SendBuff@buffer+1,w,c
  3989  00788A  6EDA               	movwf	fsr2h,c
  3990  00788C  0E00               	movlw	0
  3991  00788E  6EDF               	movwf	indf2,c
  3992  007890  2A06               	incf	fill_SendBuff@i,f,c
  3993  007892  D7F0               	goto	l2072
  3994  007894                     l53:
  3995  007894  0012               	return		;funcret
  3996  007896                     __end_of_fill_SendBuff:
  3997                           	opt stack 0
  3998  0000                     tblptru	equ	0xFF8
  3999                           tblptrh	equ	0xFF7
  4000                           tblptrl	equ	0xFF6
  4001                           tablat	equ	0xFF5
  4002                           prodh	equ	0xFF4
  4003                           prodl	equ	0xFF3
  4004                           intcon	equ	0xFF2
  4005                           postinc0	equ	0xFEE
  4006                           wreg	equ	0xFE8
  4007                           indf1	equ	0xFE7
  4008                           postdec1	equ	0xFE5
  4009                           fsr1h	equ	0xFE2
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8
  4015                           tblptru	equ	0xFF8
  4016                           tblptrh	equ	0xFF7
  4017                           tblptrl	equ	0xFF6
  4018                           tablat	equ	0xFF5
  4019                           prodh	equ	0xFF4
  4020                           prodl	equ	0xFF3
  4021                           intcon	equ	0xFF2
  4022                           postinc0	equ	0xFEE
  4023                           wreg	equ	0xFE8
  4024                           indf1	equ	0xFE7
  4025                           postdec1	equ	0xFE5
  4026                           fsr1h	equ	0xFE2
  4027                           fsr1l	equ	0xFE1
  4028                           indf2	equ	0xFDF
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033                           	psect	rparam
  4034  0000                     tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           intcon	equ	0xFF2
  4041                           postinc0	equ	0xFEE
  4042                           wreg	equ	0xFE8
  4043                           indf1	equ	0xFE7
  4044                           postdec1	equ	0xFE5
  4045                           fsr1h	equ	0xFE2
  4046                           fsr1l	equ	0xFE1
  4047                           indf2	equ	0xFDF
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      69
    BANK0           160     67      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nrf_SPI_Write_Buf@pBuf	PTR unsigned char  size(2) Largest target is 32
		 -> TX_ADDRESS(COMRAM[5]), main@tx_buf(BANK0[32]), 

    nrf_SPI_Read_Buf@pBuf	PTR unsigned char  size(2) Largest target is 32
		 -> main@rx_buf(BANK0[32]), 

    nrf_send@rx_buf	PTR unsigned char  size(2) Largest target is 32
		 -> main@rx_buf(BANK0[32]), 

    nrf_send@tx_buf	PTR unsigned char  size(2) Largest target is 32
		 -> main@tx_buf(BANK0[32]), 

    address_Device@Adress	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    fill_SendBuff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@tx_buf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_read_temp
    _search_Devices->___awdiv
    _read_temp->___ftmul
    _read_Byte->_read_Bit
    _delay750ms->_delay100ms
    _delay750ms->_delay50ms
    _address_Device->_write_Byte
    _write_Byte->_write_Bit
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _nrf_txmode->_nrf_SPI_RW_Reg
    _nrf_send->_nrf_SPI_Read_Buf
    _nrf_send->_nrf_SPI_Write_Buf
    _nrf_SPI_Read_Buf->_nrf_SPI_RW
    _nrf_init->_nrf_SPI_Write_Buf
    _nrf_SPI_Write_Buf->_nrf_SPI_RW
    _nrf_SPI_Read->_nrf_SPI_RW
    _nrf_SPI_RW_Reg->_nrf_SPI_RW

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    70      5   13493
                                             40 COMRAM     5     0      5
                                              0 BANK0     67    67      0
                          _delay50ms
                         _delay750ms
                      _fill_SendBuff
                        _init_sensor
                           _nrf_init
                           _nrf_send
                         _nrf_txmode
                          _read_temp
                     _search_Devices
 ---------------------------------------------------------------------------------
 (1) _search_Devices                                      25    25      0    1166
                                              8 COMRAM    25    25      0
                            ___awdiv
                        _init_sensor
                           _read_Bit
                          _write_Bit
                         _write_Byte
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     406
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_temp                                           13    10      3    4573
                                             27 COMRAM    13    10      3
                           ___awtoft
                            ___ftmul
                     _address_Device
                         _delay750ms
                        _init_sensor
                          _read_Byte
                         _write_Byte
 ---------------------------------------------------------------------------------
 (2) _read_Byte                                            3     3      0      95
                                              1 COMRAM     3     3      0
                           _read_Bit
 ---------------------------------------------------------------------------------
 (2) _read_Bit                                             1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay750ms                                           0     0      0       0
                         _delay100ms
                          _delay50ms
 ---------------------------------------------------------------------------------
 (3) _delay50ms                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _delay100ms                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _address_Device                                       4     2      2     311
                                              4 COMRAM     4     2      2
                        _init_sensor
                         _write_Byte
 ---------------------------------------------------------------------------------
 (2) _write_Byte                                           3     3      0      91
                                              1 COMRAM     3     3      0
                          _write_Bit
 ---------------------------------------------------------------------------------
 (3) _write_Bit                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_sensor                                          1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2141
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    1773
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _nrf_txmode                                           0     0      0    1527
                     _nrf_SPI_RW_Reg
 ---------------------------------------------------------------------------------
 (1) _nrf_send                                             7     3      4    3053
                                              7 COMRAM     7     3      4
                     _nrf_SPI_RW_Reg
                   _nrf_SPI_Read_Buf
                  _nrf_SPI_Write_Buf
                      _nrf_getStatus
 ---------------------------------------------------------------------------------
 (2) _nrf_getStatus                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Read_Buf                                     6     3      3     376
                                              1 COMRAM     6     3      3
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (1) _nrf_init                                             6     6      0    2720
                                              7 COMRAM     1     1      0
                            _OpenSPI
                     _nrf_SPI_RW_Reg
                       _nrf_SPI_Read
                  _nrf_SPI_Write_Buf
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Write_Buf                                    6     3      3     885
                                              1 COMRAM     6     3      3
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Read                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_RW_Reg                                       3     2      1    1527
                                              1 COMRAM     3     2      1
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _nrf_SPI_RW                                           1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _fill_SendBuff                                        6     1      5     308
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay50ms
   _delay750ms
     _delay100ms
     _delay50ms
   _fill_SendBuff
   _init_sensor
   _nrf_init
     _OpenSPI
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
     _nrf_SPI_Read
       _nrf_SPI_RW
     _nrf_SPI_Write_Buf
       _nrf_SPI_RW
   _nrf_send
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
     _nrf_SPI_Read_Buf
       _nrf_SPI_RW
     _nrf_SPI_Write_Buf
       _nrf_SPI_RW
     _nrf_getStatus
   _nrf_txmode
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
   _read_temp
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     _address_Device
       _init_sensor
       _write_Byte
         _write_Bit
     _delay750ms
       _delay100ms
       _delay50ms
     _init_sensor
     _read_Byte
       _read_Bit
     _write_Byte
       _write_Bit
   _search_Devices
     ___awdiv
     _init_sensor
     _read_Bit
     _write_Bit
     _write_Byte
       _write_Bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      43       5       41.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      45       1       72.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      20        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 22 15:22:49 2015

                        _SSPSTATbits 000FC7                                   l43 7B96  
                                 l53 7894                                   l71 7680  
                                 l73 7698                                   l81 758C  
                                 l68 762A                                   l93 7792  
                                 l78 75F4                                   l87 774A  
                       ___awdiv@sign 0006                          __CFG_BOR$ON 000000  
                        __CFG_BORV$3 000000                    nrf_SPI_RW_Reg@reg 0004  
                     nrf_send@rx_buf 000A                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                       _search_Devices 7E38  
                     nrf_send@tx_buf 0008                       nrf_send@status 000E  
                        __CFG_LVP$ON 000000  search_Devices@CurrentConflictBitPos 0016  
                        __CFG_WDT$ON 000000                                  l102 7FFE  
                                l210 74F2                                  l213 7520  
                                l118 7A50                                  l207 74E6  
                                l216 753A                                  l152 74FA  
                                l161 7920                                  l155 7508  
                                l252 781A                                  l253 7834  
                                l254 781C                                  l246 77FA  
                                l255 7820                                  l159 78E6  
                                l248 77FE                                  l249 7800  
                                l452 79B6                                  l477 770E  
                                l654 7E36                                  l567 7C68  
                                l578 7C40                         __CFG_CPB$OFF 000000  
                                _RA0 007C00                                  _RA1 007C01  
                       __CFG_CPD$OFF 000000                                  u861 7D50  
                                u881 7D6E                                  u990 7E56  
                                prod 000FF3                                  wreg 000FE8  
                         _TX_ADDRESS 0041                                 l2012 7F88  
                               l2022 7FEA                                 l2006 7F66  
                               l2016 7F9C                                 l2008 7F6C  
                               l2114 791C                                 l2026 7FFA  
                               l2060 7840                                 l2070 7870  
                               l2072 7874                                 l2064 7848  
                               l2090 78CC                                 l1602 75E0  
                               l2162 7B9A                                 l2154 7B46  
                               l2076 787C                                 l2094 78E0  
                               l1702 7764                                 l1650 7BD0  
                               l1706 7778                                 l1740 75B6  
                               l1660 7C34                                 l1652 7BF0  
                               l1644 7BB4                                 l1812 7DCC  
                               l1734 75A0                                 l1822 7DFA  
                               l1752 76C8                                 l1672 7C5A  
                               l1656 7C08                                 l1648 7BC4  
                               l1816 7DE2                                 l1808 7DBA  
                               l1680 771C                                 l1666 7C48  
                               l1658 7C28                                 l1826 7E10  
                               l1818 7DE8                                 l1850 7960  
                               l1748 76AC                                 l1692 7746  
                               l1684 7730                                 l1852 796A  
                               l1844 794A                                 l1774 7804  
                               l1790 7D78                                 l1598 75CC  
                               l1870 79AC                                 l1862 7990  
                               l1854 7972                                 l1838 7938  
                               l1950 7E78                                 l1944 7E58  
                               l1778 7824                                 l1882 76EA  
                               l1794 7D86                                 l1866 799C  
                               l1962 7E9E                                 l1946 7E64  
                               l1788 7D5E                                 l1980 7EDE  
                               l1956 7E90                                 l1974 7EC8  
                               l1992 7F08                                 l1984 7EE2  
                               l1968 7EB2                                 l1978 7ED6  
                               l1996 7F12                                 l1988 7EEE  
                               u1100 7F7C                                 u1080 7F32  
                               u1307 7572                                 u1317 7582  
                               u1085 7F2E                                 u1407 7A88  
                               u1327 779A                                 u1417 7A98  
                               u1337 77AA                                 u1507 7690  
                               u1427 7AA8                                 u1347 77BA  
                               u1517 7600                                 u1437 7AB8  
                               u1357 77CA                                 u1527 760A  
                               u1447 7AC8                                 u1367 77DA  
                               u1537 761C                                 u1457 7AD8  
                               u1377 7A58                                 u1297 7568  
                               u1467 7AE8                                 u1387 7A68  
                               u1477 7670                                 u1397 7A78  
                               u1487 767A                                 u1497 7686  
                    ??_fill_SendBuff 0006                                 _main 7AF4  
                       ___ftpack@arg 0001                         ___ftpack@exp 0004  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 prodh 000FF4  
                               prodl 000FF3                                 start 0000  
                      __CFG_IESO$OFF 000000                  nrf_SPI_RW_Reg@value 0002  
                      __CFG_MCLRE$ON 000000                         ___ftmul@cntr 001A  
                       ___param_bank 000010                         ___ftmul@sign 001B  
           fill_SendBuff@temperature 0001                      __end_of_OpenSPI 783C  
             __end_of_search_Devices 8000                        __CFG_PLLDIV$2 000000  
                     __CFG_CCP2MX$ON 000000                                ?_main 0029  
                    __end_of___awdiv 79B8                      __end_of___ftmul 7E38  
                    ___awdiv@divisor 0003                                _LATA0 007C48  
                  nrf_SPI_Read_Buf@i 0007                      ___awdiv@counter 0005  
                      __CFG_USBDIV$1 000000                        __CFG_PWRT$OFF 000000  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                       ?_init_sensor 0001                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                      ___awtoft@sign 000C                     ??_address_Device 0007  
              __end_of_nrf_getStatus 750A                        ___ftpack@sign 0005  
                              tablat 000FF5                                status 000FD8  
                     nrf_SPI_RW@data 0001                 nrf_SPI_RW_Reg@status 0003  
                     __CFG_PBADEN$ON 000000                main@nrf24l01_response 00A2  
                    __initialization 762C                         __end_of_main 7BA4  
                    ?_search_Devices 0001                               ??_main 002E  
                    search_Devices@i 0019                      search_Devices@j 001E  
                    search_Devices@k 001B                        __activetblptr 000002  
                   ??_nrf_SPI_RW_Reg 0003                               _ADCON1 000FC1  
                   ___awdiv@dividend 0001                     __end_of___awtoft 7710  
                   __end_of___ftpack 7C6A                               _TRISA0 007C90  
                             _STATUS 000FD8                               _SSPBUF 000FC9  
   search_Devices@LastConflictBitNum 0015                     _nrf_SPI_Read_Buf 769A  
                          ??_OpenSPI 0003                       __CFG_XINST$OFF 000000  
                          ??___awdiv 0005                       __CFG_STVREN$ON 000000  
                          ??___ftmul 0013                     __end_of_read_Bit 758E  
                             clear_0 7632                     ___awdiv@quotient 0007  
              ___ftmul@f3_as_product 0017                     __end_of_nrf_init 7D40  
                   __end_of_nrf_send 7922                         __pdataCOMRAM 0041  
                      ?_nrf_SPI_Read 0001                   search_Devices@mask 0017  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           __accesstop 0060  
            __end_of__initialization 7658               nrf_SPI_Write_Buf@bytes 0004  
                nrf_getStatus@status 0001                        ___rparam_used 000001  
                         ___awtoft@c 0009                           ___ftmul@f1 000D  
                         ___ftmul@f2 0010                       __pcstackCOMRAM 0001  
                    nrf_SPI_Read@reg 0002                   __size_of_delay50ms 0052  
                     ??_nrf_SPI_Read 0002                           _delay100ms 7A52  
               __size_of_init_sensor 0036                           _delay750ms 753C  
                 __size_of_read_Byte 003C                   __size_of_read_temp 009A  
                nrf_SPI_Read@reg_val 0003                            ?___awtoft 0009  
                          ?___ftpack 0001                  nrf_SPI_Read_Buf@reg 0006  
         search_Devices@list_Devices 000D                              _SSPCON1 000FC6  
                            _SSPSTAT 000FC7                    __end_of_delay50ms 77E6  
                    __CFG_VREGEN$OFF 000000                            ?_read_Bit 0001  
              __end_of_fill_SendBuff 7896                   __size_of_write_Bit 0038  
                          ?_nrf_init 0001                              _OpenSPI 77E6  
                            __Hparam 0000                            ?_nrf_send 0008  
                   ??_search_Devices 0009                              __Lparam 0000  
                            ___awdiv 7922                              ___ftmul 7D40  
                            __pcinit 762C                           ??___awtoft 000C  
                         ??___ftpack 0006                              __ramtop 0800  
                            __ptext0 7AF4                              __ptext1 7E38  
                            __ptext2 7922                              __ptext3 79B8  
                            __ptext4 7710                              __ptext5 755E  
                            __ptext6 753C                              __ptext7 7794  
                            __ptext8 7A52                              __ptext9 774C  
                         _nrf_SPI_RW 74DE                    __end_of_read_Byte 774C  
           __end_of_nrf_SPI_Read_Buf 76D4                    write_Bit@WriteArg 0001  
                  __end_of_read_temp 7A52                  fill_SendBuff@buffer 0004  
              nrf_SPI_Read_Buf@bytes 0004                          ?_delay100ms 0001  
                        ?_delay750ms 0001                 end_of_initialization 7658  
                         ??_read_Bit 0001                        __Lmediumconst 0000  
                  _nrf_SPI_Write_Buf 758E                   nrf_SPI_Write_Buf@i 0007  
                         _nrf_txmode 74CE                   ?_nrf_SPI_Write_Buf 0002  
                         ??_nrf_init 0008                           ??_nrf_send 000C  
               __end_of_nrf_SPI_Read 753C                              postdec1 000FE5  
                            postinc0 000FEE                           _temp_union 003E  
                ??_nrf_SPI_Write_Buf 0005               __size_of_nrf_getStatus 0016  
                          _PORTCbits 000F82                    __end_of_write_Bit 769A  
                          _TRISAbits 000F92                            _TRISBbits 000F93  
                          _TRISCbits 000F94              nrf_SPI_Write_Buf@status 0005  
          __end_of_nrf_SPI_Write_Buf 75C2                           main@Sucess 00A0  
                         main@rx_buf 0060                           main@tx_buf 0080  
            __size_of_address_Device 0048                          ___ftmul@exp 0016  
                __size_of_delay100ms 00A2                   init_sensor@reponse 0001  
                         _write_Byte 75C2                  __size_of_delay750ms 0022  
                     read_Bit@result 0001                        __pidataCOMRAM 74C9  
                   OpenSPI@smp_phase 0002                          ?_nrf_SPI_RW 0001  
                start_initialization 762C                     OpenSPI@sync_mode 0003  
                      _nrf_getStatus 74F4                        _DeviceAddress 002E  
                        ?_nrf_txmode 0001              __size_of_nrf_SPI_RW_Reg 0018  
                         read_Byte@i 0003                     __CFG_LPT1OSC$OFF 000000  
              nrf_SPI_Write_Buf@pBuf 0002                    __size_of___awtoft 003C  
                  __size_of___ftpack 00C6                          __pbssCOMRAM 002E  
                      ??_init_sensor 0001                        __pcstackBANK0 0060  
                     ?_nrf_getStatus 0001           __size_of_nrf_SPI_Write_Buf 0034  
              __size_of_nrf_SPI_Read 001A                            _delay50ms 7794  
                  __size_of_read_Bit 0030                  __size_of_nrf_SPI_RW 0016  
                           ?_OpenSPI 0001                    __size_of_nrf_init 00D6  
                  __size_of_nrf_send 008C                             ?___awdiv 0001  
                           ?___ftmul 000D                          ?_write_Byte 0001  
                  ?_nrf_SPI_Read_Buf 0002                  __size_of_nrf_txmode 0010  
                       _nrf_SPI_Read 7522                   ??_nrf_SPI_Read_Buf 0005  
                          _read_Byte 7710                         ??_delay100ms 0001  
                       ??_delay750ms 0002                            _read_temp 79B8  
                __end_of_init_sensor 762C                 nrf_SPI_Read_Buf@pBuf 0002  
                         ?_delay50ms 0001                       _address_Device 774C  
                   __CFG_WDTPS$32768 000000                          write_Byte@i 0003  
                 __end_of_delay100ms 7AF4                   __end_of_delay750ms 755E  
                    OpenSPI@bus_mode 0001               __size_of_fill_SendBuff 005A  
       search_Devices@InputBitStatus 001D                      ??_nrf_getStatus 0001  
                         ?_read_Byte 0001                            _write_Bit 7662  
                          copy_data0 764C                           ?_read_temp 001C  
                __size_of_write_Byte 0034               __end_of_address_Device 7794  
                     _nrf_SPI_RW_Reg 750A                 read_temp@temperature 0021  
                           __Hrparam 0000                             __Lrparam 0000  
                   __size_of_OpenSPI 0056                     __size_of___awdiv 0096  
                      read_Byte@data 0002                 nrf_SPI_Write_Buf@reg 0006  
                   __size_of___ftmul 00F8                             ___awtoft 76D4  
                           ___ftpack 7BA4              __size_of_search_Devices 01C8  
                       ??_nrf_SPI_RW 0001                          _init_sensor 75F6  
                           __ptext10 75C2                             __ptext11 7662  
                           __ptext20 7C6A                             __ptext12 75F6  
                           __ptext21 758E                             __ptext13 7D40  
                           __ptext22 7522                             __ptext14 76D4  
                           __ptext23 750A                             __ptext15 7BA4  
                           __ptext24 74DE                             __ptext16 74CE  
                           __ptext25 77E6                             __ptext17 7896  
                           __ptext26 783C                             __ptext18 74F4  
                           __ptext19 769A                           ?_write_Bit 0001  
                          nrf_send@i 000C                             _read_Bit 755E  
             __end_of_nrf_SPI_RW_Reg 7522                 address_Device@Adress 0005  
                      __size_of_main 00B0                      ?_address_Device 0005  
                        ??_delay50ms 0001                         ??_nrf_txmode 0005  
                      _fill_SendBuff 783C                             _nrf_init 7C6A  
                           _nrf_send 7896                   __end_of_nrf_SPI_RW 74F4  
                           main@argc 0029                             main@argv 002B  
             nrf_SPI_Read_Buf@status 0005                __CFG_CPUDIV$OSC1_PLL2 000000  
                         _INTCONbits 000FF2            search_Devices@SelectedBit 0018  
                 __end_of_nrf_txmode 74DE                          ??_read_Byte 0002  
                        ??_read_temp 001F                      ?_nrf_SPI_RW_Reg 0002  
                     ?_fill_SendBuff 0001                 search_Devices@bitnum 0020  
                         _OSCCONbits 000FD3                       nrf_init@status 0008  
                       ??_write_Byte 0002               read_temp@DeviceAddress 0028  
               main@ds18b20_response 00A1                  __CFG_FOSC$INTOSC_HS 000000  
                     read_temp@temph 0025                       read_temp@templ 0024  
                        _SSPCON1bits 000FC6                          ??_write_Bit 0001  
                     write_Byte@data 0002                       fill_SendBuff@i 0006  
                      read_temp@temp 0026                   __end_of_write_Byte 75F6  
          __size_of_nrf_SPI_Read_Buf 003A                      address_Device@i 0007  
