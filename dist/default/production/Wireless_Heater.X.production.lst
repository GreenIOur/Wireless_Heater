

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Nov  6 20:25:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  007CF7                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _TX_ADDRESS
    26  007CF7  41                 	db	65
    27  007CF8  41                 	db	65
    28  007CF9  41                 	db	65
    29  007CFA  41                 	db	65
    30  007CFB  41                 	db	65
    31  0000                     _ADCON1	set	4033
    32  0000                     _INTCONbits	set	4082
    33  0000                     _OSCCONbits	set	4051
    34  0000                     _PORTCbits	set	3970
    35  0000                     _SSPBUF	set	4041
    36  0000                     _SSPCON1	set	4038
    37  0000                     _SSPCON1bits	set	4038
    38  0000                     _SSPSTAT	set	4039
    39  0000                     _SSPSTATbits	set	4039
    40  0000                     _STATUS	set	4056
    41  0000                     _TRISAbits	set	3986
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _LATA0	set	31816
    45  0000                     _RA0	set	31744
    46  0000                     _RA1	set	31745
    47  0000                     _TRISA0	set	31888
    48                           
    49                           ; #config settings
    50  0000                     
    51                           	psect	cinit
    52  007D78                     __pcinit:
    53                           	opt stack 0
    54  007D78                     start_initialization:
    55                           	opt stack 0
    56  007D78                     __initialization:
    57                           	opt stack 0
    58                           
    59                           ; Clear objects allocated to COMRAM (19 bytes)
    60  007D78  EE00  F017         	lfsr	0,__pbssCOMRAM
    61  007D7C  0E13               	movlw	19
    62  007D7E                     clear_0:
    63  007D7E  6AEE               	clrf	postinc0,c
    64  007D80  06E8               	decf	wreg,f,c
    65  007D82  E1FD               	bnz	clear_0
    66                           
    67                           ; Initialize objects allocated to COMRAM (5 bytes)
    68                           ; load TBLPTR registers with __pidataCOMRAM
    69  007D84  0EF7               	movlw	low __pidataCOMRAM
    70  007D86  6EF6               	movwf	tblptrl,c
    71  007D88  0E7C               	movlw	high __pidataCOMRAM
    72  007D8A  6EF7               	movwf	tblptrh,c
    73  007D8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    74  007D8E  6EF8               	movwf	tblptru,c
    75  007D90  EE00  F02A         	lfsr	0,__pdataCOMRAM
    76  007D94  EE10 F005          	lfsr	1,5
    77  007D98                     copy_data0:
    78  007D98  0009               	tblrd		*+
    79  007D9A  CFF5 FFEE          	movff	tablat,postinc0
    80  007D9E  50E5               	movf	postdec1,w,c
    81  007DA0  50E1               	movf	fsr1l,w,c
    82  007DA2  E1FA               	bnz	copy_data0
    83  007DA4                     end_of_initialization:
    84                           	opt stack 0
    85  007DA4                     __end_of__initialization:
    86                           	opt stack 0
    87  007DA4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    88  007DA6  6EF8               	movwf	tblptru,c
    89  007DA8  0100               	movlb	0
    90  007DAA  EF2B  F03F         	goto	_main	;jump to C main() function
    91                           tblptru	equ	0xFF8
    92                           tblptrh	equ	0xFF7
    93                           tblptrl	equ	0xFF6
    94                           tablat	equ	0xFF5
    95                           postinc0	equ	0xFEE
    96                           wreg	equ	0xFE8
    97                           postdec1	equ	0xFE5
    98                           fsr1l	equ	0xFE1
    99                           
   100                           	psect	bssCOMRAM
   101  000017                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000017                     _DeviceAddress:
   104                           	opt stack 0
   105  000017                     	ds	16
   106  000027                     _temp_union:
   107                           	opt stack 0
   108  000027                     	ds	3
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           postdec1	equ	0xFE5
   116                           fsr1l	equ	0xFE1
   117                           
   118                           	psect	dataCOMRAM
   119  00002A                     __pdataCOMRAM:
   120                           	opt stack 0
   121  00002A                     _TX_ADDRESS:
   122                           	opt stack 0
   123  00002A                     	ds	5
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ??_delay50ms:
   137  000001                     nrf_SPI_RW@data:
   138                           	opt stack 0
   139  000001                     OpenSPI@bus_mode:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x0
   143  000001                     	ds	1
   144  000002                     nrf_SPI_RW_Reg@value:
   145                           	opt stack 0
   146  000002                     nrf_SPI_Read@reg:
   147                           	opt stack 0
   148  000002                     OpenSPI@smp_phase:
   149                           	opt stack 0
   150  000002                     nrf_SPI_Write_Buf@pBuf:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x1
   154  000002                     	ds	1
   155  000003                     nrf_SPI_RW_Reg@status:
   156                           	opt stack 0
   157  000003                     nrf_SPI_Read@reg_val:
   158                           	opt stack 0
   159  000003                     OpenSPI@sync_mode:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x2
   163  000003                     	ds	1
   164  000004                     nrf_SPI_RW_Reg@reg:
   165                           	opt stack 0
   166  000004                     nrf_SPI_Write_Buf@bytes:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x3
   170  000004                     	ds	1
   171  000005                     nrf_SPI_Write_Buf@status:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175  000005                     	ds	1
   176  000006                     nrf_SPI_Write_Buf@reg:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180  000006                     	ds	1
   181  000007                     nrf_SPI_Write_Buf@i:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x6
   185  000007                     	ds	1
   186  000008                     nrf_init@status:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x7
   190  000008                     	ds	1
   191  000009                     
   192                           ; 2 bytes @ 0x8
   193  000009                     	ds	2
   194  00000B                     
   195                           ; 3 bytes @ 0xA
   196  00000B                     	ds	3
   197  00000E                     ??_main:
   198                           
   199                           ; 0 bytes @ 0xD
   200  00000E                     	ds	1
   201  00000F                     main@ds18b20_response:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0xE
   205  00000F                     	ds	1
   206  000010                     main@nrf24l01_response:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0xF
   210  000010                     	ds	1
   211  000011                     main@cpt2:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x10
   215  000011                     	ds	2
   216  000013                     main@rampe:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x12
   220  000013                     	ds	2
   221  000015                     main@cpt:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x14
   225  000015                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 19 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;  argc            2    8[COMRAM] int 
   243 ;;  argv            3   10[COMRAM] PTR PTR unsigned char 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  rx_buf         32    0        unsigned char [32]
   246 ;;  tx_buf         32    0        unsigned char [32]
   247 ;;  temperature     3    0        float 
   248 ;;  cpt             2   20[COMRAM] int 
   249 ;;  rampe           2   18[COMRAM] int 
   250 ;;  cpt2            2   16[COMRAM] int 
   251 ;;  nrf24l01_res    1   15[COMRAM] unsigned char 
   252 ;;  ds18b20_resp    1   14[COMRAM] unsigned char 
   253 ;; Return value:  Size  Location     Type
   254 ;;                  2    8[COMRAM] int 
   255 ;; Registers used:
   256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         5       0       0       0       0       0       0       0       0
   263 ;;      Locals:         8       0       0       0       0       0       0       0       0
   264 ;;      Temps:          1       0       0       0       0       0       0       0       0
   265 ;;      Totals:        14       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:       14 bytes
   267 ;; Hardware stack levels required when called:    3
   268 ;; This function calls:
   269 ;;		_delay50ms
   270 ;;		_nrf_init
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277  007E56                     __ptext0:
   278                           	opt stack 0
   279  007E56                     _main:
   280                           	opt stack 28
   281                           
   282                           ;main.c: 20: TRISCbits.TRISC6 = 0;
   283                           
   284                           ;incstack = 0
   285  007E56  9C94               	bcf	3988,6,c	;volatile
   286                           
   287                           ;main.c: 22: TRISAbits.TRISA1 = 0;
   288  007E58  9292               	bcf	3986,1,c	;volatile
   289                           
   290                           ;main.c: 24: unsigned char tx_buf[32];
   291                           ;main.c: 25: unsigned char rx_buf[32];
   292                           ;main.c: 26: unsigned char ds18b20_response = 1;
   293  007E5A  0E01               	movlw	1
   294  007E5C  6E0F               	movwf	main@ds18b20_response,c
   295                           
   296                           ;main.c: 27: unsigned char nrf24l01_response = 1;
   297  007E5E  0E01               	movlw	1
   298  007E60  6E10               	movwf	main@nrf24l01_response,c
   299                           
   300                           ;main.c: 28: float temperature;
   301                           ;main.c: 32: OSCCONbits.IRCF = 0xF;
   302  007E62  88D3               	bsf	4051,4,c	;volatile
   303  007E64  8AD3               	bsf	4051,5,c	;volatile
   304  007E66  8CD3               	bsf	4051,6,c	;volatile
   305                           
   306                           ;main.c: 33: ADCON1 |= 0xF;
   307  007E68  0E0F               	movlw	15
   308  007E6A  12C1               	iorwf	4033,f,c	;volatile
   309                           
   310                           ;main.c: 34: (INTCONbits.GIE = 1);
   311  007E6C  8EF2               	bsf	intcon,7,c	;volatile
   312                           
   313                           ;main.c: 38: TRISCbits.TRISC0 = 0;
   314  007E6E  9094               	bcf	3988,0,c	;volatile
   315                           
   316                           ;main.c: 39: TRISCbits.TRISC1 = 0;
   317  007E70  9294               	bcf	3988,1,c	;volatile
   318                           
   319                           ;main.c: 40: TRISCbits.TRISC2 = 1;
   320  007E72  8494               	bsf	3988,2,c	;volatile
   321                           
   322                           ;main.c: 41: TRISBbits.TRISB1 = 0;
   323  007E74  9293               	bcf	3987,1,c	;volatile
   324                           
   325                           ;main.c: 42: TRISBbits.TRISB0 = 1;
   326  007E76  8093               	bsf	3987,0,c	;volatile
   327                           
   328                           ;main.c: 43: TRISCbits.TRISC7 = 0;
   329  007E78  9E94               	bcf	3988,7,c	;volatile
   330                           
   331                           ;main.c: 45: RA1=1;
   332  007E7A  8280               	bsf	3968,1,c	;volatile
   333                           
   334                           ;main.c: 46: nrf_init();
   335  007E7C  EC95  F03F         	call	_nrf_init	;wreg free
   336                           
   337                           ;main.c: 47: int cpt;
   338                           ;main.c: 48: int rampe = 0,cpt2;
   339  007E80  0E00               	movlw	0
   340  007E82  6E14               	movwf	main@rampe+1,c
   341  007E84  0E00               	movlw	0
   342  007E86  6E13               	movwf	main@rampe,c
   343                           
   344                           ;main.c: 49: delay50ms();
   345  007E88  ECD7  F03E         	call	_delay50ms	;wreg free
   346  007E8C  D000               	goto	l1512
   347  007E8E                     l1512:
   348                           
   349                           ;main.c: 51: rampe = 0;
   350  007E8E  0E00               	movlw	0
   351  007E90  6E14               	movwf	main@rampe+1,c
   352  007E92  0E00               	movlw	0
   353  007E94  6E13               	movwf	main@rampe,c
   354                           
   355                           ;main.c: 52: for( cpt2 = 0; cpt2 < 30 ; cpt2++){
   356  007E96  0E00               	movlw	0
   357  007E98  6E12               	movwf	main@cpt2+1,c
   358  007E9A  0E00               	movlw	0
   359  007E9C  6E11               	movwf	main@cpt2,c
   360  007E9E                     l1516:
   361  007E9E  BE12               	btfsc	main@cpt2+1,7,c
   362  007EA0  D008               	goto	l30
   363  007EA2  5012               	movf	main@cpt2+1,w,c
   364  007EA4  E1F4               	bnz	l1512
   365  007EA6  0E1E               	movlw	30
   366  007EA8  5C11               	subwf	main@cpt2,w,c
   367  007EAA  B0D8               	btfsc	status,0,c
   368  007EAC  D7F0               	goto	l1512
   369  007EAE  D001               	goto	l30
   370  007EB0  D7EE               	goto	l1512
   371  007EB2                     l30:
   372                           
   373                           ;main.c: 53: PORTCbits.RC6 = 0;
   374  007EB2  9C82               	bcf	3970,6,c	;volatile
   375                           
   376                           ;main.c: 54: for(cpt = 0; cpt < rampe; cpt++){
   377  007EB4  0E00               	movlw	0
   378  007EB6  6E16               	movwf	main@cpt+1,c
   379  007EB8  0E00               	movlw	0
   380  007EBA  6E15               	movwf	main@cpt,c
   381  007EBC  D00A               	goto	l32
   382  007EBE                     l1522:
   383                           
   384                           ;main.c: 55: _delay((unsigned long)((10)*(8000000/4000.0)));
   385  007EBE  0E1A               	movlw	26
   386  007EC0  6E0E               	movwf	??_main& (0+255),c
   387  007EC2  0EF8               	movlw	248
   388  007EC4                     u607:
   389  007EC4  2EE8               	decfsz	wreg,f,c
   390  007EC6  D7FE               	goto	u607
   391  007EC8  2E0E               	decfsz	??_main& (0+255),f,c
   392  007ECA  D7FC               	goto	u607
   393  007ECC  D000               	nop2	
   394  007ECE  4A15               	infsnz	main@cpt,f,c
   395  007ED0  2A16               	incf	main@cpt+1,f,c
   396  007ED2                     l32:
   397  007ED2  5013               	movf	main@rampe,w,c
   398  007ED4  5C15               	subwf	main@cpt,w,c
   399  007ED6  5016               	movf	main@cpt+1,w,c
   400  007ED8  0A80               	xorlw	128
   401  007EDA  6E0E               	movwf	??_main& (0+255),c
   402  007EDC  5014               	movf	main@rampe+1,w,c
   403  007EDE  0A80               	xorlw	128
   404  007EE0  580E               	subwfb	??_main& (0+255),w,c
   405  007EE2  A0D8               	btfss	status,0,c
   406  007EE4  D7EC               	goto	l1522
   407                           
   408                           ;main.c: 56: }
   409                           ;main.c: 57: PORTCbits.RC6 = 1;
   410  007EE6  8C82               	bsf	3970,6,c	;volatile
   411                           
   412                           ;main.c: 58: for(cpt = 0; cpt < rampe; cpt++){
   413  007EE8  0E00               	movlw	0
   414  007EEA  6E16               	movwf	main@cpt+1,c
   415  007EEC  0E00               	movlw	0
   416  007EEE  6E15               	movwf	main@cpt,c
   417  007EF0  D00A               	goto	l35
   418  007EF2                     l1528:
   419                           
   420                           ;main.c: 59: _delay((unsigned long)((10)*(8000000/4000.0)));
   421  007EF2  0E1A               	movlw	26
   422  007EF4  6E0E               	movwf	??_main& (0+255),c
   423  007EF6  0EF8               	movlw	248
   424  007EF8                     u617:
   425  007EF8  2EE8               	decfsz	wreg,f,c
   426  007EFA  D7FE               	goto	u617
   427  007EFC  2E0E               	decfsz	??_main& (0+255),f,c
   428  007EFE  D7FC               	goto	u617
   429  007F00  D000               	nop2	
   430  007F02  4A15               	infsnz	main@cpt,f,c
   431  007F04  2A16               	incf	main@cpt+1,f,c
   432  007F06                     l35:
   433  007F06  5013               	movf	main@rampe,w,c
   434  007F08  5C15               	subwf	main@cpt,w,c
   435  007F0A  5016               	movf	main@cpt+1,w,c
   436  007F0C  0A80               	xorlw	128
   437  007F0E  6E0E               	movwf	??_main& (0+255),c
   438  007F10  5014               	movf	main@rampe+1,w,c
   439  007F12  0A80               	xorlw	128
   440  007F14  580E               	subwfb	??_main& (0+255),w,c
   441  007F16  A0D8               	btfss	status,0,c
   442  007F18  D7EC               	goto	l1528
   443                           
   444                           ;main.c: 60: }
   445                           ;main.c: 61: rampe++;
   446  007F1A  4A13               	infsnz	main@rampe,f,c
   447  007F1C  2A14               	incf	main@rampe+1,f,c
   448  007F1E  4A11               	infsnz	main@cpt2,f,c
   449  007F20  2A12               	incf	main@cpt2+1,f,c
   450  007F22  D7BD               	goto	l1516
   451  007F24  D7B4               	goto	l1512
   452                           
   453                           ;main.c: 62: }
   454                           ;main.c: 63: }
   455                           ;main.c: 90: return (0);
   456                           ;	Return value of _main is never used
   457  007F26  EF00  F000         	goto	start
   458  007F2A                     __end_of_main:
   459                           	opt stack 0
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           intcon	equ	0xFF2
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _nrf_init *****************
   472 ;; Defined at:
   473 ;;		line 85 in file "NRF_24L01/nRF2401.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  Test            5    0        unsigned char [5]
   478 ;;  status          1    7[COMRAM] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;		None               void
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         1       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0       0
   491 ;;      Totals:         1       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        1 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    2
   495 ;; This function calls:
   496 ;;		_OpenSPI
   497 ;;		_nrf_SPI_RW_Reg
   498 ;;		_nrf_SPI_Read
   499 ;;		_nrf_SPI_Write_Buf
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text1
   506  007F2A                     __ptext1:
   507                           	opt stack 0
   508  007F2A                     _nrf_init:
   509                           	opt stack 28
   510                           
   511                           ;nRF2401.c: 86: char status=0;
   512                           
   513                           ;incstack = 0
   514  007F2A  0E00               	movlw	0
   515  007F2C  6E08               	movwf	nrf_init@status,c
   516                           
   517                           ;nRF2401.c: 87: unsigned char Test[5];
   518                           ;nRF2401.c: 88: OpenSPI(0b00000010, 0b00000000, 0b00000000);
   519  007F2E  0E00               	movlw	0
   520  007F30  6E01               	movwf	OpenSPI@bus_mode,c
   521  007F32  0E00               	movlw	0
   522  007F34  6E02               	movwf	OpenSPI@smp_phase,c
   523  007F36  0E02               	movlw	2
   524  007F38  EC00  F03F         	call	_OpenSPI
   525                           
   526                           ;nRF2401.c: 90: PORTCbits.RC0 = 1;
   527  007F3C  8082               	bsf	3970,0,c	;volatile
   528                           
   529                           ;nRF2401.c: 91: PORTCbits.RC1 = 1;
   530  007F3E  8282               	bsf	3970,1,c	;volatile
   531                           
   532                           ;nRF2401.c: 93: PORTCbits.RC0 = 0;
   533  007F40  9082               	bcf	3970,0,c	;volatile
   534                           
   535                           ;nRF2401.c: 95: nrf_SPI_Write_Buf(0x20 + 0x10, TX_ADDRESS, 5);
   536  007F42  0E2A               	movlw	low _TX_ADDRESS
   537  007F44  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
   538  007F46  0E00               	movlw	high _TX_ADDRESS
   539  007F48  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
   540  007F4A  0E05               	movlw	5
   541  007F4C  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
   542  007F4E  0E30               	movlw	48
   543  007F50  ECA2  F03E         	call	_nrf_SPI_Write_Buf
   544                           
   545                           ;nRF2401.c: 97: nrf_SPI_Write_Buf(0x20 + 0x0A, TX_ADDRESS, 5);
   546  007F54  0E2A               	movlw	low _TX_ADDRESS
   547  007F56  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
   548  007F58  0E00               	movlw	high _TX_ADDRESS
   549  007F5A  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
   550  007F5C  0E05               	movlw	5
   551  007F5E  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
   552  007F60  0E2A               	movlw	42
   553  007F62  ECA2  F03E         	call	_nrf_SPI_Write_Buf
   554                           
   555                           ;nRF2401.c: 109: nrf_SPI_RW_Reg(0x50,0x73);
   556  007F66  0E73               	movlw	115
   557  007F68  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   558  007F6A  0E50               	movlw	80
   559  007F6C  EC89  F03E         	call	_nrf_SPI_RW_Reg
   560                           
   561                           ;nRF2401.c: 111: nrf_SPI_RW_Reg(0x20 + 0x1D, 0x06);
   562  007F70  0E06               	movlw	6
   563  007F72  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   564  007F74  0E3D               	movlw	61
   565  007F76  EC89  F03E         	call	_nrf_SPI_RW_Reg
   566                           
   567                           ;nRF2401.c: 113: nrf_SPI_RW_Reg(0x20 + 0x1C, 0b111111);
   568  007F7A  0E3F               	movlw	63
   569  007F7C  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   570  007F7E  0E3C               	movlw	60
   571  007F80  EC89  F03E         	call	_nrf_SPI_RW_Reg
   572                           
   573                           ;nRF2401.c: 115: nrf_SPI_RW_Reg(0x20 + 0x01, 0b111111);
   574  007F84  0E3F               	movlw	63
   575  007F86  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   576  007F88  0E21               	movlw	33
   577  007F8A  EC89  F03E         	call	_nrf_SPI_RW_Reg
   578                           
   579                           ;nRF2401.c: 117: nrf_SPI_RW_Reg(0x20 + 0x02, 0b0001);
   580  007F8E  0E01               	movlw	1
   581  007F90  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   582  007F92  0E22               	movlw	34
   583  007F94  EC89  F03E         	call	_nrf_SPI_RW_Reg
   584                           
   585                           ;nRF2401.c: 119: nrf_SPI_RW_Reg(0x20 + 0x04, 0x12);
   586  007F98  0E12               	movlw	18
   587  007F9A  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   588  007F9C  0E24               	movlw	36
   589  007F9E  EC89  F03E         	call	_nrf_SPI_RW_Reg
   590                           
   591                           ;nRF2401.c: 121: nrf_SPI_RW_Reg(0x20 + 0x05, 40);
   592  007FA2  0E28               	movlw	40
   593  007FA4  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   594  007FA6  0E25               	movlw	37
   595  007FA8  EC89  F03E         	call	_nrf_SPI_RW_Reg
   596                           
   597                           ;nRF2401.c: 123: nrf_SPI_RW_Reg(0x20 + 0x11, 32);
   598  007FAC  0E20               	movlw	32
   599  007FAE  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   600  007FB0  0E31               	movlw	49
   601  007FB2  EC89  F03E         	call	_nrf_SPI_RW_Reg
   602                           
   603                           ;nRF2401.c: 125: nrf_SPI_RW_Reg(0x20 + 0x12, 32);
   604  007FB6  0E20               	movlw	32
   605  007FB8  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   606  007FBA  0E32               	movlw	50
   607  007FBC  EC89  F03E         	call	_nrf_SPI_RW_Reg
   608                           
   609                           ;nRF2401.c: 127: nrf_SPI_RW_Reg(0x20 + 0x06, 0x07);
   610  007FC0  0E07               	movlw	7
   611  007FC2  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   612  007FC4  0E26               	movlw	38
   613  007FC6  EC89  F03E         	call	_nrf_SPI_RW_Reg
   614                           
   615                           ;nRF2401.c: 129: nrf_SPI_RW_Reg(0xE2,0);
   616  007FCA  0E00               	movlw	0
   617  007FCC  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   618  007FCE  0EE2               	movlw	226
   619  007FD0  EC89  F03E         	call	_nrf_SPI_RW_Reg
   620                           
   621                           ;nRF2401.c: 131: nrf_SPI_RW_Reg(0xE1,0);
   622  007FD4  0E00               	movlw	0
   623  007FD6  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   624  007FD8  0EE1               	movlw	225
   625  007FDA  EC89  F03E         	call	_nrf_SPI_RW_Reg
   626                           
   627                           ;nRF2401.c: 133: status=nrf_SPI_Read(STATUS);
   628  007FDE  50D8               	movf	status,w,c	;volatile
   629  007FE0  EC95  F03E         	call	_nrf_SPI_Read
   630  007FE4  6E08               	movwf	nrf_init@status,c
   631                           
   632                           ;nRF2401.c: 135: nrf_SPI_RW_Reg(0x20 + STATUS, status);
   633  007FE6  C008  F002         	movff	nrf_init@status,nrf_SPI_RW_Reg@value
   634  007FEA  50D8               	movf	status,w,c	;volatile
   635  007FEC  0F20               	addlw	32
   636  007FEE  EC89  F03E         	call	_nrf_SPI_RW_Reg
   637                           
   638                           ;nRF2401.c: 137: nrf_SPI_RW_Reg(0x20 + 0x03, 0x3);
   639  007FF2  0E03               	movlw	3
   640  007FF4  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   641  007FF6  0E23               	movlw	35
   642  007FF8  EC89  F03E         	call	_nrf_SPI_RW_Reg
   643                           
   644                           ;nRF2401.c: 139: PORTCbits.RC0 = 1;
   645  007FFC  8082               	bsf	3970,0,c	;volatile
   646  007FFE  0012               	return		;funcret
   647  008000                     __end_of_nrf_init:
   648                           	opt stack 0
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           intcon	equ	0xFF2
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           status	equ	0xFD8
   659                           
   660 ;; *************** function _nrf_SPI_Write_Buf *****************
   661 ;; Defined at:
   662 ;;		line 308 in file "NRF_24L01/nRF2401.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  reg             1    wreg     unsigned char 
   665 ;;  pBuf            2    1[COMRAM] PTR unsigned char 
   666 ;;		 -> TX_ADDRESS(5), 
   667 ;;  bytes           1    3[COMRAM] unsigned char 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  reg             1    5[COMRAM] unsigned char 
   670 ;;  i               1    6[COMRAM] unsigned char 
   671 ;;  status          1    4[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      unsigned char 
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   681 ;;      Params:         3       0       0       0       0       0       0       0       0
   682 ;;      Locals:         3       0       0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0
   684 ;;      Totals:         6       0       0       0       0       0       0       0       0
   685 ;;Total ram usage:        6 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		_nrf_SPI_RW
   690 ;; This function is called by:
   691 ;;		_nrf_init
   692 ;;		_nrf_send
   693 ;;		_nrf_send_noack
   694 ;;		_nrf_receive
   695 ;;		_nrf_setTxAddr
   696 ;;		_nrf_setRxAddr
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text2
   701  007D44                     __ptext2:
   702                           	opt stack 0
   703  007D44                     _nrf_SPI_Write_Buf:
   704                           	opt stack 28
   705                           
   706                           ;incstack = 0
   707                           ;nrf_SPI_Write_Buf@reg stored from wreg
   708  007D44  6E06               	movwf	nrf_SPI_Write_Buf@reg,c
   709                           
   710                           ;nRF2401.c: 309: unsigned char status,i;
   711                           ;nRF2401.c: 311: PORTCbits.RC1 = 0;
   712  007D46  9282               	bcf	3970,1,c	;volatile
   713                           
   714                           ;nRF2401.c: 312: status = nrf_SPI_RW(reg);
   715  007D48  5006               	movf	nrf_SPI_Write_Buf@reg,w,c
   716  007D4A  EC7E  F03E         	call	_nrf_SPI_RW
   717  007D4E  6E05               	movwf	nrf_SPI_Write_Buf@status,c
   718                           
   719                           ;nRF2401.c: 313: for(i=0;i<bytes; i++) {
   720  007D50  0E00               	movlw	0
   721  007D52  6E07               	movwf	nrf_SPI_Write_Buf@i,c
   722  007D54  D00B               	goto	l1416
   723  007D56                     l1410:
   724                           
   725                           ;nRF2401.c: 314: nrf_SPI_RW(*pBuf);
   726  007D56  C002  FFD9         	movff	nrf_SPI_Write_Buf@pBuf,fsr2l
   727  007D5A  C003  FFDA         	movff	nrf_SPI_Write_Buf@pBuf+1,fsr2h
   728  007D5E  50DF               	movf	indf2,w,c
   729  007D60  EC7E  F03E         	call	_nrf_SPI_RW
   730                           
   731                           ;nRF2401.c: 315: *pBuf++;
   732  007D64  4A02               	infsnz	nrf_SPI_Write_Buf@pBuf,f,c
   733  007D66  2A03               	incf	nrf_SPI_Write_Buf@pBuf+1,f,c
   734  007D68  2A07               	incf	nrf_SPI_Write_Buf@i,f,c
   735  007D6A  D000               	goto	l1416
   736  007D6C                     l1416:
   737  007D6C  5004               	movf	nrf_SPI_Write_Buf@bytes,w,c
   738  007D6E  5C07               	subwf	nrf_SPI_Write_Buf@i,w,c
   739  007D70  A0D8               	btfss	status,0,c
   740  007D72  D7F1               	goto	l1410
   741                           
   742                           ;nRF2401.c: 316: }
   743                           ;nRF2401.c: 317: PORTCbits.RC1 = 1;
   744  007D74  8282               	bsf	3970,1,c	;volatile
   745                           
   746                           ;nRF2401.c: 318: return(status);
   747                           ;	Return value of _nrf_SPI_Write_Buf is never used
   748  007D76  0012               	return		;funcret
   749  007D78                     __end_of_nrf_SPI_Write_Buf:
   750                           	opt stack 0
   751                           tblptru	equ	0xFF8
   752                           tblptrh	equ	0xFF7
   753                           tblptrl	equ	0xFF6
   754                           tablat	equ	0xFF5
   755                           intcon	equ	0xFF2
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           postdec1	equ	0xFE5
   759                           fsr1l	equ	0xFE1
   760                           indf2	equ	0xFDF
   761                           fsr2h	equ	0xFDA
   762                           fsr2l	equ	0xFD9
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _nrf_SPI_Read *****************
   766 ;; Defined at:
   767 ;;		line 266 in file "NRF_24L01/nRF2401.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  reg             1    wreg     unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  reg             1    1[COMRAM] unsigned char 
   772 ;;  reg_val         1    2[COMRAM] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      unsigned char 
   775 ;; Registers used:
   776 ;;		wreg, status,2, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   782 ;;      Params:         0       0       0       0       0       0       0       0       0
   783 ;;      Locals:         2       0       0       0       0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0
   785 ;;      Totals:         2       0       0       0       0       0       0       0       0
   786 ;;Total ram usage:        2 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    1
   789 ;; This function calls:
   790 ;;		_nrf_SPI_RW
   791 ;; This function is called by:
   792 ;;		_nrf_init
   793 ;;		_nrf_receive
   794 ;;		_nrf_enablePipe
   795 ;;		_nrf_disablePipe
   796 ;;		_nrf_readRegister
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text3
   801  007D2A                     __ptext3:
   802                           	opt stack 0
   803  007D2A                     _nrf_SPI_Read:
   804                           	opt stack 28
   805                           
   806                           ;incstack = 0
   807                           ;nrf_SPI_Read@reg stored from wreg
   808  007D2A  6E02               	movwf	nrf_SPI_Read@reg,c
   809                           
   810                           ;nRF2401.c: 267: unsigned char reg_val;
   811                           ;nRF2401.c: 269: PORTCbits.RC1 = 0;
   812  007D2C  9282               	bcf	3970,1,c	;volatile
   813                           
   814                           ;nRF2401.c: 270: nrf_SPI_RW(reg);
   815  007D2E  5002               	movf	nrf_SPI_Read@reg,w,c
   816  007D30  EC7E  F03E         	call	_nrf_SPI_RW
   817                           
   818                           ;nRF2401.c: 271: reg_val = nrf_SPI_RW(0);
   819  007D34  0E00               	movlw	0
   820  007D36  EC7E  F03E         	call	_nrf_SPI_RW
   821  007D3A  6E03               	movwf	nrf_SPI_Read@reg_val,c
   822                           
   823                           ;nRF2401.c: 272: PORTCbits.RC1 = 1;
   824  007D3C  8282               	bsf	3970,1,c	;volatile
   825                           
   826                           ;nRF2401.c: 274: return(reg_val);
   827  007D3E  5003               	movf	nrf_SPI_Read@reg_val,w,c
   828  007D40  D000               	goto	l210
   829  007D42                     l210:
   830  007D42  0012               	return		;funcret
   831  007D44                     __end_of_nrf_SPI_Read:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           intcon	equ	0xFF2
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1l	equ	0xFE1
   842                           indf2	equ	0xFDF
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _nrf_SPI_RW_Reg *****************
   848 ;; Defined at:
   849 ;;		line 248 in file "NRF_24L01/nRF2401.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  reg             1    wreg     unsigned char 
   852 ;;  value           1    1[COMRAM] unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  reg             1    3[COMRAM] unsigned char 
   855 ;;  status          1    2[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      unsigned char 
   858 ;; Registers used:
   859 ;;		wreg, status,2, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   865 ;;      Params:         1       0       0       0       0       0       0       0       0
   866 ;;      Locals:         2       0       0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0
   868 ;;      Totals:         3       0       0       0       0       0       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    1
   872 ;; This function calls:
   873 ;;		_nrf_SPI_RW
   874 ;; This function is called by:
   875 ;;		_nrf_init
   876 ;;		_nrf_send
   877 ;;		_nrf_send_noack
   878 ;;		_nrf_receive
   879 ;;		_nrf_rxmode
   880 ;;		_nrf_txmode
   881 ;;		_nrf_powerdown
   882 ;;		_nrf_enablePipe
   883 ;;		_nrf_disablePipe
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text4
   888  007D12                     __ptext4:
   889                           	opt stack 0
   890  007D12                     _nrf_SPI_RW_Reg:
   891                           	opt stack 28
   892                           
   893                           ;incstack = 0
   894                           ;nrf_SPI_RW_Reg@reg stored from wreg
   895  007D12  6E04               	movwf	nrf_SPI_RW_Reg@reg,c
   896                           
   897                           ;nRF2401.c: 249: unsigned char status;
   898                           ;nRF2401.c: 251: PORTCbits.RC1 = 0;
   899  007D14  9282               	bcf	3970,1,c	;volatile
   900                           
   901                           ;nRF2401.c: 252: status = nrf_SPI_RW(reg);
   902  007D16  5004               	movf	nrf_SPI_RW_Reg@reg,w,c
   903  007D18  EC7E  F03E         	call	_nrf_SPI_RW
   904  007D1C  6E03               	movwf	nrf_SPI_RW_Reg@status,c
   905                           
   906                           ;nRF2401.c: 253: nrf_SPI_RW(value);
   907  007D1E  5002               	movf	nrf_SPI_RW_Reg@value,w,c
   908  007D20  EC7E  F03E         	call	_nrf_SPI_RW
   909                           
   910                           ;nRF2401.c: 254: PORTCbits.RC1 = 1;
   911  007D24  8282               	bsf	3970,1,c	;volatile
   912  007D26  D000               	goto	l207
   913  007D28                     l207:
   914  007D28  0012               	return		;funcret
   915  007D2A                     __end_of_nrf_SPI_RW_Reg:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           intcon	equ	0xFF2
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           postdec1	equ	0xFE5
   925                           fsr1l	equ	0xFE1
   926                           indf2	equ	0xFDF
   927                           fsr2h	equ	0xFDA
   928                           fsr2l	equ	0xFD9
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function _nrf_SPI_RW *****************
   932 ;; Defined at:
   933 ;;		line 233 in file "NRF_24L01/nRF2401.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  data            1    wreg     unsigned char 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  data            1    0[COMRAM] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      unsigned char 
   940 ;; Registers used:
   941 ;;		wreg, status,2
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         1       0       0       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0
   950 ;;      Totals:         1       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:        1 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_nrf_SPI_RW_Reg
   957 ;;		_nrf_SPI_Read
   958 ;;		_nrf_SPI_Write_Buf
   959 ;;		_nrf_SPI_Read_Buf
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text5
   964  007CFC                     __ptext5:
   965                           	opt stack 0
   966  007CFC                     _nrf_SPI_RW:
   967                           	opt stack 28
   968                           
   969                           ;incstack = 0
   970                           ;nrf_SPI_RW@data stored from wreg
   971  007CFC  6E01               	movwf	nrf_SPI_RW@data,c
   972                           
   973                           ;nRF2401.c: 234: SSPBUF = data;
   974  007CFE  C001  FFC9         	movff	nrf_SPI_RW@data,4041	;volatile
   975                           
   976                           ;nRF2401.c: 235: while(!SSPSTATbits.BF);
   977  007D02  D000               	goto	l201
   978  007D04                     l201:
   979  007D04  A0C7               	btfss	4039,0,c	;volatile
   980  007D06  D7FE               	goto	l201
   981                           
   982                           ;nRF2401.c: 236: data = SSPBUF;
   983  007D08  CFC9 F001          	movff	4041,nrf_SPI_RW@data	;volatile
   984                           
   985                           ;nRF2401.c: 237: return(data);
   986  007D0C  5001               	movf	nrf_SPI_RW@data,w,c
   987  007D0E  D000               	goto	l204
   988  007D10                     l204:
   989  007D10  0012               	return		;funcret
   990  007D12                     __end_of_nrf_SPI_RW:
   991                           	opt stack 0
   992                           tblptru	equ	0xFF8
   993                           tblptrh	equ	0xFF7
   994                           tblptrl	equ	0xFF6
   995                           tablat	equ	0xFF5
   996                           intcon	equ	0xFF2
   997                           postinc0	equ	0xFEE
   998                           wreg	equ	0xFE8
   999                           postdec1	equ	0xFE5
  1000                           fsr1l	equ	0xFE1
  1001                           indf2	equ	0xFDF
  1002                           fsr2h	equ	0xFDA
  1003                           fsr2l	equ	0xFD9
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _OpenSPI *****************
  1007 ;; Defined at:
  1008 ;;		line 14 in file "/Applications/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi_open.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  sync_mode       1    wreg     unsigned char 
  1011 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1012 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;		None               void
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1024 ;;      Params:         2       0       0       0       0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1027 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_nrf_init
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text6
  1038  007E00                     __ptext6:
  1039                           	opt stack 0
  1040  007E00                     _OpenSPI:
  1041                           	opt stack 29
  1042                           
  1043                           ;incstack = 0
  1044                           ;OpenSPI@sync_mode stored from wreg
  1045  007E00  6E03               	movwf	OpenSPI@sync_mode,c
  1046  007E02  0E3F               	movlw	63
  1047  007E04  16C7               	andwf	4039,f,c	;volatile
  1048  007E06  0E00               	movlw	0
  1049  007E08  6EC6               	movwf	4038,c	;volatile
  1050  007E0A  5003               	movf	OpenSPI@sync_mode,w,c
  1051  007E0C  12C6               	iorwf	4038,f,c	;volatile
  1052  007E0E  5002               	movf	OpenSPI@smp_phase,w,c
  1053  007E10  12C7               	iorwf	4039,f,c	;volatile
  1054  007E12  D005               	goto	l1428
  1055  007E14                     l240:
  1056  007E14  8CC7               	bsf	4039,6,c	;volatile
  1057  007E16  D013               	goto	l1432
  1058  007E18                     l242:
  1059  007E18  8CC7               	bsf	4039,6,c	;volatile
  1060  007E1A                     l243:
  1061  007E1A  88C6               	bsf	4038,4,c	;volatile
  1062  007E1C  D010               	goto	l1432
  1063  007E1E                     l1428:
  1064  007E1E  5001               	movf	OpenSPI@bus_mode,w,c
  1065                           
  1066                           ; Switch size 1, requested type "space"
  1067                           ; Number of cases is 3, Range of values is 0 to 3
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte           10     6 (average)
  1071                           ;	Chosen strategy is simple_byte
  1072  007E20  0A00               	xorlw	0	; case 0
  1073  007E22  B4D8               	btfsc	status,2,c
  1074  007E24  D7F7               	goto	l240
  1075  007E26  0A02               	xorlw	2	; case 2
  1076  007E28  B4D8               	btfsc	status,2,c
  1077  007E2A  D7F6               	goto	l242
  1078  007E2C  0A01               	xorlw	1	; case 3
  1079  007E2E  B4D8               	btfsc	status,2,c
  1080  007E30  D7F4               	goto	l243
  1081  007E32  D005               	goto	l1432
  1082  007E34                     l246:
  1083  007E34  8A92               	bsf	3986,5,c	;volatile
  1084  007E36                     l248:
  1085  007E36  8293               	bsf	3987,1,c	;volatile
  1086  007E38  D00A               	goto	l247
  1087  007E3A                     l249:
  1088  007E3A  9293               	bcf	3987,1,c	;volatile
  1089  007E3C  D008               	goto	l247
  1090  007E3E                     l1432:
  1091  007E3E  5003               	movf	OpenSPI@sync_mode,w,c
  1092                           
  1093                           ; Switch size 1, requested type "space"
  1094                           ; Number of cases is 2, Range of values is 4 to 5
  1095                           ; switch strategies available:
  1096                           ; Name         Instructions Cycles
  1097                           ; simple_byte            7     4 (average)
  1098                           ;	Chosen strategy is simple_byte
  1099  007E40  0A04               	xorlw	4	; case 4
  1100  007E42  B4D8               	btfsc	status,2,c
  1101  007E44  D7F7               	goto	l246
  1102  007E46  0A01               	xorlw	1	; case 5
  1103  007E48  B4D8               	btfsc	status,2,c
  1104  007E4A  D7F5               	goto	l248
  1105  007E4C  D7F6               	goto	l249
  1106  007E4E                     l247:
  1107  007E4E  8093               	bsf	3987,0,c	;volatile
  1108  007E50  9E94               	bcf	3988,7,c	;volatile
  1109  007E52  8AC6               	bsf	4038,5,c	;volatile
  1110  007E54  0012               	return		;funcret
  1111  007E56                     __end_of_OpenSPI:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           intcon	equ	0xFF2
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           postdec1	equ	0xFE5
  1121                           fsr1l	equ	0xFE1
  1122                           indf2	equ	0xFDF
  1123                           fsr2h	equ	0xFDA
  1124                           fsr2l	equ	0xFD9
  1125                           status	equ	0xFD8
  1126                           
  1127 ;; *************** function _delay50ms *****************
  1128 ;; Defined at:
  1129 ;;		line 205 in file "DS18B20/DS18B20.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;		None               void
  1136 ;; Registers used:
  1137 ;;		wreg
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1145 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1146 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;;		_delay750ms
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text7
  1158  007DAE                     __ptext7:
  1159                           	opt stack 0
  1160  007DAE                     _delay50ms:
  1161                           	opt stack 30
  1162                           
  1163                           ;DS18B20.c: 207: _delay((unsigned long)((10)*(8000000/4000.0)));
  1164                           
  1165                           ;incstack = 0
  1166  007DAE  0E1A               	movlw	26
  1167  007DB0  6E01               	movwf	??_delay50ms& (0+255),c
  1168  007DB2  0EF8               	movlw	248
  1169  007DB4                     u627:
  1170  007DB4  2EE8               	decfsz	wreg,f,c
  1171  007DB6  D7FE               	goto	u627
  1172  007DB8  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1173  007DBA  D7FC               	goto	u627
  1174  007DBC  D000               	nop2	
  1175                           
  1176                           ;DS18B20.c: 208: _delay((unsigned long)((10)*(8000000/4000.0)));
  1177  007DBE  0E1A               	movlw	26
  1178  007DC0  6E01               	movwf	??_delay50ms& (0+255),c
  1179  007DC2  0EF8               	movlw	248
  1180  007DC4                     u637:
  1181  007DC4  2EE8               	decfsz	wreg,f,c
  1182  007DC6  D7FE               	goto	u637
  1183  007DC8  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1184  007DCA  D7FC               	goto	u637
  1185  007DCC  D000               	nop2	
  1186                           
  1187                           ;DS18B20.c: 209: _delay((unsigned long)((10)*(8000000/4000.0)));
  1188  007DCE  0E1A               	movlw	26
  1189  007DD0  6E01               	movwf	??_delay50ms& (0+255),c
  1190  007DD2  0EF8               	movlw	248
  1191  007DD4                     u647:
  1192  007DD4  2EE8               	decfsz	wreg,f,c
  1193  007DD6  D7FE               	goto	u647
  1194  007DD8  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1195  007DDA  D7FC               	goto	u647
  1196  007DDC  D000               	nop2	
  1197                           
  1198                           ;DS18B20.c: 210: _delay((unsigned long)((10)*(8000000/4000.0)));
  1199  007DDE  0E1A               	movlw	26
  1200  007DE0  6E01               	movwf	??_delay50ms& (0+255),c
  1201  007DE2  0EF8               	movlw	248
  1202  007DE4                     u657:
  1203  007DE4  2EE8               	decfsz	wreg,f,c
  1204  007DE6  D7FE               	goto	u657
  1205  007DE8  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1206  007DEA  D7FC               	goto	u657
  1207  007DEC  D000               	nop2	
  1208                           
  1209                           ;DS18B20.c: 211: _delay((unsigned long)((10)*(8000000/4000.0)));
  1210  007DEE  0E1A               	movlw	26
  1211  007DF0  6E01               	movwf	??_delay50ms& (0+255),c
  1212  007DF2  0EF8               	movlw	248
  1213  007DF4                     u667:
  1214  007DF4  2EE8               	decfsz	wreg,f,c
  1215  007DF6  D7FE               	goto	u667
  1216  007DF8  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1217  007DFA  D7FC               	goto	u667
  1218  007DFC  D000               	nop2	
  1219  007DFE  0012               	return		;funcret
  1220  007E00                     __end_of_delay50ms:
  1221                           	opt stack 0
  1222  0000                     tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           indf2	equ	0xFDF
  1232                           fsr2h	equ	0xFDA
  1233                           fsr2l	equ	0xFD9
  1234                           status	equ	0xFD8
  1235                           tblptru	equ	0xFF8
  1236                           tblptrh	equ	0xFF7
  1237                           tblptrl	equ	0xFF6
  1238                           tablat	equ	0xFF5
  1239                           intcon	equ	0xFF2
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           postdec1	equ	0xFE5
  1243                           fsr1l	equ	0xFE1
  1244                           indf2	equ	0xFDF
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           status	equ	0xFD8
  1248                           
  1249                           	psect	rparam
  1250  0000                     tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           intcon	equ	0xFF2
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           postdec1	equ	0xFE5
  1258                           fsr1l	equ	0xFE1
  1259                           indf2	equ	0xFDF
  1260                           fsr2h	equ	0xFDA
  1261                           fsr2l	equ	0xFD9
  1262                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nrf_SPI_Write_Buf@pBuf	PTR unsigned char  size(2) Largest target is 5
		 -> TX_ADDRESS(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_nrf_init
    _nrf_init->_nrf_SPI_Write_Buf
    _nrf_SPI_Write_Buf->_nrf_SPI_RW
    _nrf_SPI_Read->_nrf_SPI_RW
    _nrf_SPI_RW_Reg->_nrf_SPI_RW

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                81    76      5    2803
                                              8 COMRAM    14     9      5
                          _delay50ms
                           _nrf_init
 ---------------------------------------------------------------------------------
 (1) _nrf_init                                             6     6      0    2660
                                              7 COMRAM     1     1      0
                            _OpenSPI
                     _nrf_SPI_RW_Reg
                       _nrf_SPI_Read
                  _nrf_SPI_Write_Buf
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Write_Buf                                    6     3      3     870
                                              1 COMRAM     6     3      3
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Read                                         2     2      0      60
                                              1 COMRAM     2     2      0
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_RW_Reg                                       3     2      1    1512
                                              1 COMRAM     3     2      1
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _nrf_SPI_RW                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _delay50ms                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay50ms
   _nrf_init
     _OpenSPI
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
     _nrf_SPI_Read
       _nrf_SPI_RW
     _nrf_SPI_Write_Buf
       _nrf_SPI_RW

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      2E       1       48.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      20        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Nov  6 20:25:30 2015

               _SSPSTATbits 000FC7                          l30 7EB2                          l32 7ED2  
                        l35 7F06                 __CFG_BOR$ON 000000                 __CFG_BORV$3 000000  
         nrf_SPI_RW_Reg@reg 0004                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                 __CFG_LVP$ON 000000  
               __CFG_WDT$ON 000000                         l201 7D04                         l210 7D42  
                       l204 7D10                         l207 7D28                         l240 7E14  
                       l242 7E18                         l243 7E1A                         l246 7E34  
                       l247 7E4E                         l248 7E36                         l249 7E3A  
              __CFG_CPB$OFF 000000                         _RA0 007C00                         _RA1 007C01  
              __CFG_CPD$OFF 000000                         u607 7EC4                         u617 7EF8  
                       u627 7DB4                         u637 7DC4                         u647 7DD4  
                       u657 7DE4                         u667 7DF4                         wreg 000FE8  
                _TX_ADDRESS 002A                        l1410 7D56                        l1432 7E3E  
                      l1416 7D6C                        l1512 7E8E                        l1522 7EBE  
                      l1428 7E1E                        l1516 7E9E                        l1528 7EF2  
                      _main 7E56                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        start 0000  
             __CFG_IESO$OFF 000000         nrf_SPI_RW_Reg@value 0002               __CFG_MCLRE$ON 000000  
              ___param_bank 000010             __end_of_OpenSPI 7E56               __CFG_PLLDIV$2 000000  
            __CFG_CCP2MX$ON 000000                       ?_main 0009                       _LATA0 007C48  
             __CFG_USBDIV$1 000000               __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     tablat 000FF5                       status 000FD8              nrf_SPI_RW@data 0001  
      nrf_SPI_RW_Reg@status 0003              __CFG_PBADEN$ON 000000       main@nrf24l01_response 0010  
           __initialization 7D78                __end_of_main 7F2A                      ??_main 000E  
             __activetblptr 000002            ??_nrf_SPI_RW_Reg 0003                      _ADCON1 000FC1  
                    _TRISA0 007C90                      _STATUS 000FD8                      _SSPBUF 000FC9  
                 ??_OpenSPI 0003              __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000  
                    clear_0 7D7E            __end_of_nrf_init 8000                __pdataCOMRAM 002A  
             ?_nrf_SPI_Read 0001                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 7DA4  
    nrf_SPI_Write_Buf@bytes 0004               ___rparam_used 000001              __pcstackCOMRAM 0001  
           nrf_SPI_Read@reg 0002          __size_of_delay50ms 0052              ??_nrf_SPI_Read 0002  
       nrf_SPI_Read@reg_val 0003                     _SSPCON1 000FC6                     _SSPSTAT 000FC7  
         __end_of_delay50ms 7E00             __CFG_VREGEN$OFF 000000                   ?_nrf_init 0001  
                   _OpenSPI 7E00                     __Hparam 0000                     __Lparam 0000  
                   __pcinit 7D78                     __ramtop 0800                     __ptext0 7E56  
                   __ptext1 7F2A                     __ptext2 7D44                     __ptext3 7D2A  
                   __ptext4 7D12                     __ptext5 7CFC                     __ptext6 7E00  
                   __ptext7 7DAE                  _nrf_SPI_RW 7CFC                     main@cpt 0015  
      end_of_initialization 7DA4               __Lmediumconst 0000           _nrf_SPI_Write_Buf 7D44  
        nrf_SPI_Write_Buf@i 0007          ?_nrf_SPI_Write_Buf 0002                  ??_nrf_init 0008  
      __end_of_nrf_SPI_Read 7D44                     postdec1 000FE5                     postinc0 000FEE  
                _temp_union 0027         ??_nrf_SPI_Write_Buf 0005                   _PORTCbits 000F82  
                 _TRISAbits 000F92                   _TRISBbits 000F93                   _TRISCbits 000F94  
   nrf_SPI_Write_Buf@status 0005   __end_of_nrf_SPI_Write_Buf 7D78               __pidataCOMRAM 7CF7  
          OpenSPI@smp_phase 0002                 ?_nrf_SPI_RW 0001         start_initialization 7D78  
          OpenSPI@sync_mode 0003               _DeviceAddress 0017     __size_of_nrf_SPI_RW_Reg 0018  
          __CFG_LPT1OSC$OFF 000000       nrf_SPI_Write_Buf@pBuf 0002                 __pbssCOMRAM 0017  
__size_of_nrf_SPI_Write_Buf 0034       __size_of_nrf_SPI_Read 001A                   _delay50ms 7DAE  
       __size_of_nrf_SPI_RW 0016                    ?_OpenSPI 0001           __size_of_nrf_init 00D6  
              _nrf_SPI_Read 7D2A                  ?_delay50ms 0001            __CFG_WDTPS$32768 000000  
           OpenSPI@bus_mode 0001                   main@rampe 0013                   copy_data0 7D98  
            _nrf_SPI_RW_Reg 7D12                    __Hrparam 0000                    __Lrparam 0000  
          __size_of_OpenSPI 0056        nrf_SPI_Write_Buf@reg 0006                ??_nrf_SPI_RW 0001  
    __end_of_nrf_SPI_RW_Reg 7D2A               __size_of_main 00D4                 ??_delay50ms 0001  
                  _nrf_init 7F2A          __end_of_nrf_SPI_RW 7D12                    main@cpt2 0011  
                  main@argc 0009                    main@argv 000B       __CFG_CPUDIV$OSC1_PLL2 000000  
                _INTCONbits 000FF2             ?_nrf_SPI_RW_Reg 0002                  _OSCCONbits 000FD3  
            nrf_init@status 0008        main@ds18b20_response 000F         __CFG_FOSC$INTOSC_HS 000000  
               _SSPCON1bits 000FC6  
