

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Nov  6 20:26:41 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  00795D                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _TX_ADDRESS
    26  00795D  41                 	db	65
    27  00795E  41                 	db	65
    28  00795F  41                 	db	65
    29  007960  41                 	db	65
    30  007961  41                 	db	65
    31  0000                     _PORTCbits	set	3970
    32  0000                     _TRISAbits	set	3986
    33  0000                     _TRISBbits	set	3987
    34  0000                     _TRISCbits	set	3988
    35  0000                     _LATA0	set	31816
    36  0000                     _RA0	set	31744
    37  0000                     _RA1	set	31745
    38  0000                     _TRISA0	set	31888
    39  0000                     _ADCON1	set	4033
    40  0000                     _OSCCONbits	set	4051
    41  0000                     _SSPBUF	set	4041
    42  0000                     _SSPCON1	set	4038
    43  0000                     _SSPCON1bits	set	4038
    44  0000                     _SSPSTAT	set	4039
    45  0000                     _SSPSTATbits	set	4039
    46  0000                     _STATUS	set	4056
    47  0000                     _INTCONbits	set	4082
    48                           
    49                           ; #config settings
    50  0000                     
    51                           	psect	cinit
    52  0079DE                     __pcinit:
    53                           	opt stack 0
    54  0079DE                     start_initialization:
    55                           	opt stack 0
    56  0079DE                     __initialization:
    57                           	opt stack 0
    58                           
    59                           ; Clear objects allocated to COMRAM (19 bytes)
    60  0079DE  EE00  F017         	lfsr	0,__pbssCOMRAM
    61  0079E2  0E13               	movlw	19
    62  0079E4                     clear_0:
    63  0079E4  6AEE               	clrf	postinc0,c
    64  0079E6  06E8               	decf	wreg,f,c
    65  0079E8  E1FD               	bnz	clear_0
    66                           
    67                           ; Initialize objects allocated to COMRAM (5 bytes)
    68                           ; load TBLPTR registers with __pidataCOMRAM
    69  0079EA  0E5D               	movlw	low __pidataCOMRAM
    70  0079EC  6EF6               	movwf	tblptrl,c
    71  0079EE  0E79               	movlw	high __pidataCOMRAM
    72  0079F0  6EF7               	movwf	tblptrh,c
    73  0079F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    74  0079F4  6EF8               	movwf	tblptru,c
    75  0079F6  EE00  F02A         	lfsr	0,__pdataCOMRAM
    76  0079FA  EE10 F005          	lfsr	1,5
    77  0079FE                     copy_data0:
    78  0079FE  0009               	tblrd		*+
    79  007A00  CFF5 FFEE          	movff	tablat,postinc0
    80  007A04  50E5               	movf	postdec1,w,c
    81  007A06  50E1               	movf	fsr1l,w,c
    82  007A08  E1FA               	bnz	copy_data0
    83  007A0A                     end_of_initialization:
    84                           	opt stack 0
    85  007A0A                     __end_of__initialization:
    86                           	opt stack 0
    87  007A0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    88  007A0C  6EF8               	movwf	tblptru,c
    89  007A0E  0100               	movlb	0
    90  007A10  EFC9  F03D         	goto	_main	;jump to C main() function
    91                           tblptru	equ	0xFF8
    92                           tblptrh	equ	0xFF7
    93                           tblptrl	equ	0xFF6
    94                           tablat	equ	0xFF5
    95                           postinc0	equ	0xFEE
    96                           wreg	equ	0xFE8
    97                           postdec1	equ	0xFE5
    98                           fsr1l	equ	0xFE1
    99                           
   100                           	psect	bssCOMRAM
   101  000017                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000017                     _DeviceAddress:
   104                           	opt stack 0
   105  000017                     	ds	16
   106  000027                     _temp_union:
   107                           	opt stack 0
   108  000027                     	ds	3
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           postdec1	equ	0xFE5
   116                           fsr1l	equ	0xFE1
   117                           
   118                           	psect	dataCOMRAM
   119  00002A                     __pdataCOMRAM:
   120                           	opt stack 0
   121  00002A                     _TX_ADDRESS:
   122                           	opt stack 0
   123  00002A                     	ds	5
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ??_delay50ms:
   137  000001                     nrf_SPI_RW@data:
   138                           	opt stack 0
   139  000001                     OpenSPI@bus_mode:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x0
   143  000001                     	ds	1
   144  000002                     nrf_SPI_RW_Reg@value:
   145                           	opt stack 0
   146  000002                     nrf_SPI_Read@reg:
   147                           	opt stack 0
   148  000002                     OpenSPI@smp_phase:
   149                           	opt stack 0
   150  000002                     nrf_SPI_Write_Buf@pBuf:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x1
   154  000002                     	ds	1
   155  000003                     nrf_SPI_RW_Reg@status:
   156                           	opt stack 0
   157  000003                     nrf_SPI_Read@reg_val:
   158                           	opt stack 0
   159  000003                     OpenSPI@sync_mode:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x2
   163  000003                     	ds	1
   164  000004                     nrf_SPI_RW_Reg@reg:
   165                           	opt stack 0
   166  000004                     nrf_SPI_Write_Buf@bytes:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x3
   170  000004                     	ds	1
   171  000005                     nrf_SPI_Write_Buf@status:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x4
   175  000005                     	ds	1
   176  000006                     nrf_SPI_Write_Buf@reg:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x5
   180  000006                     	ds	1
   181  000007                     nrf_SPI_Write_Buf@i:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x6
   185  000007                     	ds	1
   186  000008                     nrf_init@status:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x7
   190  000008                     	ds	1
   191  000009                     
   192                           ; 2 bytes @ 0x8
   193  000009                     	ds	2
   194  00000B                     
   195                           ; 3 bytes @ 0xA
   196  00000B                     	ds	3
   197  00000E                     ??_main:
   198                           
   199                           ; 0 bytes @ 0xD
   200  00000E                     	ds	1
   201  00000F                     main@ds18b20_response:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0xE
   205  00000F                     	ds	1
   206  000010                     main@nrf24l01_response:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0xF
   210  000010                     	ds	1
   211  000011                     main@rampe:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x10
   215  000011                     	ds	2
   216  000013                     main@cpt2:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x12
   220  000013                     	ds	2
   221  000015                     main@cpt:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x14
   225  000015                     	ds	2
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 19 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;  argc            2    8[COMRAM] int 
   243 ;;  argv            3   10[COMRAM] PTR PTR unsigned char 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  rx_buf         32    0        unsigned char [32]
   246 ;;  tx_buf         32    0        unsigned char [32]
   247 ;;  temperature     3    0        float 
   248 ;;  cpt             2   20[COMRAM] int 
   249 ;;  cpt2            2   18[COMRAM] int 
   250 ;;  rampe           2   16[COMRAM] int 
   251 ;;  nrf24l01_res    1   15[COMRAM] unsigned char 
   252 ;;  ds18b20_resp    1   14[COMRAM] unsigned char 
   253 ;; Return value:  Size  Location     Type
   254 ;;                  2    8[COMRAM] int 
   255 ;; Registers used:
   256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         5       0       0       0       0       0       0       0       0
   263 ;;      Locals:         8       0       0       0       0       0       0       0       0
   264 ;;      Temps:          1       0       0       0       0       0       0       0       0
   265 ;;      Totals:        14       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:       14 bytes
   267 ;; Hardware stack levels required when called:    3
   268 ;; This function calls:
   269 ;;		_delay50ms
   270 ;;		_nrf_init
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277  007B92                     __ptext0:
   278                           	opt stack 0
   279  007B92                     _main:
   280                           	opt stack 28
   281                           
   282                           ;main.c: 20: TRISCbits.TRISC6 = 0;
   283                           
   284                           ;incstack = 0
   285  007B92  9C94               	bcf	3988,6,c	;volatile
   286                           
   287                           ;main.c: 22: TRISAbits.TRISA1 = 0;
   288  007B94  9292               	bcf	3986,1,c	;volatile
   289                           
   290                           ;main.c: 24: unsigned char tx_buf[32];
   291                           ;main.c: 25: unsigned char rx_buf[32];
   292                           ;main.c: 26: unsigned char ds18b20_response = 1;
   293  007B96  0E01               	movlw	1
   294  007B98  6E0F               	movwf	main@ds18b20_response,c
   295                           
   296                           ;main.c: 27: unsigned char nrf24l01_response = 1;
   297  007B9A  0E01               	movlw	1
   298  007B9C  6E10               	movwf	main@nrf24l01_response,c
   299                           
   300                           ;main.c: 28: float temperature;
   301                           ;main.c: 32: OSCCONbits.IRCF = 0xF;
   302  007B9E  88D3               	bsf	4051,4,c	;volatile
   303  007BA0  8AD3               	bsf	4051,5,c	;volatile
   304  007BA2  8CD3               	bsf	4051,6,c	;volatile
   305                           
   306                           ;main.c: 33: ADCON1 |= 0xF;
   307  007BA4  0E0F               	movlw	15
   308  007BA6  12C1               	iorwf	4033,f,c	;volatile
   309                           
   310                           ;main.c: 34: (INTCONbits.GIE = 1);
   311  007BA8  8EF2               	bsf	intcon,7,c	;volatile
   312                           
   313                           ;main.c: 38: TRISCbits.TRISC0 = 0;
   314  007BAA  9094               	bcf	3988,0,c	;volatile
   315                           
   316                           ;main.c: 39: TRISCbits.TRISC1 = 0;
   317  007BAC  9294               	bcf	3988,1,c	;volatile
   318                           
   319                           ;main.c: 40: TRISCbits.TRISC2 = 1;
   320  007BAE  8494               	bsf	3988,2,c	;volatile
   321                           
   322                           ;main.c: 41: TRISBbits.TRISB1 = 0;
   323  007BB0  9293               	bcf	3987,1,c	;volatile
   324                           
   325                           ;main.c: 42: TRISBbits.TRISB0 = 1;
   326  007BB2  8093               	bsf	3987,0,c	;volatile
   327                           
   328                           ;main.c: 43: TRISCbits.TRISC7 = 0;
   329  007BB4  9E94               	bcf	3988,7,c	;volatile
   330                           
   331                           ;main.c: 45: RA1=1;
   332  007BB6  8280               	bsf	3968,1,c	;volatile
   333                           
   334                           ;main.c: 46: nrf_init();
   335  007BB8  EC5E  F03D         	call	_nrf_init	;wreg free
   336                           
   337                           ;main.c: 47: int cpt;
   338                           ;main.c: 48: int rampe = 0,cpt2;
   339  007BBC  0E00               	movlw	0
   340  007BBE  6E12               	movwf	main@rampe+1,c
   341  007BC0  0E00               	movlw	0
   342  007BC2  6E11               	movwf	main@rampe,c
   343                           
   344                           ;main.c: 49: delay50ms();
   345  007BC4  EC0A  F03D         	call	_delay50ms	;wreg free
   346  007BC8  D000               	goto	l1542
   347  007BCA                     l1542:
   348                           
   349                           ;main.c: 51: rampe = 0;
   350  007BCA  0E00               	movlw	0
   351  007BCC  6E12               	movwf	main@rampe+1,c
   352  007BCE  0E00               	movlw	0
   353  007BD0  6E11               	movwf	main@rampe,c
   354                           
   355                           ;main.c: 52: for( cpt2 = 0; cpt2 < 30 ; cpt2++){
   356  007BD2  0E00               	movlw	0
   357  007BD4  6E14               	movwf	main@cpt2+1,c
   358  007BD6  0E00               	movlw	0
   359  007BD8  6E13               	movwf	main@cpt2,c
   360  007BDA                     l1546:
   361  007BDA  BE14               	btfsc	main@cpt2+1,7,c
   362  007BDC  D008               	goto	l30
   363  007BDE  5014               	movf	main@cpt2+1,w,c
   364  007BE0  E140               	bnz	l1566
   365  007BE2  0E1E               	movlw	30
   366  007BE4  5C13               	subwf	main@cpt2,w,c
   367  007BE6  B0D8               	btfsc	status,0,c
   368  007BE8  D03C               	goto	l1566
   369  007BEA  D001               	goto	l30
   370  007BEC  D03A               	goto	l1566
   371  007BEE                     l30:
   372                           
   373                           ;main.c: 53: PORTCbits.RC6 = 0;
   374  007BEE  9C82               	bcf	3970,6,c	;volatile
   375                           
   376                           ;main.c: 54: for(cpt = 0; cpt < rampe; cpt++){
   377  007BF0  0E00               	movlw	0
   378  007BF2  6E16               	movwf	main@cpt+1,c
   379  007BF4  0E00               	movlw	0
   380  007BF6  6E15               	movwf	main@cpt,c
   381  007BF8  D00A               	goto	l32
   382  007BFA                     l1552:
   383                           
   384                           ;main.c: 55: _delay((unsigned long)((10)*(8000000/4000.0)));
   385  007BFA  0E1A               	movlw	26
   386  007BFC  6E0E               	movwf	??_main& (0+255),c
   387  007BFE  0EF8               	movlw	248
   388  007C00                     u687:
   389  007C00  2EE8               	decfsz	wreg,f,c
   390  007C02  D7FE               	goto	u687
   391  007C04  2E0E               	decfsz	??_main& (0+255),f,c
   392  007C06  D7FC               	goto	u687
   393  007C08  D000               	nop2	
   394  007C0A  4A15               	infsnz	main@cpt,f,c
   395  007C0C  2A16               	incf	main@cpt+1,f,c
   396  007C0E                     l32:
   397  007C0E  5011               	movf	main@rampe,w,c
   398  007C10  5C15               	subwf	main@cpt,w,c
   399  007C12  5016               	movf	main@cpt+1,w,c
   400  007C14  0A80               	xorlw	128
   401  007C16  6E0E               	movwf	??_main& (0+255),c
   402  007C18  5012               	movf	main@rampe+1,w,c
   403  007C1A  0A80               	xorlw	128
   404  007C1C  580E               	subwfb	??_main& (0+255),w,c
   405  007C1E  A0D8               	btfss	status,0,c
   406  007C20  D7EC               	goto	l1552
   407                           
   408                           ;main.c: 56: }
   409                           ;main.c: 57: PORTCbits.RC6 = 1;
   410  007C22  8C82               	bsf	3970,6,c	;volatile
   411                           
   412                           ;main.c: 58: for(cpt = 0; cpt < rampe; cpt++){
   413  007C24  0E00               	movlw	0
   414  007C26  6E16               	movwf	main@cpt+1,c
   415  007C28  0E00               	movlw	0
   416  007C2A  6E15               	movwf	main@cpt,c
   417  007C2C  D00A               	goto	l35
   418  007C2E                     l1558:
   419                           
   420                           ;main.c: 59: _delay((unsigned long)((10)*(8000000/4000.0)));
   421  007C2E  0E1A               	movlw	26
   422  007C30  6E0E               	movwf	??_main& (0+255),c
   423  007C32  0EF8               	movlw	248
   424  007C34                     u697:
   425  007C34  2EE8               	decfsz	wreg,f,c
   426  007C36  D7FE               	goto	u697
   427  007C38  2E0E               	decfsz	??_main& (0+255),f,c
   428  007C3A  D7FC               	goto	u697
   429  007C3C  D000               	nop2	
   430  007C3E  4A15               	infsnz	main@cpt,f,c
   431  007C40  2A16               	incf	main@cpt+1,f,c
   432  007C42                     l35:
   433  007C42  5011               	movf	main@rampe,w,c
   434  007C44  5C15               	subwf	main@cpt,w,c
   435  007C46  5016               	movf	main@cpt+1,w,c
   436  007C48  0A80               	xorlw	128
   437  007C4A  6E0E               	movwf	??_main& (0+255),c
   438  007C4C  5012               	movf	main@rampe+1,w,c
   439  007C4E  0A80               	xorlw	128
   440  007C50  580E               	subwfb	??_main& (0+255),w,c
   441  007C52  A0D8               	btfss	status,0,c
   442  007C54  D7EC               	goto	l1558
   443                           
   444                           ;main.c: 60: }
   445                           ;main.c: 61: rampe++;
   446  007C56  4A11               	infsnz	main@rampe,f,c
   447  007C58  2A12               	incf	main@rampe+1,f,c
   448  007C5A  4A13               	infsnz	main@cpt2,f,c
   449  007C5C  2A14               	incf	main@cpt2+1,f,c
   450  007C5E  D7BD               	goto	l1546
   451  007C60  D000               	goto	l1566
   452  007C62                     l1566:
   453                           
   454                           ;main.c: 62: }
   455                           ;main.c: 63: for( cpt2 = 0; cpt2 < 30 ; cpt2++){
   456  007C62  0E00               	movlw	0
   457  007C64  6E14               	movwf	main@cpt2+1,c
   458  007C66  0E00               	movlw	0
   459  007C68  6E13               	movwf	main@cpt2,c
   460  007C6A  BE14               	btfsc	main@cpt2+1,7,c
   461  007C6C  D008               	goto	l38
   462  007C6E  5014               	movf	main@cpt2+1,w,c
   463  007C70  E1AC               	bnz	l1542
   464  007C72  0E1E               	movlw	30
   465  007C74  5C13               	subwf	main@cpt2,w,c
   466  007C76  B0D8               	btfsc	status,0,c
   467  007C78  D7A8               	goto	l1542
   468  007C7A  D001               	goto	l38
   469  007C7C  D7A6               	goto	l1542
   470  007C7E                     l38:
   471                           
   472                           ;main.c: 64: PORTCbits.RC6 = 0;
   473  007C7E  9C82               	bcf	3970,6,c	;volatile
   474                           
   475                           ;main.c: 65: for(cpt = 0; cpt < rampe; cpt++){
   476  007C80  0E00               	movlw	0
   477  007C82  6E16               	movwf	main@cpt+1,c
   478  007C84  0E00               	movlw	0
   479  007C86  6E15               	movwf	main@cpt,c
   480  007C88  D00A               	goto	l40
   481  007C8A                     l1574:
   482                           
   483                           ;main.c: 66: _delay((unsigned long)((10)*(8000000/4000.0)));
   484  007C8A  0E1A               	movlw	26
   485  007C8C  6E0E               	movwf	??_main& (0+255),c
   486  007C8E  0EF8               	movlw	248
   487  007C90                     u707:
   488  007C90  2EE8               	decfsz	wreg,f,c
   489  007C92  D7FE               	goto	u707
   490  007C94  2E0E               	decfsz	??_main& (0+255),f,c
   491  007C96  D7FC               	goto	u707
   492  007C98  D000               	nop2	
   493  007C9A  4A15               	infsnz	main@cpt,f,c
   494  007C9C  2A16               	incf	main@cpt+1,f,c
   495  007C9E                     l40:
   496  007C9E  5011               	movf	main@rampe,w,c
   497  007CA0  5C15               	subwf	main@cpt,w,c
   498  007CA2  5016               	movf	main@cpt+1,w,c
   499  007CA4  0A80               	xorlw	128
   500  007CA6  6E0E               	movwf	??_main& (0+255),c
   501  007CA8  5012               	movf	main@rampe+1,w,c
   502  007CAA  0A80               	xorlw	128
   503  007CAC  580E               	subwfb	??_main& (0+255),w,c
   504  007CAE  A0D8               	btfss	status,0,c
   505  007CB0  D7EC               	goto	l1574
   506                           
   507                           ;main.c: 67: }
   508                           ;main.c: 68: PORTCbits.RC6 = 1;
   509  007CB2  8C82               	bsf	3970,6,c	;volatile
   510                           
   511                           ;main.c: 69: for(cpt = 0; cpt < rampe; cpt++){
   512  007CB4  0E00               	movlw	0
   513  007CB6  6E16               	movwf	main@cpt+1,c
   514  007CB8  0E00               	movlw	0
   515  007CBA  6E15               	movwf	main@cpt,c
   516  007CBC  D00A               	goto	l43
   517  007CBE                     l1580:
   518                           
   519                           ;main.c: 70: _delay((unsigned long)((10)*(8000000/4000.0)));
   520  007CBE  0E1A               	movlw	26
   521  007CC0  6E0E               	movwf	??_main& (0+255),c
   522  007CC2  0EF8               	movlw	248
   523  007CC4                     u717:
   524  007CC4  2EE8               	decfsz	wreg,f,c
   525  007CC6  D7FE               	goto	u717
   526  007CC8  2E0E               	decfsz	??_main& (0+255),f,c
   527  007CCA  D7FC               	goto	u717
   528  007CCC  D000               	nop2	
   529  007CCE  4A15               	infsnz	main@cpt,f,c
   530  007CD0  2A16               	incf	main@cpt+1,f,c
   531  007CD2                     l43:
   532  007CD2  5011               	movf	main@rampe,w,c
   533  007CD4  5C15               	subwf	main@cpt,w,c
   534  007CD6  5016               	movf	main@cpt+1,w,c
   535  007CD8  0A80               	xorlw	128
   536  007CDA  6E0E               	movwf	??_main& (0+255),c
   537  007CDC  5012               	movf	main@rampe+1,w,c
   538  007CDE  0A80               	xorlw	128
   539  007CE0  580E               	subwfb	??_main& (0+255),w,c
   540  007CE2  A0D8               	btfss	status,0,c
   541  007CE4  D7EC               	goto	l1580
   542                           
   543                           ;main.c: 71: }
   544                           ;main.c: 72: rampe--;
   545  007CE6  0611               	decf	main@rampe,f,c
   546  007CE8  A0D8               	btfss	status,0,c
   547  007CEA  0612               	decf	main@rampe+1,f,c
   548  007CEC  4A13               	infsnz	main@cpt2,f,c
   549  007CEE  2A14               	incf	main@cpt2+1,f,c
   550  007CF0  BE14               	btfsc	main@cpt2+1,7,c
   551  007CF2  D7C5               	goto	l38
   552  007CF4  5014               	movf	main@cpt2+1,w,c
   553  007CF6  E101               	bnz	u580
   554  007CF8  D7BC               	goto	L1
   555  007CFA                     u580:
   556  007CFA  D767               	goto	l1542
   557                           
   558                           ;main.c: 73: }
   559                           ;main.c: 74: }
   560                           ;main.c: 101: return (0);
   561                           ;	Return value of _main is never used
   562  007CFC  EF01  F000         	goto	start
   563  007D00                     __end_of_main:
   564                           	opt stack 0
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           intcon	equ	0xFF2
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           postdec1	equ	0xFE5
   573                           fsr1l	equ	0xFE1
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function _nrf_init *****************
   577 ;; Defined at:
   578 ;;		line 85 in file "NRF_24L01/nRF2401.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  Test            5    0        unsigned char [5]
   583 ;;  status          1    7[COMRAM] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;		None               void
   586 ;; Registers used:
   587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   593 ;;      Params:         0       0       0       0       0       0       0       0       0
   594 ;;      Locals:         1       0       0       0       0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0
   596 ;;      Totals:         1       0       0       0       0       0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    2
   600 ;; This function calls:
   601 ;;		_OpenSPI
   602 ;;		_nrf_SPI_RW_Reg
   603 ;;		_nrf_SPI_Read
   604 ;;		_nrf_SPI_Write_Buf
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text1
   611  007ABC                     __ptext1:
   612                           	opt stack 0
   613  007ABC                     _nrf_init:
   614                           	opt stack 28
   615                           
   616                           ;nRF2401.c: 86: char status=0;
   617                           
   618                           ;incstack = 0
   619  007ABC  0E00               	movlw	0
   620  007ABE  6E08               	movwf	nrf_init@status,c
   621                           
   622                           ;nRF2401.c: 87: unsigned char Test[5];
   623                           ;nRF2401.c: 88: OpenSPI(0b00000010, 0b00000000, 0b00000000);
   624  007AC0  0E00               	movlw	0
   625  007AC2  6E01               	movwf	OpenSPI@bus_mode,c
   626  007AC4  0E00               	movlw	0
   627  007AC6  6E02               	movwf	OpenSPI@smp_phase,c
   628  007AC8  0E02               	movlw	2
   629  007ACA  EC33  F03D         	call	_OpenSPI
   630                           
   631                           ;nRF2401.c: 90: PORTCbits.RC0 = 1;
   632  007ACE  8082               	bsf	3970,0,c	;volatile
   633                           
   634                           ;nRF2401.c: 91: PORTCbits.RC1 = 1;
   635  007AD0  8282               	bsf	3970,1,c	;volatile
   636                           
   637                           ;nRF2401.c: 93: PORTCbits.RC0 = 0;
   638  007AD2  9082               	bcf	3970,0,c	;volatile
   639                           
   640                           ;nRF2401.c: 95: nrf_SPI_Write_Buf(0x20 + 0x10, TX_ADDRESS, 5);
   641  007AD4  0E2A               	movlw	low _TX_ADDRESS
   642  007AD6  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
   643  007AD8  0E00               	movlw	high _TX_ADDRESS
   644  007ADA  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
   645  007ADC  0E05               	movlw	5
   646  007ADE  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
   647  007AE0  0E30               	movlw	48
   648  007AE2  ECD5  F03C         	call	_nrf_SPI_Write_Buf
   649                           
   650                           ;nRF2401.c: 97: nrf_SPI_Write_Buf(0x20 + 0x0A, TX_ADDRESS, 5);
   651  007AE6  0E2A               	movlw	low _TX_ADDRESS
   652  007AE8  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
   653  007AEA  0E00               	movlw	high _TX_ADDRESS
   654  007AEC  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
   655  007AEE  0E05               	movlw	5
   656  007AF0  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
   657  007AF2  0E2A               	movlw	42
   658  007AF4  ECD5  F03C         	call	_nrf_SPI_Write_Buf
   659                           
   660                           ;nRF2401.c: 109: nrf_SPI_RW_Reg(0x50,0x73);
   661  007AF8  0E73               	movlw	115
   662  007AFA  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   663  007AFC  0E50               	movlw	80
   664  007AFE  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   665                           
   666                           ;nRF2401.c: 111: nrf_SPI_RW_Reg(0x20 + 0x1D, 0x06);
   667  007B02  0E06               	movlw	6
   668  007B04  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   669  007B06  0E3D               	movlw	61
   670  007B08  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   671                           
   672                           ;nRF2401.c: 113: nrf_SPI_RW_Reg(0x20 + 0x1C, 0b111111);
   673  007B0C  0E3F               	movlw	63
   674  007B0E  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   675  007B10  0E3C               	movlw	60
   676  007B12  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   677                           
   678                           ;nRF2401.c: 115: nrf_SPI_RW_Reg(0x20 + 0x01, 0b111111);
   679  007B16  0E3F               	movlw	63
   680  007B18  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   681  007B1A  0E21               	movlw	33
   682  007B1C  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   683                           
   684                           ;nRF2401.c: 117: nrf_SPI_RW_Reg(0x20 + 0x02, 0b0001);
   685  007B20  0E01               	movlw	1
   686  007B22  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   687  007B24  0E22               	movlw	34
   688  007B26  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   689                           
   690                           ;nRF2401.c: 119: nrf_SPI_RW_Reg(0x20 + 0x04, 0x12);
   691  007B2A  0E12               	movlw	18
   692  007B2C  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   693  007B2E  0E24               	movlw	36
   694  007B30  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   695                           
   696                           ;nRF2401.c: 121: nrf_SPI_RW_Reg(0x20 + 0x05, 40);
   697  007B34  0E28               	movlw	40
   698  007B36  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   699  007B38  0E25               	movlw	37
   700  007B3A  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   701                           
   702                           ;nRF2401.c: 123: nrf_SPI_RW_Reg(0x20 + 0x11, 32);
   703  007B3E  0E20               	movlw	32
   704  007B40  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   705  007B42  0E31               	movlw	49
   706  007B44  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   707                           
   708                           ;nRF2401.c: 125: nrf_SPI_RW_Reg(0x20 + 0x12, 32);
   709  007B48  0E20               	movlw	32
   710  007B4A  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   711  007B4C  0E32               	movlw	50
   712  007B4E  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   713                           
   714                           ;nRF2401.c: 127: nrf_SPI_RW_Reg(0x20 + 0x06, 0x07);
   715  007B52  0E07               	movlw	7
   716  007B54  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   717  007B56  0E26               	movlw	38
   718  007B58  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   719                           
   720                           ;nRF2401.c: 129: nrf_SPI_RW_Reg(0xE2,0);
   721  007B5C  0E00               	movlw	0
   722  007B5E  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   723  007B60  0EE2               	movlw	226
   724  007B62  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   725                           
   726                           ;nRF2401.c: 131: nrf_SPI_RW_Reg(0xE1,0);
   727  007B66  0E00               	movlw	0
   728  007B68  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   729  007B6A  0EE1               	movlw	225
   730  007B6C  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   731                           
   732                           ;nRF2401.c: 133: status=nrf_SPI_Read(STATUS);
   733  007B70  50D8               	movf	status,w,c	;volatile
   734  007B72  ECC8  F03C         	call	_nrf_SPI_Read
   735  007B76  6E08               	movwf	nrf_init@status,c
   736                           
   737                           ;nRF2401.c: 135: nrf_SPI_RW_Reg(0x20 + STATUS, status);
   738  007B78  C008  F002         	movff	nrf_init@status,nrf_SPI_RW_Reg@value
   739  007B7C  50D8               	movf	status,w,c	;volatile
   740  007B7E  0F20               	addlw	32
   741  007B80  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   742                           
   743                           ;nRF2401.c: 137: nrf_SPI_RW_Reg(0x20 + 0x03, 0x3);
   744  007B84  0E03               	movlw	3
   745  007B86  6E02               	movwf	nrf_SPI_RW_Reg@value,c
   746  007B88  0E23               	movlw	35
   747  007B8A  ECBC  F03C         	call	_nrf_SPI_RW_Reg
   748                           
   749                           ;nRF2401.c: 139: PORTCbits.RC0 = 1;
   750  007B8E  8082               	bsf	3970,0,c	;volatile
   751  007B90  0012               	return		;funcret
   752  007B92                     __end_of_nrf_init:
   753                           	opt stack 0
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           intcon	equ	0xFF2
   759                           postinc0	equ	0xFEE
   760                           wreg	equ	0xFE8
   761                           postdec1	equ	0xFE5
   762                           fsr1l	equ	0xFE1
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _nrf_SPI_Write_Buf *****************
   766 ;; Defined at:
   767 ;;		line 308 in file "NRF_24L01/nRF2401.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  reg             1    wreg     unsigned char 
   770 ;;  pBuf            2    1[COMRAM] PTR unsigned char 
   771 ;;		 -> TX_ADDRESS(5), 
   772 ;;  bytes           1    3[COMRAM] unsigned char 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  reg             1    5[COMRAM] unsigned char 
   775 ;;  i               1    6[COMRAM] unsigned char 
   776 ;;  status          1    4[COMRAM] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   786 ;;      Params:         3       0       0       0       0       0       0       0       0
   787 ;;      Locals:         3       0       0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0
   789 ;;      Totals:         6       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:        6 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		_nrf_SPI_RW
   795 ;; This function is called by:
   796 ;;		_nrf_init
   797 ;;		_nrf_send
   798 ;;		_nrf_send_noack
   799 ;;		_nrf_receive
   800 ;;		_nrf_setTxAddr
   801 ;;		_nrf_setRxAddr
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text2
   806  0079AA                     __ptext2:
   807                           	opt stack 0
   808  0079AA                     _nrf_SPI_Write_Buf:
   809                           	opt stack 28
   810                           
   811                           ;incstack = 0
   812                           ;nrf_SPI_Write_Buf@reg stored from wreg
   813  0079AA  6E06               	movwf	nrf_SPI_Write_Buf@reg,c
   814                           
   815                           ;nRF2401.c: 309: unsigned char status,i;
   816                           ;nRF2401.c: 311: PORTCbits.RC1 = 0;
   817  0079AC  9282               	bcf	3970,1,c	;volatile
   818                           
   819                           ;nRF2401.c: 312: status = nrf_SPI_RW(reg);
   820  0079AE  5006               	movf	nrf_SPI_Write_Buf@reg,w,c
   821  0079B0  ECB1  F03C         	call	_nrf_SPI_RW
   822  0079B4  6E05               	movwf	nrf_SPI_Write_Buf@status,c
   823                           
   824                           ;nRF2401.c: 313: for(i=0;i<bytes; i++) {
   825  0079B6  0E00               	movlw	0
   826  0079B8  6E07               	movwf	nrf_SPI_Write_Buf@i,c
   827  0079BA  D00B               	goto	l1446
   828  0079BC                     l1440:
   829                           
   830                           ;nRF2401.c: 314: nrf_SPI_RW(*pBuf);
   831  0079BC  C002  FFD9         	movff	nrf_SPI_Write_Buf@pBuf,fsr2l
   832  0079C0  C003  FFDA         	movff	nrf_SPI_Write_Buf@pBuf+1,fsr2h
   833  0079C4  50DF               	movf	indf2,w,c
   834  0079C6  ECB1  F03C         	call	_nrf_SPI_RW
   835                           
   836                           ;nRF2401.c: 315: *pBuf++;
   837  0079CA  4A02               	infsnz	nrf_SPI_Write_Buf@pBuf,f,c
   838  0079CC  2A03               	incf	nrf_SPI_Write_Buf@pBuf+1,f,c
   839  0079CE  2A07               	incf	nrf_SPI_Write_Buf@i,f,c
   840  0079D0  D000               	goto	l1446
   841  0079D2                     l1446:
   842  0079D2  5004               	movf	nrf_SPI_Write_Buf@bytes,w,c
   843  0079D4  5C07               	subwf	nrf_SPI_Write_Buf@i,w,c
   844  0079D6  A0D8               	btfss	status,0,c
   845  0079D8  D7F1               	goto	l1440
   846                           
   847                           ;nRF2401.c: 316: }
   848                           ;nRF2401.c: 317: PORTCbits.RC1 = 1;
   849  0079DA  8282               	bsf	3970,1,c	;volatile
   850                           
   851                           ;nRF2401.c: 318: return(status);
   852                           ;	Return value of _nrf_SPI_Write_Buf is never used
   853  0079DC  0012               	return		;funcret
   854  0079DE                     __end_of_nrf_SPI_Write_Buf:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           intcon	equ	0xFF2
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           indf2	equ	0xFDF
   866                           fsr2h	equ	0xFDA
   867                           fsr2l	equ	0xFD9
   868                           status	equ	0xFD8
   869                           
   870 ;; *************** function _nrf_SPI_Read *****************
   871 ;; Defined at:
   872 ;;		line 266 in file "NRF_24L01/nRF2401.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  reg             1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  reg             1    1[COMRAM] unsigned char 
   877 ;;  reg_val         1    2[COMRAM] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      unsigned char 
   880 ;; Registers used:
   881 ;;		wreg, status,2, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   887 ;;      Params:         0       0       0       0       0       0       0       0       0
   888 ;;      Locals:         2       0       0       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0
   890 ;;      Totals:         2       0       0       0       0       0       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    1
   894 ;; This function calls:
   895 ;;		_nrf_SPI_RW
   896 ;; This function is called by:
   897 ;;		_nrf_init
   898 ;;		_nrf_receive
   899 ;;		_nrf_enablePipe
   900 ;;		_nrf_disablePipe
   901 ;;		_nrf_readRegister
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text3
   906  007990                     __ptext3:
   907                           	opt stack 0
   908  007990                     _nrf_SPI_Read:
   909                           	opt stack 28
   910                           
   911                           ;incstack = 0
   912                           ;nrf_SPI_Read@reg stored from wreg
   913  007990  6E02               	movwf	nrf_SPI_Read@reg,c
   914                           
   915                           ;nRF2401.c: 267: unsigned char reg_val;
   916                           ;nRF2401.c: 269: PORTCbits.RC1 = 0;
   917  007992  9282               	bcf	3970,1,c	;volatile
   918                           
   919                           ;nRF2401.c: 270: nrf_SPI_RW(reg);
   920  007994  5002               	movf	nrf_SPI_Read@reg,w,c
   921  007996  ECB1  F03C         	call	_nrf_SPI_RW
   922                           
   923                           ;nRF2401.c: 271: reg_val = nrf_SPI_RW(0);
   924  00799A  0E00               	movlw	0
   925  00799C  ECB1  F03C         	call	_nrf_SPI_RW
   926  0079A0  6E03               	movwf	nrf_SPI_Read@reg_val,c
   927                           
   928                           ;nRF2401.c: 272: PORTCbits.RC1 = 1;
   929  0079A2  8282               	bsf	3970,1,c	;volatile
   930                           
   931                           ;nRF2401.c: 274: return(reg_val);
   932  0079A4  5003               	movf	nrf_SPI_Read@reg_val,w,c
   933  0079A6  D000               	goto	l218
   934  0079A8                     l218:
   935  0079A8  0012               	return		;funcret
   936  0079AA                     __end_of_nrf_SPI_Read:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           intcon	equ	0xFF2
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           postdec1	equ	0xFE5
   946                           fsr1l	equ	0xFE1
   947                           indf2	equ	0xFDF
   948                           fsr2h	equ	0xFDA
   949                           fsr2l	equ	0xFD9
   950                           status	equ	0xFD8
   951                           
   952 ;; *************** function _nrf_SPI_RW_Reg *****************
   953 ;; Defined at:
   954 ;;		line 248 in file "NRF_24L01/nRF2401.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  reg             1    wreg     unsigned char 
   957 ;;  value           1    1[COMRAM] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  reg             1    3[COMRAM] unsigned char 
   960 ;;  status          1    2[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, status,2, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         1       0       0       0       0       0       0       0       0
   971 ;;      Locals:         2       0       0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0
   973 ;;      Totals:         3       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		_nrf_SPI_RW
   979 ;; This function is called by:
   980 ;;		_nrf_init
   981 ;;		_nrf_send
   982 ;;		_nrf_send_noack
   983 ;;		_nrf_receive
   984 ;;		_nrf_rxmode
   985 ;;		_nrf_txmode
   986 ;;		_nrf_powerdown
   987 ;;		_nrf_enablePipe
   988 ;;		_nrf_disablePipe
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text4
   993  007978                     __ptext4:
   994                           	opt stack 0
   995  007978                     _nrf_SPI_RW_Reg:
   996                           	opt stack 28
   997                           
   998                           ;incstack = 0
   999                           ;nrf_SPI_RW_Reg@reg stored from wreg
  1000  007978  6E04               	movwf	nrf_SPI_RW_Reg@reg,c
  1001                           
  1002                           ;nRF2401.c: 249: unsigned char status;
  1003                           ;nRF2401.c: 251: PORTCbits.RC1 = 0;
  1004  00797A  9282               	bcf	3970,1,c	;volatile
  1005                           
  1006                           ;nRF2401.c: 252: status = nrf_SPI_RW(reg);
  1007  00797C  5004               	movf	nrf_SPI_RW_Reg@reg,w,c
  1008  00797E  ECB1  F03C         	call	_nrf_SPI_RW
  1009  007982  6E03               	movwf	nrf_SPI_RW_Reg@status,c
  1010                           
  1011                           ;nRF2401.c: 253: nrf_SPI_RW(value);
  1012  007984  5002               	movf	nrf_SPI_RW_Reg@value,w,c
  1013  007986  ECB1  F03C         	call	_nrf_SPI_RW
  1014                           
  1015                           ;nRF2401.c: 254: PORTCbits.RC1 = 1;
  1016  00798A  8282               	bsf	3970,1,c	;volatile
  1017  00798C  D000               	goto	l215
  1018  00798E                     l215:
  1019  00798E  0012               	return		;funcret
  1020  007990                     __end_of_nrf_SPI_RW_Reg:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           intcon	equ	0xFF2
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           postdec1	equ	0xFE5
  1030                           fsr1l	equ	0xFE1
  1031                           indf2	equ	0xFDF
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _nrf_SPI_RW *****************
  1037 ;; Defined at:
  1038 ;;		line 233 in file "NRF_24L01/nRF2401.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  data            1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  data            1    0[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      unsigned char 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_nrf_SPI_RW_Reg
  1062 ;;		_nrf_SPI_Read
  1063 ;;		_nrf_SPI_Write_Buf
  1064 ;;		_nrf_SPI_Read_Buf
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text5
  1069  007962                     __ptext5:
  1070                           	opt stack 0
  1071  007962                     _nrf_SPI_RW:
  1072                           	opt stack 28
  1073                           
  1074                           ;incstack = 0
  1075                           ;nrf_SPI_RW@data stored from wreg
  1076  007962  6E01               	movwf	nrf_SPI_RW@data,c
  1077                           
  1078                           ;nRF2401.c: 234: SSPBUF = data;
  1079  007964  C001  FFC9         	movff	nrf_SPI_RW@data,4041	;volatile
  1080                           
  1081                           ;nRF2401.c: 235: while(!SSPSTATbits.BF);
  1082  007968  D000               	goto	l209
  1083  00796A                     l209:
  1084  00796A  A0C7               	btfss	4039,0,c	;volatile
  1085  00796C  D7FE               	goto	l209
  1086                           
  1087                           ;nRF2401.c: 236: data = SSPBUF;
  1088  00796E  CFC9 F001          	movff	4041,nrf_SPI_RW@data	;volatile
  1089                           
  1090                           ;nRF2401.c: 237: return(data);
  1091  007972  5001               	movf	nrf_SPI_RW@data,w,c
  1092  007974  D000               	goto	l212
  1093  007976                     l212:
  1094  007976  0012               	return		;funcret
  1095  007978                     __end_of_nrf_SPI_RW:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           intcon	equ	0xFF2
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1l	equ	0xFE1
  1106                           indf2	equ	0xFDF
  1107                           fsr2h	equ	0xFDA
  1108                           fsr2l	equ	0xFD9
  1109                           status	equ	0xFD8
  1110                           
  1111 ;; *************** function _OpenSPI *****************
  1112 ;; Defined at:
  1113 ;;		line 14 in file "/Applications/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi_open.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  sync_mode       1    wreg     unsigned char 
  1116 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1117 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1129 ;;      Params:         2       0       0       0       0       0       0       0       0
  1130 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1132 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1133 ;;Total ram usage:        3 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_nrf_init
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text6
  1143  007A66                     __ptext6:
  1144                           	opt stack 0
  1145  007A66                     _OpenSPI:
  1146                           	opt stack 29
  1147                           
  1148                           ;incstack = 0
  1149                           ;OpenSPI@sync_mode stored from wreg
  1150  007A66  6E03               	movwf	OpenSPI@sync_mode,c
  1151  007A68  0E3F               	movlw	63
  1152  007A6A  16C7               	andwf	4039,f,c	;volatile
  1153  007A6C  0E00               	movlw	0
  1154  007A6E  6EC6               	movwf	4038,c	;volatile
  1155  007A70  5003               	movf	OpenSPI@sync_mode,w,c
  1156  007A72  12C6               	iorwf	4038,f,c	;volatile
  1157  007A74  5002               	movf	OpenSPI@smp_phase,w,c
  1158  007A76  12C7               	iorwf	4039,f,c	;volatile
  1159  007A78  D005               	goto	l1458
  1160  007A7A                     l248:
  1161  007A7A  8CC7               	bsf	4039,6,c	;volatile
  1162  007A7C  D013               	goto	l1462
  1163  007A7E                     l250:
  1164  007A7E  8CC7               	bsf	4039,6,c	;volatile
  1165  007A80                     l251:
  1166  007A80  88C6               	bsf	4038,4,c	;volatile
  1167  007A82  D010               	goto	l1462
  1168  007A84                     l1458:
  1169  007A84  5001               	movf	OpenSPI@bus_mode,w,c
  1170                           
  1171                           ; Switch size 1, requested type "space"
  1172                           ; Number of cases is 3, Range of values is 0 to 3
  1173                           ; switch strategies available:
  1174                           ; Name         Instructions Cycles
  1175                           ; simple_byte           10     6 (average)
  1176                           ;	Chosen strategy is simple_byte
  1177  007A86  0A00               	xorlw	0	; case 0
  1178  007A88  B4D8               	btfsc	status,2,c
  1179  007A8A  D7F7               	goto	l248
  1180  007A8C  0A02               	xorlw	2	; case 2
  1181  007A8E  B4D8               	btfsc	status,2,c
  1182  007A90  D7F6               	goto	l250
  1183  007A92  0A01               	xorlw	1	; case 3
  1184  007A94  B4D8               	btfsc	status,2,c
  1185  007A96  D7F4               	goto	l251
  1186  007A98  D005               	goto	l1462
  1187  007A9A                     l254:
  1188  007A9A  8A92               	bsf	3986,5,c	;volatile
  1189  007A9C                     l256:
  1190  007A9C  8293               	bsf	3987,1,c	;volatile
  1191  007A9E  D00A               	goto	l255
  1192  007AA0                     l257:
  1193  007AA0  9293               	bcf	3987,1,c	;volatile
  1194  007AA2  D008               	goto	l255
  1195  007AA4                     l1462:
  1196  007AA4  5003               	movf	OpenSPI@sync_mode,w,c
  1197                           
  1198                           ; Switch size 1, requested type "space"
  1199                           ; Number of cases is 2, Range of values is 4 to 5
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte            7     4 (average)
  1203                           ;	Chosen strategy is simple_byte
  1204  007AA6  0A04               	xorlw	4	; case 4
  1205  007AA8  B4D8               	btfsc	status,2,c
  1206  007AAA  D7F7               	goto	l254
  1207  007AAC  0A01               	xorlw	1	; case 5
  1208  007AAE  B4D8               	btfsc	status,2,c
  1209  007AB0  D7F5               	goto	l256
  1210  007AB2  D7F6               	goto	l257
  1211  007AB4                     l255:
  1212  007AB4  8093               	bsf	3987,0,c	;volatile
  1213  007AB6  9E94               	bcf	3988,7,c	;volatile
  1214  007AB8  8AC6               	bsf	4038,5,c	;volatile
  1215  007ABA  0012               	return		;funcret
  1216  007ABC                     __end_of_OpenSPI:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           intcon	equ	0xFF2
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           indf2	equ	0xFDF
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _delay50ms *****************
  1233 ;; Defined at:
  1234 ;;		line 205 in file "DS18B20/DS18B20.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1250 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;;		_delay750ms
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text7
  1263  007A14                     __ptext7:
  1264                           	opt stack 0
  1265  007A14                     _delay50ms:
  1266                           	opt stack 30
  1267                           
  1268                           ;DS18B20.c: 207: _delay((unsigned long)((10)*(8000000/4000.0)));
  1269                           
  1270                           ;incstack = 0
  1271  007A14  0E1A               	movlw	26
  1272  007A16  6E01               	movwf	??_delay50ms& (0+255),c
  1273  007A18  0EF8               	movlw	248
  1274  007A1A                     u727:
  1275  007A1A  2EE8               	decfsz	wreg,f,c
  1276  007A1C  D7FE               	goto	u727
  1277  007A1E  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1278  007A20  D7FC               	goto	u727
  1279  007A22  D000               	nop2	
  1280                           
  1281                           ;DS18B20.c: 208: _delay((unsigned long)((10)*(8000000/4000.0)));
  1282  007A24  0E1A               	movlw	26
  1283  007A26  6E01               	movwf	??_delay50ms& (0+255),c
  1284  007A28  0EF8               	movlw	248
  1285  007A2A                     u737:
  1286  007A2A  2EE8               	decfsz	wreg,f,c
  1287  007A2C  D7FE               	goto	u737
  1288  007A2E  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1289  007A30  D7FC               	goto	u737
  1290  007A32  D000               	nop2	
  1291                           
  1292                           ;DS18B20.c: 209: _delay((unsigned long)((10)*(8000000/4000.0)));
  1293  007A34  0E1A               	movlw	26
  1294  007A36  6E01               	movwf	??_delay50ms& (0+255),c
  1295  007A38  0EF8               	movlw	248
  1296  007A3A                     u747:
  1297  007A3A  2EE8               	decfsz	wreg,f,c
  1298  007A3C  D7FE               	goto	u747
  1299  007A3E  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1300  007A40  D7FC               	goto	u747
  1301  007A42  D000               	nop2	
  1302                           
  1303                           ;DS18B20.c: 210: _delay((unsigned long)((10)*(8000000/4000.0)));
  1304  007A44  0E1A               	movlw	26
  1305  007A46  6E01               	movwf	??_delay50ms& (0+255),c
  1306  007A48  0EF8               	movlw	248
  1307  007A4A                     u757:
  1308  007A4A  2EE8               	decfsz	wreg,f,c
  1309  007A4C  D7FE               	goto	u757
  1310  007A4E  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1311  007A50  D7FC               	goto	u757
  1312  007A52  D000               	nop2	
  1313                           
  1314                           ;DS18B20.c: 211: _delay((unsigned long)((10)*(8000000/4000.0)));
  1315  007A54  0E1A               	movlw	26
  1316  007A56  6E01               	movwf	??_delay50ms& (0+255),c
  1317  007A58  0EF8               	movlw	248
  1318  007A5A                     u767:
  1319  007A5A  2EE8               	decfsz	wreg,f,c
  1320  007A5C  D7FE               	goto	u767
  1321  007A5E  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1322  007A60  D7FC               	goto	u767
  1323  007A62  D000               	nop2	
  1324  007A64  0012               	return		;funcret
  1325  007A66                     __end_of_delay50ms:
  1326                           	opt stack 0
  1327  0000                     tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           intcon	equ	0xFF2
  1332                           postinc0	equ	0xFEE
  1333                           wreg	equ	0xFE8
  1334                           postdec1	equ	0xFE5
  1335                           fsr1l	equ	0xFE1
  1336                           indf2	equ	0xFDF
  1337                           fsr2h	equ	0xFDA
  1338                           fsr2l	equ	0xFD9
  1339                           status	equ	0xFD8
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           intcon	equ	0xFF2
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1l	equ	0xFE1
  1349                           indf2	equ	0xFDF
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8
  1353                           
  1354                           	psect	rparam
  1355  0000                     tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           intcon	equ	0xFF2
  1360                           postinc0	equ	0xFEE
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1l	equ	0xFE1
  1364                           indf2	equ	0xFDF
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      46
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nrf_SPI_Write_Buf@pBuf	PTR unsigned char  size(2) Largest target is 5
		 -> TX_ADDRESS(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_nrf_init
    _nrf_init->_nrf_SPI_Write_Buf
    _nrf_SPI_Write_Buf->_nrf_SPI_RW
    _nrf_SPI_Read->_nrf_SPI_RW
    _nrf_SPI_RW_Reg->_nrf_SPI_RW

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                81    76      5    2942
                                              8 COMRAM    14     9      5
                          _delay50ms
                           _nrf_init
 ---------------------------------------------------------------------------------
 (1) _nrf_init                                             6     6      0    2660
                                              7 COMRAM     1     1      0
                            _OpenSPI
                     _nrf_SPI_RW_Reg
                       _nrf_SPI_Read
                  _nrf_SPI_Write_Buf
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Write_Buf                                    6     3      3     870
                                              1 COMRAM     6     3      3
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Read                                         2     2      0      60
                                              1 COMRAM     2     2      0
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_RW_Reg                                       3     2      1    1512
                                              1 COMRAM     3     2      1
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _nrf_SPI_RW                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _delay50ms                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay50ms
   _nrf_init
     _OpenSPI
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
     _nrf_SPI_Read
       _nrf_SPI_RW
     _nrf_SPI_Write_Buf
       _nrf_SPI_RW

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      2E       1       48.4%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      11        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Nov  6 20:26:41 2015

               _SSPSTATbits 000FC7                          l30 7BEE                          l40 7C9E  
                        l32 7C0E                          l43 7CD2                          l35 7C42  
                        l38 7C7E                 __CFG_BOR$ON 000000                 __CFG_BORV$3 000000  
         nrf_SPI_RW_Reg@reg 0004                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                 __CFG_LVP$ON 000000  
               __CFG_WDT$ON 000000                         l212 7976                         l215 798E  
                       l209 796A                         l250 7A7E                         l218 79A8  
                       l251 7A80                         l254 7A9A                         l255 7AB4  
                       l256 7A9C                         l248 7A7A                         l257 7AA0  
              __CFG_CPB$OFF 000000                         _RA0 007C00                         _RA1 007C01  
              __CFG_CPD$OFF 000000                         u707 7C90                         u580 7CFA  
                       u717 7CC4                         u727 7A1A                         u737 7A2A  
                       u747 7A3A                         u757 7A4A                         u767 7A5A  
                       u687 7C00                         u697 7C34                         wreg 000FE8  
                _TX_ADDRESS 002A                        l1440 79BC                        l1462 7AA4  
                      l1446 79D2                        l1542 7BCA                        l1552 7BFA  
                      l1458 7A84                        l1546 7BDA                        l1580 7CBE  
                      l1574 7C8A                        l1558 7C2E                        l1566 7C62  
                      _main 7B92                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        start 0002  
             __CFG_IESO$OFF 000000         nrf_SPI_RW_Reg@value 0002               __CFG_MCLRE$ON 000000  
              ___param_bank 000010             __end_of_OpenSPI 7ABC               __CFG_PLLDIV$2 000000  
            __CFG_CCP2MX$ON 000000                       ?_main 0009                       _LATA0 007C48  
             __CFG_USBDIV$1 000000               __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     tablat 000FF5                       status 000FD8              nrf_SPI_RW@data 0001  
      nrf_SPI_RW_Reg@status 0003              __CFG_PBADEN$ON 000000       main@nrf24l01_response 0010  
           __initialization 79DE                __end_of_main 7D00                      ??_main 000E  
             __activetblptr 000002            ??_nrf_SPI_RW_Reg 0003                      _ADCON1 000FC1  
                    _TRISA0 007C90                      _STATUS 000FD8                      _SSPBUF 000FC9  
                 ??_OpenSPI 0003              __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000  
                    clear_0 79E4            __end_of_nrf_init 7B92                __pdataCOMRAM 002A  
             ?_nrf_SPI_Read 0001                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 7A0A  
    nrf_SPI_Write_Buf@bytes 0004               ___rparam_used 000001              __pcstackCOMRAM 0001  
           nrf_SPI_Read@reg 0002          __size_of_delay50ms 0052              ??_nrf_SPI_Read 0002  
       nrf_SPI_Read@reg_val 0003                     _SSPCON1 000FC6                     _SSPSTAT 000FC7  
         __end_of_delay50ms 7A66             __CFG_VREGEN$OFF 000000                   ?_nrf_init 0001  
                   _OpenSPI 7A66                     __Hparam 0000                     __Lparam 0000  
                   __pcinit 79DE                     __ramtop 0800                     __ptext0 7B92  
                   __ptext1 7ABC                     __ptext2 79AA                     __ptext3 7990  
                   __ptext4 7978                     __ptext5 7962                     __ptext6 7A66  
                   __ptext7 7A14                  _nrf_SPI_RW 7962                     main@cpt 0015  
      end_of_initialization 7A0A               __Lmediumconst 0000           _nrf_SPI_Write_Buf 79AA  
        nrf_SPI_Write_Buf@i 0007          ?_nrf_SPI_Write_Buf 0002                  ??_nrf_init 0008  
      __end_of_nrf_SPI_Read 79AA                     postdec1 000FE5                     postinc0 000FEE  
                _temp_union 0027         ??_nrf_SPI_Write_Buf 0005                   _PORTCbits 000F82  
                 _TRISAbits 000F92                   _TRISBbits 000F93                   _TRISCbits 000F94  
   nrf_SPI_Write_Buf@status 0005   __end_of_nrf_SPI_Write_Buf 79DE               __pidataCOMRAM 795D  
          OpenSPI@smp_phase 0002                 ?_nrf_SPI_RW 0001         start_initialization 79DE  
          OpenSPI@sync_mode 0003               _DeviceAddress 0017     __size_of_nrf_SPI_RW_Reg 0018  
          __CFG_LPT1OSC$OFF 000000       nrf_SPI_Write_Buf@pBuf 0002                 __pbssCOMRAM 0017  
__size_of_nrf_SPI_Write_Buf 0034       __size_of_nrf_SPI_Read 001A                   _delay50ms 7A14  
       __size_of_nrf_SPI_RW 0016                    ?_OpenSPI 0001           __size_of_nrf_init 00D6  
              _nrf_SPI_Read 7990                  ?_delay50ms 0001            __CFG_WDTPS$32768 000000  
           OpenSPI@bus_mode 0001                   main@rampe 0011                   copy_data0 79FE  
            _nrf_SPI_RW_Reg 7978                    __Hrparam 0000                    __Lrparam 0000  
          __size_of_OpenSPI 0056        nrf_SPI_Write_Buf@reg 0006                ??_nrf_SPI_RW 0001  
    __end_of_nrf_SPI_RW_Reg 7990               __size_of_main 016E                 ??_delay50ms 0001  
                  _nrf_init 7ABC          __end_of_nrf_SPI_RW 7978                    main@cpt2 0013  
                  main@argc 0009                    main@argv 000B       __CFG_CPUDIV$OSC1_PLL2 000000  
                _INTCONbits 000FF2             ?_nrf_SPI_RW_Reg 0002                  _OSCCONbits 000FD3  
            nrf_init@status 0008        main@ds18b20_response 000F         __CFG_FOSC$INTOSC_HS 000000  
               _SSPCON1bits 000FC6  
