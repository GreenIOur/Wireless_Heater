

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Oct 16 12:45:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0071BD                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _TX_ADDRESS
    46  0071BD  41                 	db	65
    47  0071BE  41                 	db	65
    48  0071BF  41                 	db	65
    49  0071C0  41                 	db	65
    50  0071C1  41                 	db	65
    51  0000                     _PORTCbits	set	3970
    52  0000                     _TRISAbits	set	3986
    53  0000                     _TRISBbits	set	3987
    54  0000                     _TRISCbits	set	3988
    55  0000                     _LATA0	set	31816
    56  0000                     _RA0	set	31744
    57  0000                     _RA1	set	31745
    58  0000                     _TRISA0	set	31888
    59  0000                     _ADCON1	set	4033
    60  0000                     _OSCCONbits	set	4051
    61  0000                     _SSPBUF	set	4041
    62  0000                     _SSPCON1	set	4038
    63  0000                     _SSPCON1bits	set	4038
    64  0000                     _SSPSTAT	set	4039
    65  0000                     _SSPSTATbits	set	4039
    66  0000                     _STATUS	set	4056
    67  0000                     _INTCONbits	set	4082
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  0072EA                     __pcinit:
    73                           	opt stack 0
    74  0072EA                     start_initialization:
    75                           	opt stack 0
    76  0072EA                     __initialization:
    77                           	opt stack 0
    78                           
    79                           ; Clear objects allocated to COMRAM (19 bytes)
    80  0072EA  EE00  F02E         	lfsr	0,__pbssCOMRAM
    81  0072EE  0E13               	movlw	19
    82  0072F0                     clear_0:
    83  0072F0  6AEE               	clrf	postinc0,c
    84  0072F2  06E8               	decf	wreg,f,c
    85  0072F4  E1FD               	bnz	clear_0
    86                           
    87                           ; Initialize objects allocated to COMRAM (5 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  0072F6  0EBD               	movlw	low __pidataCOMRAM
    90  0072F8  6EF6               	movwf	tblptrl,c
    91  0072FA  0E71               	movlw	high __pidataCOMRAM
    92  0072FC  6EF7               	movwf	tblptrh,c
    93  0072FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  007300  6EF8               	movwf	tblptru,c
    95  007302  EE00  F041         	lfsr	0,__pdataCOMRAM
    96  007306  EE10 F005          	lfsr	1,5
    97  00730A                     copy_data0:
    98  00730A  0009               	tblrd		*+
    99  00730C  CFF5 FFEE          	movff	tablat,postinc0
   100  007310  50E5               	movf	postdec1,w,c
   101  007312  50E1               	movf	fsr1l,w,c
   102  007314  E1FA               	bnz	copy_data0
   103  007316                     end_of_initialization:
   104                           	opt stack 0
   105  007316                     __end_of__initialization:
   106                           	opt stack 0
   107  007316  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  007318  6EF8               	movwf	tblptru,c
   109  00731A  0100               	movlb	0
   110  00731C  EFFC  F03B         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           postdec1	equ	0xFE5
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	bssCOMRAM
   121  00002E                     __pbssCOMRAM:
   122                           	opt stack 0
   123  00002E                     _DeviceAddress:
   124                           	opt stack 0
   125  00002E                     	ds	16
   126  00003E                     _temp_union:
   127                           	opt stack 0
   128  00003E                     	ds	3
   129                           tblptru	equ	0xFF8
   130                           tblptrh	equ	0xFF7
   131                           tblptrl	equ	0xFF6
   132                           tablat	equ	0xFF5
   133                           postinc0	equ	0xFEE
   134                           wreg	equ	0xFE8
   135                           postdec1	equ	0xFE5
   136                           fsr1l	equ	0xFE1
   137                           
   138                           	psect	dataCOMRAM
   139  000041                     __pdataCOMRAM:
   140                           	opt stack 0
   141  000041                     _TX_ADDRESS:
   142                           	opt stack 0
   143  000041                     	ds	5
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	cstackBANK0
   154  000060                     __pcstackBANK0:
   155                           	opt stack 0
   156  000060                     main@rx_buf:
   157                           	opt stack 0
   158                           
   159                           ; 32 bytes @ 0x0
   160  000060                     	ds	32
   161  000080                     main@tx_buf:
   162                           	opt stack 0
   163                           
   164                           ; 32 bytes @ 0x20
   165  000080                     	ds	32
   166  0000A0                     main@Sucess:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x40
   170  0000A0                     	ds	1
   171  0000A1                     main@ds18b20_response:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x41
   175  0000A1                     	ds	1
   176  0000A2                     main@nrf24l01_response:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x42
   180  0000A2                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           postdec1	equ	0xFE5
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	opt stack 0
   193  000001                     ??_delay50ms:
   194  000001                     ??_init_sensor:
   195  000001                     ??_delay100ms:
   196  000001                     ?___awdiv:
   197                           	opt stack 0
   198  000001                     ?___ftpack:
   199                           	opt stack 0
   200  000001                     write_Bit@WriteArg:
   201                           	opt stack 0
   202  000001                     read_Bit@result:
   203                           	opt stack 0
   204  000001                     nrf_getStatus@status:
   205                           	opt stack 0
   206  000001                     nrf_SPI_RW@data:
   207                           	opt stack 0
   208  000001                     OpenSPI@bus_mode:
   209                           	opt stack 0
   210  000001                     ___awdiv@dividend:
   211                           	opt stack 0
   212  000001                     fill_SendBuff@temperature:
   213                           	opt stack 0
   214  000001                     ___ftpack@arg:
   215                           	opt stack 0
   216                           
   217                           ; 3 bytes @ 0x0
   218  000001                     	ds	1
   219  000002                     init_sensor@reponse:
   220                           	opt stack 0
   221  000002                     write_Byte@data:
   222                           	opt stack 0
   223  000002                     read_Byte@data:
   224                           	opt stack 0
   225  000002                     nrf_SPI_RW_Reg@value:
   226                           	opt stack 0
   227  000002                     nrf_SPI_Read@reg:
   228                           	opt stack 0
   229  000002                     OpenSPI@smp_phase:
   230                           	opt stack 0
   231  000002                     nrf_SPI_Read_Buf@pBuf:
   232                           	opt stack 0
   233  000002                     nrf_SPI_Write_Buf@pBuf:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x1
   237  000002                     	ds	1
   238  000003                     nrf_SPI_RW_Reg@status:
   239                           	opt stack 0
   240  000003                     nrf_SPI_Read@reg_val:
   241                           	opt stack 0
   242  000003                     OpenSPI@sync_mode:
   243                           	opt stack 0
   244  000003                     write_Byte@i:
   245                           	opt stack 0
   246  000003                     read_Byte@i:
   247                           	opt stack 0
   248  000003                     ___awdiv@divisor:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252  000003                     	ds	1
   253  000004                     nrf_SPI_RW_Reg@reg:
   254                           	opt stack 0
   255  000004                     nrf_SPI_Read_Buf@bytes:
   256                           	opt stack 0
   257  000004                     nrf_SPI_Write_Buf@bytes:
   258                           	opt stack 0
   259  000004                     ___ftpack@exp:
   260                           	opt stack 0
   261  000004                     fill_SendBuff@buffer:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x3
   265  000004                     	ds	1
   266  000005                     nrf_SPI_Read_Buf@status:
   267                           	opt stack 0
   268  000005                     nrf_SPI_Write_Buf@status:
   269                           	opt stack 0
   270  000005                     ___awdiv@counter:
   271                           	opt stack 0
   272  000005                     ___ftpack@sign:
   273                           	opt stack 0
   274  000005                     address_Device@Adress:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x4
   278  000005                     	ds	1
   279  000006                     ??___ftpack:
   280  000006                     fill_SendBuff@i:
   281                           	opt stack 0
   282  000006                     nrf_SPI_Read_Buf@reg:
   283                           	opt stack 0
   284  000006                     nrf_SPI_Write_Buf@reg:
   285                           	opt stack 0
   286  000006                     ___awdiv@sign:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x5
   290  000006                     	ds	1
   291  000007                     nrf_SPI_Read_Buf@i:
   292                           	opt stack 0
   293  000007                     nrf_SPI_Write_Buf@i:
   294                           	opt stack 0
   295  000007                     address_Device@i:
   296                           	opt stack 0
   297  000007                     ___awdiv@quotient:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x6
   301  000007                     	ds	1
   302  000008                     nrf_init@status:
   303                           	opt stack 0
   304  000008                     nrf_send@tx_buf:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x7
   308  000008                     	ds	1
   309  000009                     ??_search_Devices:
   310  000009                     ?___awtoft:
   311                           	opt stack 0
   312  000009                     ___awtoft@c:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x8
   316  000009                     	ds	1
   317  00000A                     nrf_send@rx_buf:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x9
   321  00000A                     	ds	2
   322  00000C                     ___awtoft@sign:
   323                           	opt stack 0
   324  00000C                     nrf_send@i:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0xB
   328  00000C                     	ds	1
   329  00000D                     ?___ftmul:
   330                           	opt stack 0
   331  00000D                     ___ftmul@f1:
   332                           	opt stack 0
   333  00000D                     search_Devices@list_Devices:
   334                           	opt stack 0
   335                           
   336                           ; 8 bytes @ 0xC
   337  00000D                     	ds	1
   338  00000E                     nrf_send@status:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0xD
   342  00000E                     	ds	2
   343  000010                     ___ftmul@f2:
   344                           	opt stack 0
   345                           
   346                           ; 3 bytes @ 0xF
   347  000010                     	ds	3
   348  000013                     ??___ftmul:
   349                           
   350                           ; 0 bytes @ 0x12
   351  000013                     	ds	2
   352  000015                     search_Devices@LastConflictBitNum:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x14
   356  000015                     	ds	1
   357  000016                     search_Devices@CurrentConflictBitPos:
   358                           	opt stack 0
   359  000016                     ___ftmul@exp:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363  000016                     	ds	1
   364  000017                     search_Devices@mask:
   365                           	opt stack 0
   366  000017                     ___ftmul@f3_as_product:
   367                           	opt stack 0
   368                           
   369                           ; 3 bytes @ 0x16
   370  000017                     	ds	1
   371  000018                     search_Devices@SelectedBit:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x17
   375  000018                     	ds	1
   376  000019                     search_Devices@i:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x18
   380  000019                     	ds	1
   381  00001A                     ___ftmul@cntr:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x19
   385  00001A                     	ds	1
   386  00001B                     ___ftmul@sign:
   387                           	opt stack 0
   388  00001B                     search_Devices@k:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x1A
   392  00001B                     	ds	1
   393  00001C                     ?_read_temp:
   394                           	opt stack 0
   395                           
   396                           ; 3 bytes @ 0x1B
   397  00001C                     	ds	1
   398  00001D                     search_Devices@InputBitStatus:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x1C
   402  00001D                     	ds	1
   403  00001E                     search_Devices@j:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x1D
   407  00001E                     	ds	1
   408  00001F                     ??_read_temp:
   409                           
   410                           ; 0 bytes @ 0x1E
   411  00001F                     	ds	1
   412  000020                     search_Devices@bitnum:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x1F
   416  000020                     	ds	1
   417  000021                     read_temp@temperature:
   418                           	opt stack 0
   419                           
   420                           ; 3 bytes @ 0x20
   421  000021                     	ds	3
   422  000024                     read_temp@templ:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x23
   426  000024                     	ds	1
   427  000025                     read_temp@temph:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x24
   431  000025                     	ds	1
   432  000026                     read_temp@temp:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x25
   436  000026                     	ds	2
   437  000028                     read_temp@DeviceAddress:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x27
   441  000028                     	ds	1
   442  000029                     
   443                           ; 2 bytes @ 0x28
   444  000029                     	ds	2
   445  00002B                     
   446                           ; 3 bytes @ 0x2A
   447  00002B                     	ds	3
   448  00002E                     tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           
   457                           ; 0 bytes @ 0x2D
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 19 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  argc            2   40[COMRAM] int 
   466 ;;  argv            3   42[COMRAM] PTR PTR unsigned char 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  Sucess          1   64[BANK0 ] unsigned char 
   469 ;;  tx_buf         32   32[BANK0 ] unsigned char [32]
   470 ;;  rx_buf         32    0[BANK0 ] unsigned char [32]
   471 ;;  temperature     3    0        float 
   472 ;;  nrf24l01_res    1   66[BANK0 ] unsigned char 
   473 ;;  ds18b20_resp    1   65[BANK0 ] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  2   40[COMRAM] int 
   476 ;; Registers used:
   477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   483 ;;      Params:         5       0       0       0       0       0       0       0       0
   484 ;;      Locals:         0      67       0       0       0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0       0       0       0       0
   486 ;;      Totals:         5      67       0       0       0       0       0       0       0
   487 ;;Total ram usage:       72 bytes
   488 ;; Hardware stack levels required when called:    4
   489 ;; This function calls:
   490 ;;		_delay50ms
   491 ;;		_delay750ms
   492 ;;		_fill_SendBuff
   493 ;;		_init_sensor
   494 ;;		_nrf_init
   495 ;;		_nrf_send
   496 ;;		_nrf_txmode
   497 ;;		_read_temp
   498 ;;		_search_Devices
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text0
   505  0077F8                     __ptext0:
   506                           	opt stack 0
   507  0077F8                     _main:
   508                           	opt stack 27
   509                           
   510                           ;main.c: 22: TRISAbits.TRISA1 = 0;
   511                           
   512                           ;incstack = 0
   513  0077F8  9292               	bcf	3986,1,c	;volatile
   514                           
   515                           ;main.c: 24: unsigned char tx_buf[32];
   516                           ;main.c: 25: unsigned char rx_buf[32];
   517                           ;main.c: 26: unsigned char ds18b20_response = 1;
   518  0077FA  0E01               	movlw	1
   519  0077FC  0100               	movlb	0	; () banked
   520  0077FE  6FA1               	movwf	main@ds18b20_response& (0+255),b
   521                           
   522                           ;main.c: 27: unsigned char nrf24l01_response = 1;
   523  007800  0E01               	movlw	1
   524  007802  0100               	movlb	0	; () banked
   525  007804  6FA2               	movwf	main@nrf24l01_response& (0+255),b
   526                           
   527                           ;main.c: 28: float temperature;
   528                           ;main.c: 32: OSCCONbits.SCS = 0;
   529  007806  0EFC               	movlw	-4
   530  007808  16D3               	andwf	4051,f,c	;volatile
   531                           
   532                           ; BSR set to: 0
   533                           ;main.c: 33: ADCON1 |= 0xF;
   534  00780A  0E0F               	movlw	15
   535  00780C  12C1               	iorwf	4033,f,c	;volatile
   536                           
   537                           ; BSR set to: 0
   538                           ;main.c: 34: (INTCONbits.GIE = 1);
   539  00780E  8EF2               	bsf	intcon,7,c	;volatile
   540                           
   541                           ; BSR set to: 0
   542                           ;main.c: 38: TRISCbits.TRISC0 = 0;
   543  007810  9094               	bcf	3988,0,c	;volatile
   544                           
   545                           ; BSR set to: 0
   546                           ;main.c: 39: TRISCbits.TRISC1 = 0;
   547  007812  9294               	bcf	3988,1,c	;volatile
   548                           
   549                           ; BSR set to: 0
   550                           ;main.c: 40: TRISCbits.TRISC2 = 1;
   551  007814  8494               	bsf	3988,2,c	;volatile
   552                           
   553                           ; BSR set to: 0
   554                           ;main.c: 41: TRISBbits.TRISB1 = 0;
   555  007816  9293               	bcf	3987,1,c	;volatile
   556                           
   557                           ; BSR set to: 0
   558                           ;main.c: 42: TRISBbits.TRISB0 = 1;
   559  007818  8093               	bsf	3987,0,c	;volatile
   560                           
   561                           ; BSR set to: 0
   562                           ;main.c: 43: TRISCbits.TRISC7 = 0;
   563  00781A  9E94               	bcf	3988,7,c	;volatile
   564                           
   565                           ; BSR set to: 0
   566                           ;main.c: 45: nrf_init();
   567  00781C  ECB5  F03C         	call	_nrf_init	;wreg free
   568                           
   569                           ;main.c: 46: delay50ms();
   570  007820  EC4C  F03A         	call	_delay50ms	;wreg free
   571                           
   572                           ;main.c: 47: nrf_txmode();
   573  007824  ECE1  F038         	call	_nrf_txmode	;wreg free
   574                           
   575                           ;main.c: 50: ds18b20_response=init_sensor();
   576  007828  EC05  F03A         	call	_init_sensor	;wreg free
   577  00782C  0100               	movlb	0	; () banked
   578  00782E  6FA1               	movwf	main@ds18b20_response& (0+255),b
   579                           
   580                           ; BSR set to: 0
   581                           ;main.c: 53: if(ds18b20_response==0)
   582  007830  0100               	movlb	0	; () banked
   583  007832  51A1               	movf	main@ds18b20_response& (0+255),w,b
   584  007834  0100               	movlb	0	; () banked
   585  007836  A4D8               	btfss	status,2,c
   586  007838  EF01  F000         	goto	start
   587                           
   588                           ; BSR set to: 0
   589                           ;main.c: 54: {
   590                           ;main.c: 55: unsigned char Sucess;
   591                           ;main.c: 56: Sucess=search_Devices();
   592  00783C  EC9C  F03D         	call	_search_Devices	;wreg free
   593  007840  0100               	movlb	0	; () banked
   594  007842  6FA0               	movwf	main@Sucess& (0+255),b
   595  007844  D000               	goto	l2146
   596  007846                     l2146:
   597                           
   598                           ;main.c: 58: {
   599                           ;main.c: 60: temp_union.temperature=read_temp(DeviceAddress[0]);
   600  007846  0E2E               	movlw	_DeviceAddress& (0+255)
   601  007848  EC5E  F03B         	call	_read_temp
   602  00784C  C01C  F03E         	movff	?_read_temp,_temp_union
   603  007850  C01D  F03F         	movff	?_read_temp+1,_temp_union+1
   604  007854  C01E  F040         	movff	?_read_temp+2,_temp_union+2
   605                           
   606                           ;main.c: 61: fill_SendBuff(temp_union.temperature,&tx_buf);
   607  007858  C03E  F001         	movff	_temp_union,fill_SendBuff@temperature
   608  00785C  C03F  F002         	movff	_temp_union+1,fill_SendBuff@temperature+1
   609  007860  C040  F003         	movff	_temp_union+2,fill_SendBuff@temperature+2
   610  007864  0E80               	movlw	low main@tx_buf
   611  007866  6E04               	movwf	fill_SendBuff@buffer,c
   612  007868  0E00               	movlw	high main@tx_buf
   613  00786A  6E05               	movwf	fill_SendBuff@buffer+1,c
   614  00786C  ECA0  F03A         	call	_fill_SendBuff	;wreg free
   615                           
   616                           ;main.c: 62: nrf24l01_response = nrf_send(&tx_buf,&rx_buf);
   617  007870  0E80               	movlw	low main@tx_buf
   618  007872  6E08               	movwf	nrf_send@tx_buf,c
   619  007874  0E00               	movlw	high main@tx_buf
   620  007876  6E09               	movwf	nrf_send@tx_buf+1,c
   621  007878  0E60               	movlw	low main@rx_buf
   622  00787A  6E0A               	movwf	nrf_send@rx_buf,c
   623  00787C  0E00               	movlw	high main@rx_buf
   624  00787E  6E0B               	movwf	nrf_send@rx_buf+1,c
   625  007880  ECCD  F03A         	call	_nrf_send	;wreg free
   626  007884  0100               	movlb	0	; () banked
   627  007886  6FA2               	movwf	main@nrf24l01_response& (0+255),b
   628                           
   629                           ; BSR set to: 0
   630                           ;main.c: 63: if(nrf24l01_response){RA1 = 1;}else{RA1 = 0;}
   631  007888  0100               	movlb	0	; () banked
   632  00788A  51A2               	movf	main@nrf24l01_response& (0+255),w,b
   633  00788C  0100               	movlb	0	; () banked
   634  00788E  B4D8               	btfsc	status,2,c
   635  007890  D002               	goto	l43
   636                           
   637                           ; BSR set to: 0
   638  007892  8280               	bsf	3968,1,c	;volatile
   639  007894  D002               	goto	l2154
   640  007896                     l43:
   641                           
   642                           ; BSR set to: 0
   643  007896  9280               	bcf	3968,1,c	;volatile
   644  007898  D000               	goto	l2154
   645  00789A                     l2154:
   646                           
   647                           ; BSR set to: 0
   648                           ;main.c: 64: delay750ms();
   649  00789A  EC18  F039         	call	_delay750ms	;wreg free
   650                           
   651                           ;main.c: 65: }while(1);
   652  00789E  D7D3               	goto	l2146
   653                           
   654                           ;main.c: 66: };
   655                           ;main.c: 68: return (0);
   656                           ;	Return value of _main is never used
   657  0078A0  EF01  F000         	goto	start
   658  0078A4                     __end_of_main:
   659                           	opt stack 0
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           intcon	equ	0xFF2
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           status	equ	0xFD8
   670                           
   671 ;; *************** function _search_Devices *****************
   672 ;; Defined at:
   673 ;;		line 98 in file "DS18B20/DS18B20.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  j               2   29[COMRAM] int 
   678 ;;  InputBitStat    1   28[COMRAM] unsigned char 
   679 ;;  SelectedBit     1   23[COMRAM] unsigned char 
   680 ;;  k               2   26[COMRAM] int 
   681 ;;  bitnum          2   31[COMRAM] int 
   682 ;;  mask            1   22[COMRAM] unsigned char 
   683 ;;  CurrentConfl    1   21[COMRAM] unsigned char 
   684 ;;  i               2   24[COMRAM] int 
   685 ;;  list_Devices    8   12[COMRAM] unsigned char [8]
   686 ;;  LastConflict    1   20[COMRAM] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      unsigned char 
   689 ;; Registers used:
   690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:        21       0       0       0       0       0       0       0       0
   698 ;;      Temps:          4       0       0       0       0       0       0       0       0
   699 ;;      Totals:        25       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:       25 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    2
   703 ;; This function calls:
   704 ;;		___awdiv
   705 ;;		_init_sensor
   706 ;;		_read_Bit
   707 ;;		_write_Bit
   708 ;;		_write_Byte
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text1
   715  007B38                     __ptext1:
   716                           	opt stack 0
   717  007B38                     _search_Devices:
   718                           	opt stack 28
   719                           
   720                           ;DS18B20.c: 100: unsigned char list_Devices[8];
   721                           ;DS18B20.c: 101: unsigned char LastConflictBitNum=0;
   722                           
   723                           ;incstack = 0
   724  007B38  0E00               	movlw	0
   725  007B3A  6E15               	movwf	search_Devices@LastConflictBitNum,c
   726                           
   727                           ;DS18B20.c: 102: for(int i=0;i<2;i++){
   728  007B3C  0E00               	movlw	0
   729  007B3E  6E1A               	movwf	search_Devices@i+1,c
   730  007B40  0E00               	movlw	0
   731  007B42  6E19               	movwf	search_Devices@i,c
   732  007B44  BE1A               	btfsc	search_Devices@i+1,7,c
   733  007B46  D008               	goto	l1940
   734  007B48  501A               	movf	search_Devices@i+1,w,c
   735  007B4A  E105               	bnz	u990
   736  007B4C  0E02               	movlw	2
   737  007B4E  5C19               	subwf	search_Devices@i,w,c
   738  007B50  B0D8               	btfsc	status,0,c
   739  007B52  D0D3               	goto	l2022
   740  007B54  D001               	goto	l1940
   741  007B56                     u990:
   742  007B56  D0D1               	goto	l2022
   743  007B58                     l1940:
   744                           
   745                           ;DS18B20.c: 103: unsigned char mask=0x01;
   746  007B58  0E01               	movlw	1
   747  007B5A  6E17               	movwf	search_Devices@mask,c
   748                           
   749                           ;DS18B20.c: 104: for(int k=0;k<8;k++)
   750  007B5C  0E00               	movlw	0
   751  007B5E  6E1C               	movwf	search_Devices@k+1,c
   752  007B60  0E00               	movlw	0
   753  007B62  6E1B               	movwf	search_Devices@k,c
   754  007B64                     l1942:
   755  007B64  BE1C               	btfsc	search_Devices@k+1,7,c
   756  007B66  D008               	goto	l1946
   757  007B68  501C               	movf	search_Devices@k+1,w,c
   758  007B6A  E112               	bnz	l1952
   759  007B6C  0E08               	movlw	8
   760  007B6E  5C1B               	subwf	search_Devices@k,w,c
   761  007B70  B0D8               	btfsc	status,0,c
   762  007B72  D00E               	goto	l1952
   763  007B74  D001               	goto	l1946
   764  007B76  D00C               	goto	l1952
   765  007B78                     l1946:
   766                           
   767                           ;DS18B20.c: 105: {
   768                           ;DS18B20.c: 106: list_Devices[k]=0x00;
   769  007B78  0E0D               	movlw	low search_Devices@list_Devices
   770  007B7A  241B               	addwf	search_Devices@k,w,c
   771  007B7C  6ED9               	movwf	fsr2l,c
   772  007B7E  0E00               	movlw	high search_Devices@list_Devices
   773  007B80  201C               	addwfc	search_Devices@k+1,w,c
   774  007B82  6EDA               	movwf	fsr2h,c
   775  007B84  0E00               	movlw	0
   776  007B86  6EDF               	movwf	indf2,c
   777  007B88  4A1B               	infsnz	search_Devices@k,f,c
   778  007B8A  2A1C               	incf	search_Devices@k+1,f,c
   779  007B8C  D7EB               	goto	l1942
   780  007B8E  D000               	goto	l1952
   781  007B90                     l1952:
   782                           
   783                           ;DS18B20.c: 107: }
   784                           ;DS18B20.c: 108: if (init_sensor())
   785  007B90  EC05  F03A         	call	_init_sensor	;wreg free
   786  007B94  0900               	iorlw	0
   787  007B96  B4D8               	btfsc	status,2,c
   788  007B98  D002               	goto	l1958
   789  007B9A  D021               	goto	l1976
   790                           
   791                           ;DS18B20.c: 109: {
   792                           ;DS18B20.c: 110: return 0;
   793  007B9C  D0B0               	goto	l102
   794  007B9E                     l1958:
   795                           
   796                           ;DS18B20.c: 111: }
   797                           ;DS18B20.c: 112: write_Byte(0xF0);
   798  007B9E  0EF0               	movlw	240
   799  007BA0  EC5B  F039         	call	_write_Byte
   800                           
   801                           ;DS18B20.c: 113: int bitnum=1;
   802  007BA4  0E00               	movlw	0
   803  007BA6  6E21               	movwf	search_Devices@bitnum+1,c
   804  007BA8  0E01               	movlw	1
   805  007BAA  6E20               	movwf	search_Devices@bitnum,c
   806                           
   807                           ;DS18B20.c: 114: unsigned char CurrentConflictBitPos=0;
   808  007BAC  0E00               	movlw	0
   809  007BAE  6E16               	movwf	search_Devices@CurrentConflictBitPos,c
   810                           
   811                           ;DS18B20.c: 115: while(bitnum<65)
   812  007BB0  D05D               	goto	l2004
   813  007BB2                     l1964:
   814                           
   815                           ;DS18B20.c: 116: {
   816                           ;DS18B20.c: 117: unsigned char SelectedBit=0;
   817  007BB2  0E00               	movlw	0
   818  007BB4  6E18               	movwf	search_Devices@SelectedBit,c
   819                           
   820                           ;DS18B20.c: 118: unsigned char InputBitStatus=0x00;
   821  007BB6  0E00               	movlw	0
   822  007BB8  6E1D               	movwf	search_Devices@InputBitStatus,c
   823                           
   824                           ;DS18B20.c: 119: if (read_Bit()==1)
   825  007BBA  EC29  F039         	call	_read_Bit	;wreg free
   826  007BBE  06E8               	decf	wreg,f,c
   827  007BC0  A4D8               	btfss	status,2,c
   828  007BC2  D002               	goto	l1970
   829                           
   830                           ;DS18B20.c: 120: {
   831                           ;DS18B20.c: 121: InputBitStatus|=2;
   832  007BC4  821D               	bsf	search_Devices@InputBitStatus,1,c
   833  007BC6  D000               	goto	l1970
   834  007BC8                     l1970:
   835                           
   836                           ;DS18B20.c: 122: }
   837                           ;DS18B20.c: 123: if(read_Bit()==1)
   838  007BC8  EC29  F039         	call	_read_Bit	;wreg free
   839  007BCC  06E8               	decf	wreg,f,c
   840  007BCE  A4D8               	btfss	status,2,c
   841  007BD0  D002               	goto	l1974
   842                           
   843                           ;DS18B20.c: 124: {
   844                           ;DS18B20.c: 125: InputBitStatus|=1;
   845  007BD2  801D               	bsf	search_Devices@InputBitStatus,0,c
   846  007BD4  D000               	goto	l1974
   847  007BD6                     l1974:
   848                           
   849                           ;DS18B20.c: 126: }
   850                           ;DS18B20.c: 133: if (InputBitStatus==3)
   851  007BD6  0E03               	movlw	3
   852  007BD8  181D               	xorwf	search_Devices@InputBitStatus,w,c
   853  007BDA  A4D8               	btfss	status,2,c
   854  007BDC  D002               	goto	l1980
   855  007BDE                     l1976:
   856                           
   857                           ;DS18B20.c: 134: {
   858                           ;DS18B20.c: 135: return 0;
   859  007BDE  0E00               	movlw	0
   860  007BE0  D08E               	goto	l102
   861  007BE2                     l1980:
   862                           
   863                           ;DS18B20.c: 136: }
   864                           ;DS18B20.c: 137: if(InputBitStatus>0)
   865  007BE2  501D               	movf	search_Devices@InputBitStatus,w,c
   866  007BE4  B4D8               	btfsc	status,2,c
   867  007BE6  D003               	goto	l1984
   868                           
   869                           ;DS18B20.c: 138: {
   870                           ;DS18B20.c: 139: SelectedBit=InputBitStatus>>1;
   871  007BE8  90D8               	bcf	status,0,c
   872  007BEA  301D               	rrcf	search_Devices@InputBitStatus,w,c
   873  007BEC  D00B               	goto	L1
   874  007BEE                     l1984:
   875                           
   876                           ;DS18B20.c: 141: else
   877                           ;DS18B20.c: 142: {
   878                           ;DS18B20.c: 143: if(bitnum==LastConflictBitNum)
   879  007BEE  5015               	movf	search_Devices@LastConflictBitNum,w,c
   880  007BF0  6E09               	movwf	??_search_Devices& (0+255),c
   881  007BF2  6A0A               	clrf	(??_search_Devices+1)& (0+255),c
   882  007BF4  5020               	movf	search_Devices@bitnum,w,c
   883  007BF6  1809               	xorwf	??_search_Devices,w,c
   884  007BF8  E107               	bnz	l1988
   885  007BFA  5021               	movf	search_Devices@bitnum+1,w,c
   886  007BFC  180A               	xorwf	??_search_Devices+1,w,c
   887  007BFE  A4D8               	btfss	status,2,c
   888  007C00  D003               	goto	l1988
   889                           
   890                           ;DS18B20.c: 144: {
   891                           ;DS18B20.c: 145: SelectedBit=1;
   892  007C02  0E01               	movlw	1
   893  007C04                     L1:
   894  007C04  6E18               	movwf	search_Devices@SelectedBit,c
   895                           
   896                           ;DS18B20.c: 146: }
   897  007C06  D005               	goto	l1992
   898  007C08                     l1988:
   899                           
   900                           ;DS18B20.c: 147: else
   901                           ;DS18B20.c: 148: {
   902                           ;DS18B20.c: 149: SelectedBit=0;
   903  007C08  0E00               	movlw	0
   904  007C0A  6E18               	movwf	search_Devices@SelectedBit,c
   905                           
   906                           ;DS18B20.c: 150: CurrentConflictBitPos=bitnum;
   907  007C0C  C020  F016         	movff	search_Devices@bitnum,search_Devices@CurrentConflictBitPos
   908  007C10  D000               	goto	l1992
   909  007C12                     l1992:
   910                           
   911                           ;DS18B20.c: 151: }
   912                           ;DS18B20.c: 152: }
   913                           ;DS18B20.c: 153: write_Bit(SelectedBit);
   914  007C12  5018               	movf	search_Devices@SelectedBit,w,c
   915  007C14  EC90  F039         	call	_write_Bit
   916                           
   917                           ;DS18B20.c: 154: mask=0x01;
   918  007C18  0E01               	movlw	1
   919  007C1A  6E17               	movwf	search_Devices@mask,c
   920                           
   921                           ;DS18B20.c: 155: mask<<=(bitnum-1)%8;
   922  007C1C  C020  F009         	movff	search_Devices@bitnum,??_search_Devices
   923  007C20  0EFF               	movlw	-1
   924  007C22  2609               	addwf	??_search_Devices,f,c
   925  007C24  0E07               	movlw	7
   926  007C26  1609               	andwf	??_search_Devices,f,c
   927  007C28  2809               	incf	??_search_Devices,w,c
   928  007C2A  6E0A               	movwf	(??_search_Devices+1)& (0+255),c
   929  007C2C  D002               	goto	u1080
   930  007C2E                     u1085:
   931  007C2E  90D8               	bcf	status,0,c
   932  007C30  3617               	rlcf	search_Devices@mask,f,c
   933  007C32                     u1080:
   934  007C32  2E0A               	decfsz	(??_search_Devices+1)& (0+255),f,c
   935  007C34  D7FC               	goto	u1085
   936                           
   937                           ;DS18B20.c: 156: if (SelectedBit==1)
   938  007C36  0418               	decf	search_Devices@SelectedBit,w,c
   939  007C38  A4D8               	btfss	status,2,c
   940  007C3A  D015               	goto	l2002
   941                           
   942                           ;DS18B20.c: 157: {
   943                           ;DS18B20.c: 158: list_Devices[(bitnum-1)/8]|=mask;
   944  007C3C  0EFF               	movlw	255
   945  007C3E  2420               	addwf	search_Devices@bitnum,w,c
   946  007C40  6E01               	movwf	___awdiv@dividend,c
   947  007C42  0EFF               	movlw	255
   948  007C44  2021               	addwfc	search_Devices@bitnum+1,w,c
   949  007C46  6E02               	movwf	___awdiv@dividend+1,c
   950  007C48  0E00               	movlw	0
   951  007C4A  6E04               	movwf	___awdiv@divisor+1,c
   952  007C4C  0E08               	movlw	8
   953  007C4E  6E03               	movwf	___awdiv@divisor,c
   954  007C50  EC13  F03B         	call	___awdiv	;wreg free
   955  007C54  0E0D               	movlw	low search_Devices@list_Devices
   956  007C56  2401               	addwf	?___awdiv,w,c
   957  007C58  6ED9               	movwf	fsr2l,c
   958  007C5A  0E00               	movlw	high search_Devices@list_Devices
   959  007C5C  2002               	addwfc	?___awdiv+1,w,c
   960  007C5E  6EDA               	movwf	fsr2h,c
   961  007C60  5017               	movf	search_Devices@mask,w,c
   962  007C62  12DF               	iorwf	indf2,f,c
   963  007C64  D000               	goto	l2002
   964  007C66                     l2002:
   965                           
   966                           ;DS18B20.c: 159: }
   967                           ;DS18B20.c: 160: bitnum++;
   968  007C66  4A20               	infsnz	search_Devices@bitnum,f,c
   969  007C68  2A21               	incf	search_Devices@bitnum+1,f,c
   970  007C6A  D000               	goto	l2004
   971  007C6C                     l2004:
   972  007C6C  BE21               	btfsc	search_Devices@bitnum+1,7,c
   973  007C6E  D7A1               	goto	l1964
   974  007C70  5021               	movf	search_Devices@bitnum+1,w,c
   975  007C72  E104               	bnz	u1100
   976  007C74  0E41               	movlw	65
   977  007C76  5C20               	subwf	search_Devices@bitnum,w,c
   978  007C78  A0D8               	btfss	status,0,c
   979  007C7A  D79B               	goto	l1964
   980  007C7C                     u1100:
   981                           
   982                           ;DS18B20.c: 161: }
   983                           ;DS18B20.c: 162: LastConflictBitNum=CurrentConflictBitPos;
   984  007C7C  C016  F015         	movff	search_Devices@CurrentConflictBitPos,search_Devices@LastConflictBitNum
   985                           
   986                           ;DS18B20.c: 163: for(int j=0;j<8;j++){
   987  007C80  0E00               	movlw	0
   988  007C82  6E1F               	movwf	search_Devices@j+1,c
   989  007C84  0E00               	movlw	0
   990  007C86  6E1E               	movwf	search_Devices@j,c
   991  007C88                     l2008:
   992  007C88  BE1F               	btfsc	search_Devices@j+1,7,c
   993  007C8A  D008               	goto	l2012
   994  007C8C  501F               	movf	search_Devices@j+1,w,c
   995  007C8E  E12D               	bnz	l2018
   996  007C90  0E08               	movlw	8
   997  007C92  5C1E               	subwf	search_Devices@j,w,c
   998  007C94  B0D8               	btfsc	status,0,c
   999  007C96  D029               	goto	l2018
  1000  007C98  D001               	goto	l2012
  1001  007C9A  D027               	goto	l2018
  1002  007C9C                     l2012:
  1003                           
  1004                           ;DS18B20.c: 164: DeviceAddress[i][j]=list_Devices[j];
  1005  007C9C  0E0D               	movlw	low search_Devices@list_Devices
  1006  007C9E  241E               	addwf	search_Devices@j,w,c
  1007  007CA0  6ED9               	movwf	fsr2l,c
  1008  007CA2  0E00               	movlw	high search_Devices@list_Devices
  1009  007CA4  201F               	addwfc	search_Devices@j+1,w,c
  1010  007CA6  6EDA               	movwf	fsr2h,c
  1011  007CA8  C019  F009         	movff	search_Devices@i,??_search_Devices
  1012  007CAC  C01A  F00A         	movff	search_Devices@i+1,??_search_Devices+1
  1013  007CB0  90D8               	bcf	status,0,c
  1014  007CB2  3609               	rlcf	??_search_Devices,f,c
  1015  007CB4  360A               	rlcf	??_search_Devices+1,f,c
  1016  007CB6  90D8               	bcf	status,0,c
  1017  007CB8  3609               	rlcf	??_search_Devices,f,c
  1018  007CBA  360A               	rlcf	??_search_Devices+1,f,c
  1019  007CBC  90D8               	bcf	status,0,c
  1020  007CBE  3609               	rlcf	??_search_Devices,f,c
  1021  007CC0  360A               	rlcf	??_search_Devices+1,f,c
  1022  007CC2  0E2E               	movlw	low _DeviceAddress
  1023  007CC4  6E0B               	movwf	(??_search_Devices+2)& (0+255),c
  1024  007CC6  0E00               	movlw	high _DeviceAddress
  1025  007CC8  6E0C               	movwf	(??_search_Devices+3)& (0+255),c
  1026  007CCA  5009               	movf	??_search_Devices,w,c
  1027  007CCC  260B               	addwf	??_search_Devices+2,f,c
  1028  007CCE  500A               	movf	??_search_Devices+1,w,c
  1029  007CD0  220C               	addwfc	??_search_Devices+3,f,c
  1030  007CD2  501E               	movf	search_Devices@j,w,c
  1031  007CD4  240B               	addwf	??_search_Devices+2,w,c
  1032  007CD6  6EE1               	movwf	fsr1l,c
  1033  007CD8  501F               	movf	search_Devices@j+1,w,c
  1034  007CDA  200C               	addwfc	??_search_Devices+3,w,c
  1035  007CDC  6EE2               	movwf	fsr1h,c
  1036  007CDE  CFDF FFE7          	movff	indf2,indf1
  1037  007CE2  4A1E               	infsnz	search_Devices@j,f,c
  1038  007CE4  2A1F               	incf	search_Devices@j+1,f,c
  1039  007CE6  D7D0               	goto	l2008
  1040  007CE8  D000               	goto	l2018
  1041  007CEA                     l2018:
  1042  007CEA  4A19               	infsnz	search_Devices@i,f,c
  1043  007CEC  2A1A               	incf	search_Devices@i+1,f,c
  1044  007CEE  BE1A               	btfsc	search_Devices@i+1,7,c
  1045  007CF0  D733               	goto	l1940
  1046  007CF2  501A               	movf	search_Devices@i+1,w,c
  1047  007CF4  E102               	bnz	l2022
  1048  007CF6  D72A               	goto	L2
  1049  007CF8  D000               	goto	l2022
  1050  007CFA                     l2022:
  1051                           
  1052                           ;DS18B20.c: 165: }
  1053                           ;DS18B20.c: 166: }
  1054                           ;DS18B20.c: 167: return 1;
  1055  007CFA  0E01               	movlw	1
  1056  007CFC  D000               	goto	l102
  1057  007CFE                     l102:
  1058  007CFE  0012               	return		;funcret
  1059  007D00                     __end_of_search_Devices:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           intcon	equ	0xFF2
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           indf1	equ	0xFE7
  1069                           postdec1	equ	0xFE5
  1070                           fsr1h	equ	0xFE2
  1071                           fsr1l	equ	0xFE1
  1072                           indf2	equ	0xFDF
  1073                           fsr2h	equ	0xFDA
  1074                           fsr2l	equ	0xFD9
  1075                           status	equ	0xFD8
  1076                           
  1077 ;; *************** function ___awdiv *****************
  1078 ;; Defined at:
  1079 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/awdiv.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  dividend        2    0[COMRAM] int 
  1082 ;;  divisor         2    2[COMRAM] int 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  quotient        2    6[COMRAM] int 
  1085 ;;  sign            1    5[COMRAM] unsigned char 
  1086 ;;  counter         1    4[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    0[COMRAM] int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         4       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1100 ;;Total ram usage:        8 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_search_Devices
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text2
  1110  007626                     __ptext2:
  1111                           	opt stack 0
  1112  007626                     ___awdiv:
  1113                           	opt stack 29
  1114                           
  1115                           ;incstack = 0
  1116  007626  0E00               	movlw	0
  1117  007628  6E06               	movwf	___awdiv@sign,c
  1118  00762A  AE04               	btfss	___awdiv@divisor+1,7,c
  1119  00762C  D007               	goto	l1834
  1120  00762E  6C03               	negf	___awdiv@divisor,c
  1121  007630  1E04               	comf	___awdiv@divisor+1,f,c
  1122  007632  B0D8               	btfsc	status,0,c
  1123  007634  2A04               	incf	___awdiv@divisor+1,f,c
  1124  007636  0E01               	movlw	1
  1125  007638  6E06               	movwf	___awdiv@sign,c
  1126  00763A  D000               	goto	l1834
  1127  00763C                     l1834:
  1128  00763C  AE02               	btfss	___awdiv@dividend+1,7,c
  1129  00763E  D007               	goto	l1840
  1130  007640  6C01               	negf	___awdiv@dividend,c
  1131  007642  1E02               	comf	___awdiv@dividend+1,f,c
  1132  007644  B0D8               	btfsc	status,0,c
  1133  007646  2A02               	incf	___awdiv@dividend+1,f,c
  1134  007648  0E01               	movlw	1
  1135  00764A  1A06               	xorwf	___awdiv@sign,f,c
  1136  00764C  D000               	goto	l1840
  1137  00764E                     l1840:
  1138  00764E  0E00               	movlw	0
  1139  007650  6E08               	movwf	___awdiv@quotient+1,c
  1140  007652  0E00               	movlw	0
  1141  007654  6E07               	movwf	___awdiv@quotient,c
  1142  007656  5003               	movf	___awdiv@divisor,w,c
  1143  007658  1004               	iorwf	___awdiv@divisor+1,w,c
  1144  00765A  B4D8               	btfsc	status,2,c
  1145  00765C  D021               	goto	l1862
  1146  00765E  0E01               	movlw	1
  1147  007660  6E05               	movwf	___awdiv@counter,c
  1148  007662  D005               	goto	l1848
  1149  007664                     l1846:
  1150  007664  90D8               	bcf	status,0,c
  1151  007666  3603               	rlcf	___awdiv@divisor,f,c
  1152  007668  3604               	rlcf	___awdiv@divisor+1,f,c
  1153  00766A  2A05               	incf	___awdiv@counter,f,c
  1154  00766C  D000               	goto	l1848
  1155  00766E                     l1848:
  1156  00766E  BE04               	btfsc	___awdiv@divisor+1,7,c
  1157  007670  D002               	goto	l1850
  1158  007672  D7F8               	goto	l1846
  1159  007674  D000               	goto	l1850
  1160  007676                     l1850:
  1161  007676  90D8               	bcf	status,0,c
  1162  007678  3607               	rlcf	___awdiv@quotient,f,c
  1163  00767A  3608               	rlcf	___awdiv@quotient+1,f,c
  1164  00767C  5003               	movf	___awdiv@divisor,w,c
  1165  00767E  5C01               	subwf	___awdiv@dividend,w,c
  1166  007680  5004               	movf	___awdiv@divisor+1,w,c
  1167  007682  5802               	subwfb	___awdiv@dividend+1,w,c
  1168  007684  A0D8               	btfss	status,0,c
  1169  007686  D006               	goto	l1858
  1170  007688  5003               	movf	___awdiv@divisor,w,c
  1171  00768A  5E01               	subwf	___awdiv@dividend,f,c
  1172  00768C  5004               	movf	___awdiv@divisor+1,w,c
  1173  00768E  5A02               	subwfb	___awdiv@dividend+1,f,c
  1174  007690  8007               	bsf	___awdiv@quotient,0,c
  1175  007692  D000               	goto	l1858
  1176  007694                     l1858:
  1177  007694  90D8               	bcf	status,0,c
  1178  007696  3204               	rrcf	___awdiv@divisor+1,f,c
  1179  007698  3203               	rrcf	___awdiv@divisor,f,c
  1180  00769A  2E05               	decfsz	___awdiv@counter,f,c
  1181  00769C  D7EC               	goto	l1850
  1182  00769E  D000               	goto	l1862
  1183  0076A0                     l1862:
  1184  0076A0  5006               	movf	___awdiv@sign,w,c
  1185  0076A2  B4D8               	btfsc	status,2,c
  1186  0076A4  D005               	goto	l1866
  1187  0076A6  6C07               	negf	___awdiv@quotient,c
  1188  0076A8  1E08               	comf	___awdiv@quotient+1,f,c
  1189  0076AA  B0D8               	btfsc	status,0,c
  1190  0076AC  2A08               	incf	___awdiv@quotient+1,f,c
  1191  0076AE  D000               	goto	l1866
  1192  0076B0                     l1866:
  1193  0076B0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1194  0076B4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1195  0076B8  D000               	goto	l452
  1196  0076BA                     l452:
  1197  0076BA  0012               	return		;funcret
  1198  0076BC                     __end_of___awdiv:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           intcon	equ	0xFF2
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           indf1	equ	0xFE7
  1208                           postdec1	equ	0xFE5
  1209                           fsr1h	equ	0xFE2
  1210                           fsr1l	equ	0xFE1
  1211                           indf2	equ	0xFDF
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           status	equ	0xFD8
  1215                           
  1216 ;; *************** function _read_temp *****************
  1217 ;; Defined at:
  1218 ;;		line 170 in file "DS18B20/DS18B20.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  DeviceAddres    1    wreg     unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  DeviceAddres    1   39[COMRAM] unsigned char 
  1223 ;;  temperature     3   32[COMRAM] float 
  1224 ;;  temp            2   37[COMRAM] int 
  1225 ;;  temph           1   36[COMRAM] unsigned char 
  1226 ;;  templ           1   35[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  3   27[COMRAM] float 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         3       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1239 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:       13 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    3
  1243 ;; This function calls:
  1244 ;;		___awtoft
  1245 ;;		___ftmul
  1246 ;;		_address_Device
  1247 ;;		_delay750ms
  1248 ;;		_init_sensor
  1249 ;;		_read_Byte
  1250 ;;		_write_Byte
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text3
  1257  0076BC                     __ptext3:
  1258                           	opt stack 0
  1259  0076BC                     _read_temp:
  1260                           	opt stack 27
  1261                           
  1262                           ;incstack = 0
  1263                           ;read_temp@DeviceAddress stored from wreg
  1264  0076BC  6E28               	movwf	read_temp@DeviceAddress,c
  1265                           
  1266                           ;DS18B20.c: 172: unsigned char templ,temph;
  1267                           ;DS18B20.c: 173: int temp;
  1268                           ;DS18B20.c: 174: float temperature;
  1269                           ;DS18B20.c: 176: address_Device(DeviceAddress);
  1270  0076BE  5028               	movf	read_temp@DeviceAddress,w,c
  1271  0076C0  6E1F               	movwf	??_read_temp& (0+255),c
  1272  0076C2  6A20               	clrf	(??_read_temp+1)& (0+255),c
  1273  0076C4  C01F  F005         	movff	??_read_temp,address_Device@Adress
  1274  0076C8  C020  F006         	movff	??_read_temp+1,address_Device@Adress+1
  1275  0076CC  EC28  F03A         	call	_address_Device	;wreg free
  1276                           
  1277                           ;DS18B20.c: 177: write_Byte(0x44);
  1278  0076D0  0E44               	movlw	68
  1279  0076D2  EC5B  F039         	call	_write_Byte
  1280                           
  1281                           ;DS18B20.c: 178: delay750ms();
  1282  0076D6  EC18  F039         	call	_delay750ms	;wreg free
  1283                           
  1284                           ;DS18B20.c: 179: init_sensor();
  1285  0076DA  EC05  F03A         	call	_init_sensor	;wreg free
  1286                           
  1287                           ;DS18B20.c: 180: address_Device(DeviceAddress);
  1288  0076DE  5028               	movf	read_temp@DeviceAddress,w,c
  1289  0076E0  6E1F               	movwf	??_read_temp& (0+255),c
  1290  0076E2  6A20               	clrf	(??_read_temp+1)& (0+255),c
  1291  0076E4  C01F  F005         	movff	??_read_temp,address_Device@Adress
  1292  0076E8  C020  F006         	movff	??_read_temp+1,address_Device@Adress+1
  1293  0076EC  EC28  F03A         	call	_address_Device	;wreg free
  1294                           
  1295                           ;DS18B20.c: 181: write_Byte(0xBE);
  1296  0076F0  0EBE               	movlw	190
  1297  0076F2  EC5B  F039         	call	_write_Byte
  1298                           
  1299                           ;DS18B20.c: 182: templ= read_Byte();
  1300  0076F6  ECE7  F039         	call	_read_Byte	;wreg free
  1301  0076FA  6E24               	movwf	read_temp@templ,c
  1302                           
  1303                           ;DS18B20.c: 183: temph=read_Byte();
  1304  0076FC  ECE7  F039         	call	_read_Byte	;wreg free
  1305  007700  6E25               	movwf	read_temp@temph,c
  1306                           
  1307                           ;DS18B20.c: 184: temp=temph;
  1308  007702  C025  F026         	movff	read_temp@temph,read_temp@temp
  1309  007706  6A27               	clrf	read_temp@temp+1,c
  1310                           
  1311                           ;DS18B20.c: 185: temp<<=8;
  1312  007708  5026               	movf	read_temp@temp,w,c
  1313  00770A  6E27               	movwf	read_temp@temp+1,c
  1314  00770C  6A26               	clrf	read_temp@temp,c
  1315                           
  1316                           ;DS18B20.c: 186: temp|=templ;
  1317  00770E  5024               	movf	read_temp@templ,w,c
  1318  007710  1226               	iorwf	read_temp@temp,f,c
  1319                           
  1320                           ;DS18B20.c: 187: temperature=temp*0.0625;
  1321  007712  C026  F009         	movff	read_temp@temp,___awtoft@c
  1322  007716  C027  F00A         	movff	read_temp@temp+1,___awtoft@c+1
  1323  00771A  ECC9  F039         	call	___awtoft	;wreg free
  1324  00771E  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1325  007722  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1326  007726  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1327  00772A  0E00               	movlw	0
  1328  00772C  6E10               	movwf	___ftmul@f2,c
  1329  00772E  0E80               	movlw	128
  1330  007730  6E11               	movwf	___ftmul@f2+1,c
  1331  007732  0E3D               	movlw	61
  1332  007734  6E12               	movwf	___ftmul@f2+2,c
  1333  007736  EC20  F03D         	call	___ftmul	;wreg free
  1334  00773A  C00D  F021         	movff	?___ftmul,read_temp@temperature
  1335  00773E  C00E  F022         	movff	?___ftmul+1,read_temp@temperature+1
  1336  007742  C00F  F023         	movff	?___ftmul+2,read_temp@temperature+2
  1337                           
  1338                           ;DS18B20.c: 188: return temperature;
  1339  007746  C021  F01C         	movff	read_temp@temperature,?_read_temp
  1340  00774A  C022  F01D         	movff	read_temp@temperature+1,?_read_temp+1
  1341  00774E  C023  F01E         	movff	read_temp@temperature+2,?_read_temp+2
  1342  007752  D000               	goto	l118
  1343  007754                     l118:
  1344  007754  0012               	return		;funcret
  1345  007756                     __end_of_read_temp:
  1346                           	opt stack 0
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           intcon	equ	0xFF2
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           indf1	equ	0xFE7
  1355                           postdec1	equ	0xFE5
  1356                           fsr1h	equ	0xFE2
  1357                           fsr1l	equ	0xFE1
  1358                           indf2	equ	0xFDF
  1359                           fsr2h	equ	0xFDA
  1360                           fsr2l	equ	0xFD9
  1361                           status	equ	0xFD8
  1362                           
  1363 ;; *************** function _read_Byte *****************
  1364 ;; Defined at:
  1365 ;;		line 68 in file "DS18B20/DS18B20.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  i               2    2[COMRAM] int 
  1370 ;;  data            1    1[COMRAM] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      unsigned char 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0
  1381 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1383 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1384 ;;Total ram usage:        3 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		_read_Bit
  1389 ;; This function is called by:
  1390 ;;		_read_temp
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text4
  1395  0073CE                     __ptext4:
  1396                           	opt stack 0
  1397  0073CE                     _read_Byte:
  1398                           	opt stack 28
  1399                           
  1400                           ;DS18B20.c: 70: unsigned char data=0;
  1401                           
  1402                           ;incstack = 0
  1403  0073CE  0E00               	movlw	0
  1404  0073D0  6E02               	movwf	read_Byte@data,c
  1405                           
  1406                           ;DS18B20.c: 71: for (int i=0;i<8;i++)
  1407  0073D2  0E00               	movlw	0
  1408  0073D4  6E04               	movwf	read_Byte@i+1,c
  1409  0073D6  0E00               	movlw	0
  1410  0073D8  6E03               	movwf	read_Byte@i,c
  1411  0073DA                     l1676:
  1412  0073DA  BE04               	btfsc	read_Byte@i+1,7,c
  1413  0073DC  D008               	goto	l1680
  1414  0073DE  5004               	movf	read_Byte@i+1,w,c
  1415  0073E0  E111               	bnz	l1688
  1416  0073E2  0E08               	movlw	8
  1417  0073E4  5C03               	subwf	read_Byte@i,w,c
  1418  0073E6  B0D8               	btfsc	status,0,c
  1419  0073E8  D00D               	goto	l1688
  1420  0073EA  D001               	goto	l1680
  1421  0073EC  D00B               	goto	l1688
  1422  0073EE                     l1680:
  1423                           
  1424                           ;DS18B20.c: 72: {
  1425                           ;DS18B20.c: 73: data>>=1;
  1426  0073EE  90D8               	bcf	status,0,c
  1427  0073F0  3202               	rrcf	read_Byte@data,f,c
  1428                           
  1429                           ;DS18B20.c: 74: if(read_Bit())
  1430  0073F2  EC29  F039         	call	_read_Bit	;wreg free
  1431  0073F6  0900               	iorlw	0
  1432  0073F8  A4D8               	btfss	status,2,c
  1433                           
  1434                           ;DS18B20.c: 75: {
  1435                           ;DS18B20.c: 76: data|=0x80;
  1436  0073FA  8E02               	bsf	read_Byte@data,7,c
  1437  0073FC  4A03               	infsnz	read_Byte@i,f,c
  1438  0073FE  2A04               	incf	read_Byte@i+1,f,c
  1439  007400  D7EC               	goto	l1676
  1440  007402  D000               	goto	l1688
  1441  007404                     l1688:
  1442                           
  1443                           ;DS18B20.c: 77: }
  1444                           ;DS18B20.c: 78: }
  1445                           ;DS18B20.c: 79: return data;
  1446  007404  5002               	movf	read_Byte@data,w,c
  1447  007406  D000               	goto	l87
  1448  007408                     l87:
  1449  007408  0012               	return		;funcret
  1450  00740A                     __end_of_read_Byte:
  1451                           	opt stack 0
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           intcon	equ	0xFF2
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           indf1	equ	0xFE7
  1460                           postdec1	equ	0xFE5
  1461                           fsr1h	equ	0xFE2
  1462                           fsr1l	equ	0xFE1
  1463                           indf2	equ	0xFDF
  1464                           fsr2h	equ	0xFDA
  1465                           fsr2l	equ	0xFD9
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _read_Bit *****************
  1469 ;; Defined at:
  1470 ;;		line 52 in file "DS18B20/DS18B20.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  result          1    0[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      unsigned char 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:        1 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_read_Byte
  1494 ;;		_search_Devices
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text5
  1499  007252                     __ptext5:
  1500                           	opt stack 0
  1501  007252                     _read_Bit:
  1502                           	opt stack 29
  1503                           
  1504                           ;DS18B20.c: 54: unsigned char result = 0x00;
  1505                           
  1506                           ;incstack = 0
  1507  007252  0E00               	movlw	0
  1508  007254  6E01               	movwf	read_Bit@result,c
  1509                           
  1510                           ;DS18B20.c: 56: TRISA0=0;
  1511  007256  9092               	bcf	3986,0,c	;volatile
  1512                           
  1513                           ;DS18B20.c: 57: LATA0=0;
  1514  007258  9089               	bcf	3977,0,c	;volatile
  1515                           
  1516                           ;DS18B20.c: 58: _delay((unsigned long)((6)*(20000000/4000000.0)));
  1517  00725A  0E0A               	movlw	10
  1518  00725C                     u1297:
  1519  00725C  2EE8               	decfsz	wreg,f,c
  1520  00725E  D7FE               	goto	u1297
  1521                           
  1522                           ;DS18B20.c: 59: TRISA0=0;
  1523  007260  9092               	bcf	3986,0,c	;volatile
  1524                           
  1525                           ;DS18B20.c: 60: LATA0=1;
  1526  007262  8089               	bsf	3977,0,c	;volatile
  1527                           
  1528                           ;DS18B20.c: 61: _delay((unsigned long)((9)*(20000000/4000000.0)));
  1529  007264  0E0F               	movlw	15
  1530  007266                     u1307:
  1531  007266  2EE8               	decfsz	wreg,f,c
  1532  007268  D7FE               	goto	u1307
  1533                           
  1534                           ;DS18B20.c: 62: TRISA0=1;
  1535  00726A  8092               	bsf	3986,0,c	;volatile
  1536                           
  1537                           ;DS18B20.c: 63: result= RA0;
  1538  00726C  0E00               	movlw	0
  1539  00726E  B080               	btfsc	3968,0,c	;volatile
  1540  007270  0E01               	movlw	1
  1541  007272  6E01               	movwf	read_Bit@result,c
  1542                           
  1543                           ;DS18B20.c: 64: _delay((unsigned long)((55)*(20000000/4000000.0)));
  1544  007274  0E5B               	movlw	91
  1545  007276                     u1317:
  1546  007276  2EE8               	decfsz	wreg,f,c
  1547  007278  D7FE               	goto	u1317
  1548  00727A  D000               	nop2		;nop
  1549                           
  1550                           ;DS18B20.c: 65: return result;
  1551  00727C  5001               	movf	read_Bit@result,w,c
  1552  00727E  D000               	goto	l81
  1553  007280                     l81:
  1554  007280  0012               	return		;funcret
  1555  007282                     __end_of_read_Bit:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           intcon	equ	0xFF2
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           indf1	equ	0xFE7
  1565                           postdec1	equ	0xFE5
  1566                           fsr1h	equ	0xFE2
  1567                           fsr1l	equ	0xFE1
  1568                           indf2	equ	0xFDF
  1569                           fsr2h	equ	0xFDA
  1570                           fsr2l	equ	0xFD9
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _delay750ms *****************
  1574 ;; Defined at:
  1575 ;;		line 214 in file "DS18B20/DS18B20.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    1
  1596 ;; This function calls:
  1597 ;;		_delay100ms
  1598 ;;		_delay50ms
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;;		_read_temp
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text6
  1606  007230                     __ptext6:
  1607                           	opt stack 0
  1608  007230                     _delay750ms:
  1609                           	opt stack 28
  1610                           
  1611                           ;DS18B20.c: 216: delay100ms();
  1612                           
  1613                           ;incstack = 0
  1614  007230  ECAB  F03B         	call	_delay100ms	;wreg free
  1615                           
  1616                           ;DS18B20.c: 217: delay100ms();
  1617  007234  ECAB  F03B         	call	_delay100ms	;wreg free
  1618                           
  1619                           ;DS18B20.c: 218: delay100ms();
  1620  007238  ECAB  F03B         	call	_delay100ms	;wreg free
  1621                           
  1622                           ;DS18B20.c: 219: delay100ms();
  1623  00723C  ECAB  F03B         	call	_delay100ms	;wreg free
  1624                           
  1625                           ;DS18B20.c: 220: delay100ms();
  1626  007240  ECAB  F03B         	call	_delay100ms	;wreg free
  1627                           
  1628                           ;DS18B20.c: 221: delay100ms();
  1629  007244  ECAB  F03B         	call	_delay100ms	;wreg free
  1630                           
  1631                           ;DS18B20.c: 222: delay100ms();
  1632  007248  ECAB  F03B         	call	_delay100ms	;wreg free
  1633                           
  1634                           ;DS18B20.c: 223: delay50ms();
  1635  00724C  EC4C  F03A         	call	_delay50ms	;wreg free
  1636  007250  0012               	return		;funcret
  1637  007252                     __end_of_delay750ms:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           indf1	equ	0xFE7
  1647                           postdec1	equ	0xFE5
  1648                           fsr1h	equ	0xFE2
  1649                           fsr1l	equ	0xFE1
  1650                           indf2	equ	0xFDF
  1651                           fsr2h	equ	0xFDA
  1652                           fsr2l	equ	0xFD9
  1653                           status	equ	0xFD8
  1654                           
  1655 ;; *************** function _delay50ms *****************
  1656 ;; Defined at:
  1657 ;;		line 205 in file "DS18B20/DS18B20.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;		None               void
  1664 ;; Registers used:
  1665 ;;		wreg
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1674 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1675 ;;Total ram usage:        1 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;;		_delay750ms
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text7
  1686  007498                     __ptext7:
  1687                           	opt stack 0
  1688  007498                     _delay50ms:
  1689                           	opt stack 28
  1690                           
  1691                           ;DS18B20.c: 207: _delay((unsigned long)((10)*(20000000/4000.0)));
  1692                           
  1693                           ;incstack = 0
  1694  007498  0E41               	movlw	65
  1695  00749A  6E01               	movwf	??_delay50ms& (0+255),c
  1696  00749C  0EEE               	movlw	238
  1697  00749E                     u1327:
  1698  00749E  2EE8               	decfsz	wreg,f,c
  1699  0074A0  D7FE               	goto	u1327
  1700  0074A2  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1701  0074A4  D7FC               	goto	u1327
  1702  0074A6  D000               	nop2	
  1703                           
  1704                           ;DS18B20.c: 208: _delay((unsigned long)((10)*(20000000/4000.0)));
  1705  0074A8  0E41               	movlw	65
  1706  0074AA  6E01               	movwf	??_delay50ms& (0+255),c
  1707  0074AC  0EEE               	movlw	238
  1708  0074AE                     u1337:
  1709  0074AE  2EE8               	decfsz	wreg,f,c
  1710  0074B0  D7FE               	goto	u1337
  1711  0074B2  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1712  0074B4  D7FC               	goto	u1337
  1713  0074B6  D000               	nop2	
  1714                           
  1715                           ;DS18B20.c: 209: _delay((unsigned long)((10)*(20000000/4000.0)));
  1716  0074B8  0E41               	movlw	65
  1717  0074BA  6E01               	movwf	??_delay50ms& (0+255),c
  1718  0074BC  0EEE               	movlw	238
  1719  0074BE                     u1347:
  1720  0074BE  2EE8               	decfsz	wreg,f,c
  1721  0074C0  D7FE               	goto	u1347
  1722  0074C2  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1723  0074C4  D7FC               	goto	u1347
  1724  0074C6  D000               	nop2	
  1725                           
  1726                           ;DS18B20.c: 210: _delay((unsigned long)((10)*(20000000/4000.0)));
  1727  0074C8  0E41               	movlw	65
  1728  0074CA  6E01               	movwf	??_delay50ms& (0+255),c
  1729  0074CC  0EEE               	movlw	238
  1730  0074CE                     u1357:
  1731  0074CE  2EE8               	decfsz	wreg,f,c
  1732  0074D0  D7FE               	goto	u1357
  1733  0074D2  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1734  0074D4  D7FC               	goto	u1357
  1735  0074D6  D000               	nop2	
  1736                           
  1737                           ;DS18B20.c: 211: _delay((unsigned long)((10)*(20000000/4000.0)));
  1738  0074D8  0E41               	movlw	65
  1739  0074DA  6E01               	movwf	??_delay50ms& (0+255),c
  1740  0074DC  0EEE               	movlw	238
  1741  0074DE                     u1367:
  1742  0074DE  2EE8               	decfsz	wreg,f,c
  1743  0074E0  D7FE               	goto	u1367
  1744  0074E2  2E01               	decfsz	??_delay50ms& (0+255),f,c
  1745  0074E4  D7FC               	goto	u1367
  1746  0074E6  D000               	nop2	
  1747  0074E8  0012               	return		;funcret
  1748  0074EA                     __end_of_delay50ms:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           intcon	equ	0xFF2
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           indf1	equ	0xFE7
  1758                           postdec1	equ	0xFE5
  1759                           fsr1h	equ	0xFE2
  1760                           fsr1l	equ	0xFE1
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _delay100ms *****************
  1767 ;; Defined at:
  1768 ;;		line 191 in file "DS18B20/DS18B20.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;		None               void
  1775 ;; Registers used:
  1776 ;;		wreg
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        1 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_delay750ms
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text8
  1796  007756                     __ptext8:
  1797                           	opt stack 0
  1798  007756                     _delay100ms:
  1799                           	opt stack 28
  1800                           
  1801                           ;DS18B20.c: 193: _delay((unsigned long)((10)*(20000000/4000.0)));
  1802                           
  1803                           ;incstack = 0
  1804  007756  0E41               	movlw	65
  1805  007758  6E01               	movwf	??_delay100ms& (0+255),c
  1806  00775A  0EEE               	movlw	238
  1807  00775C                     u1377:
  1808  00775C  2EE8               	decfsz	wreg,f,c
  1809  00775E  D7FE               	goto	u1377
  1810  007760  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1811  007762  D7FC               	goto	u1377
  1812  007764  D000               	nop2	
  1813                           
  1814                           ;DS18B20.c: 194: _delay((unsigned long)((10)*(20000000/4000.0)));
  1815  007766  0E41               	movlw	65
  1816  007768  6E01               	movwf	??_delay100ms& (0+255),c
  1817  00776A  0EEE               	movlw	238
  1818  00776C                     u1387:
  1819  00776C  2EE8               	decfsz	wreg,f,c
  1820  00776E  D7FE               	goto	u1387
  1821  007770  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1822  007772  D7FC               	goto	u1387
  1823  007774  D000               	nop2	
  1824                           
  1825                           ;DS18B20.c: 195: _delay((unsigned long)((10)*(20000000/4000.0)));
  1826  007776  0E41               	movlw	65
  1827  007778  6E01               	movwf	??_delay100ms& (0+255),c
  1828  00777A  0EEE               	movlw	238
  1829  00777C                     u1397:
  1830  00777C  2EE8               	decfsz	wreg,f,c
  1831  00777E  D7FE               	goto	u1397
  1832  007780  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1833  007782  D7FC               	goto	u1397
  1834  007784  D000               	nop2	
  1835                           
  1836                           ;DS18B20.c: 196: _delay((unsigned long)((10)*(20000000/4000.0)));
  1837  007786  0E41               	movlw	65
  1838  007788  6E01               	movwf	??_delay100ms& (0+255),c
  1839  00778A  0EEE               	movlw	238
  1840  00778C                     u1407:
  1841  00778C  2EE8               	decfsz	wreg,f,c
  1842  00778E  D7FE               	goto	u1407
  1843  007790  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1844  007792  D7FC               	goto	u1407
  1845  007794  D000               	nop2	
  1846                           
  1847                           ;DS18B20.c: 197: _delay((unsigned long)((10)*(20000000/4000.0)));
  1848  007796  0E41               	movlw	65
  1849  007798  6E01               	movwf	??_delay100ms& (0+255),c
  1850  00779A  0EEE               	movlw	238
  1851  00779C                     u1417:
  1852  00779C  2EE8               	decfsz	wreg,f,c
  1853  00779E  D7FE               	goto	u1417
  1854  0077A0  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1855  0077A2  D7FC               	goto	u1417
  1856  0077A4  D000               	nop2	
  1857                           
  1858                           ;DS18B20.c: 198: _delay((unsigned long)((10)*(20000000/4000.0)));
  1859  0077A6  0E41               	movlw	65
  1860  0077A8  6E01               	movwf	??_delay100ms& (0+255),c
  1861  0077AA  0EEE               	movlw	238
  1862  0077AC                     u1427:
  1863  0077AC  2EE8               	decfsz	wreg,f,c
  1864  0077AE  D7FE               	goto	u1427
  1865  0077B0  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1866  0077B2  D7FC               	goto	u1427
  1867  0077B4  D000               	nop2	
  1868                           
  1869                           ;DS18B20.c: 199: _delay((unsigned long)((10)*(20000000/4000.0)));
  1870  0077B6  0E41               	movlw	65
  1871  0077B8  6E01               	movwf	??_delay100ms& (0+255),c
  1872  0077BA  0EEE               	movlw	238
  1873  0077BC                     u1437:
  1874  0077BC  2EE8               	decfsz	wreg,f,c
  1875  0077BE  D7FE               	goto	u1437
  1876  0077C0  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1877  0077C2  D7FC               	goto	u1437
  1878  0077C4  D000               	nop2	
  1879                           
  1880                           ;DS18B20.c: 200: _delay((unsigned long)((10)*(20000000/4000.0)));
  1881  0077C6  0E41               	movlw	65
  1882  0077C8  6E01               	movwf	??_delay100ms& (0+255),c
  1883  0077CA  0EEE               	movlw	238
  1884  0077CC                     u1447:
  1885  0077CC  2EE8               	decfsz	wreg,f,c
  1886  0077CE  D7FE               	goto	u1447
  1887  0077D0  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1888  0077D2  D7FC               	goto	u1447
  1889  0077D4  D000               	nop2	
  1890                           
  1891                           ;DS18B20.c: 201: _delay((unsigned long)((10)*(20000000/4000.0)));
  1892  0077D6  0E41               	movlw	65
  1893  0077D8  6E01               	movwf	??_delay100ms& (0+255),c
  1894  0077DA  0EEE               	movlw	238
  1895  0077DC                     u1457:
  1896  0077DC  2EE8               	decfsz	wreg,f,c
  1897  0077DE  D7FE               	goto	u1457
  1898  0077E0  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1899  0077E2  D7FC               	goto	u1457
  1900  0077E4  D000               	nop2	
  1901                           
  1902                           ;DS18B20.c: 202: _delay((unsigned long)((10)*(20000000/4000.0)));
  1903  0077E6  0E41               	movlw	65
  1904  0077E8  6E01               	movwf	??_delay100ms& (0+255),c
  1905  0077EA  0EEE               	movlw	238
  1906  0077EC                     u1467:
  1907  0077EC  2EE8               	decfsz	wreg,f,c
  1908  0077EE  D7FE               	goto	u1467
  1909  0077F0  2E01               	decfsz	??_delay100ms& (0+255),f,c
  1910  0077F2  D7FC               	goto	u1467
  1911  0077F4  D000               	nop2	
  1912  0077F6  0012               	return		;funcret
  1913  0077F8                     __end_of_delay100ms:
  1914                           	opt stack 0
  1915                           tblptru	equ	0xFF8
  1916                           tblptrh	equ	0xFF7
  1917                           tblptrl	equ	0xFF6
  1918                           tablat	equ	0xFF5
  1919                           intcon	equ	0xFF2
  1920                           postinc0	equ	0xFEE
  1921                           wreg	equ	0xFE8
  1922                           indf1	equ	0xFE7
  1923                           postdec1	equ	0xFE5
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           indf2	equ	0xFDF
  1927                           fsr2h	equ	0xFDA
  1928                           fsr2l	equ	0xFD9
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function _address_Device *****************
  1932 ;; Defined at:
  1933 ;;		line 82 in file "DS18B20/DS18B20.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  Adress          2    4[COMRAM] PTR unsigned char 
  1936 ;;		 -> RAM(2047), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  i               2    6[COMRAM] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      unsigned char 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1948 ;;      Params:         2       0       0       0       0       0       0       0       0
  1949 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1951 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1952 ;;Total ram usage:        4 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    2
  1955 ;; This function calls:
  1956 ;;		_init_sensor
  1957 ;;		_write_Byte
  1958 ;; This function is called by:
  1959 ;;		_read_temp
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text9
  1964  007450                     __ptext9:
  1965                           	opt stack 0
  1966  007450                     _address_Device:
  1967                           	opt stack 27
  1968                           
  1969                           ;DS18B20.c: 84: if( init_sensor()==0)
  1970                           
  1971                           ;incstack = 0
  1972  007450  EC05  F03A         	call	_init_sensor	;wreg free
  1973  007454  0900               	iorlw	0
  1974  007456  A4D8               	btfss	status,2,c
  1975  007458  D01E               	goto	l93
  1976                           
  1977                           ;DS18B20.c: 85: {
  1978                           ;DS18B20.c: 86: write_Byte(0x55);
  1979  00745A  0E55               	movlw	85
  1980  00745C  EC5B  F039         	call	_write_Byte
  1981                           
  1982                           ;DS18B20.c: 87: for(int i=0;i<8;i++)
  1983  007460  0E00               	movlw	0
  1984  007462  6E08               	movwf	address_Device@i+1,c
  1985  007464  0E00               	movlw	0
  1986  007466  6E07               	movwf	address_Device@i,c
  1987  007468                     l1698:
  1988  007468  BE08               	btfsc	address_Device@i+1,7,c
  1989  00746A  D008               	goto	l1702
  1990  00746C  5008               	movf	address_Device@i+1,w,c
  1991  00746E  E113               	bnz	l93
  1992  007470  0E08               	movlw	8
  1993  007472  5C07               	subwf	address_Device@i,w,c
  1994  007474  B0D8               	btfsc	status,0,c
  1995  007476  D00F               	goto	l93
  1996  007478  D001               	goto	l1702
  1997  00747A  D00D               	goto	l93
  1998  00747C                     l1702:
  1999                           
  2000                           ;DS18B20.c: 88: {
  2001                           ;DS18B20.c: 89: write_Byte(Adress[i]);
  2002  00747C  5007               	movf	address_Device@i,w,c
  2003  00747E  2405               	addwf	address_Device@Adress,w,c
  2004  007480  6ED9               	movwf	fsr2l,c
  2005  007482  5008               	movf	address_Device@i+1,w,c
  2006  007484  2006               	addwfc	address_Device@Adress+1,w,c
  2007  007486  6EDA               	movwf	fsr2h,c
  2008  007488  50DF               	movf	indf2,w,c
  2009  00748A  EC5B  F039         	call	_write_Byte
  2010  00748E  4A07               	infsnz	address_Device@i,f,c
  2011  007490  2A08               	incf	address_Device@i+1,f,c
  2012  007492  D7EA               	goto	l1698
  2013                           
  2014                           ;DS18B20.c: 93: {
  2015                           ;DS18B20.c: 94: return 0;
  2016                           ;	Return value of _address_Device is never used
  2017                           
  2018                           ;DS18B20.c: 92: }else
  2019                           
  2020                           ;DS18B20.c: 90: }
  2021                           ;DS18B20.c: 91: return 1;
  2022                           ;	Return value of _address_Device is never used
  2023  007494  D000               	goto	l93
  2024  007496                     l93:
  2025  007496  0012               	return		;funcret
  2026  007498                     __end_of_address_Device:
  2027                           	opt stack 0
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           intcon	equ	0xFF2
  2033                           postinc0	equ	0xFEE
  2034                           wreg	equ	0xFE8
  2035                           indf1	equ	0xFE7
  2036                           postdec1	equ	0xFE5
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           indf2	equ	0xFDF
  2040                           fsr2h	equ	0xFDA
  2041                           fsr2l	equ	0xFD9
  2042                           status	equ	0xFD8
  2043                           
  2044 ;; *************** function _write_Byte *****************
  2045 ;; Defined at:
  2046 ;;		line 43 in file "DS18B20/DS18B20.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  data            1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  data            1    1[COMRAM] unsigned char 
  2051 ;;  i               2    2[COMRAM] int 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;		None               void
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2064 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2065 ;;Total ram usage:        3 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    1
  2068 ;; This function calls:
  2069 ;;		_write_Bit
  2070 ;; This function is called by:
  2071 ;;		_address_Device
  2072 ;;		_search_Devices
  2073 ;;		_read_temp
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text10
  2078  0072B6                     __ptext10:
  2079                           	opt stack 0
  2080  0072B6                     _write_Byte:
  2081                           	opt stack 28
  2082                           
  2083                           ;incstack = 0
  2084                           ;write_Byte@data stored from wreg
  2085  0072B6  6E02               	movwf	write_Byte@data,c
  2086                           
  2087                           ;DS18B20.c: 45: for(int i=0;i<8;i++)
  2088  0072B8  0E00               	movlw	0
  2089  0072BA  6E04               	movwf	write_Byte@i+1,c
  2090  0072BC  0E00               	movlw	0
  2091  0072BE  6E03               	movwf	write_Byte@i,c
  2092  0072C0                     l1594:
  2093  0072C0  BE04               	btfsc	write_Byte@i+1,7,c
  2094  0072C2  D008               	goto	l1598
  2095  0072C4  5004               	movf	write_Byte@i+1,w,c
  2096  0072C6  E110               	bnz	l78
  2097  0072C8  0E08               	movlw	8
  2098  0072CA  5C03               	subwf	write_Byte@i,w,c
  2099  0072CC  B0D8               	btfsc	status,0,c
  2100  0072CE  D00C               	goto	l78
  2101  0072D0  D001               	goto	l1598
  2102  0072D2  D00A               	goto	l78
  2103  0072D4                     l1598:
  2104                           
  2105                           ;DS18B20.c: 46: {
  2106                           ;DS18B20.c: 47: write_Bit(data & 0x01);
  2107  0072D4  5002               	movf	write_Byte@data,w,c
  2108  0072D6  0B01               	andlw	1
  2109  0072D8  EC90  F039         	call	_write_Bit
  2110                           
  2111                           ;DS18B20.c: 48: data>>=1;
  2112  0072DC  90D8               	bcf	status,0,c
  2113  0072DE  3202               	rrcf	write_Byte@data,f,c
  2114  0072E0  4A03               	infsnz	write_Byte@i,f,c
  2115  0072E2  2A04               	incf	write_Byte@i+1,f,c
  2116  0072E4  D7ED               	goto	l1594
  2117  0072E6  D000               	goto	l78
  2118  0072E8                     l78:
  2119  0072E8  0012               	return		;funcret
  2120  0072EA                     __end_of_write_Byte:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           intcon	equ	0xFF2
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           indf1	equ	0xFE7
  2130                           postdec1	equ	0xFE5
  2131                           fsr1h	equ	0xFE2
  2132                           fsr1l	equ	0xFE1
  2133                           indf2	equ	0xFDF
  2134                           fsr2h	equ	0xFDA
  2135                           fsr2l	equ	0xFD9
  2136                           status	equ	0xFD8
  2137                           
  2138 ;; *************** function _write_Bit *****************
  2139 ;; Defined at:
  2140 ;;		line 21 in file "DS18B20/DS18B20.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  WriteArg        1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  WriteArg        1    0[COMRAM] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;		None               void
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2154 ;;      Params:         0       0       0       0       0       0       0       0       0
  2155 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2157 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2158 ;;Total ram usage:        1 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_write_Byte
  2164 ;;		_search_Devices
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text11
  2169  007320                     __ptext11:
  2170                           	opt stack 0
  2171  007320                     _write_Bit:
  2172                           	opt stack 28
  2173                           
  2174                           ;incstack = 0
  2175                           ;write_Bit@WriteArg stored from wreg
  2176  007320  6E01               	movwf	write_Bit@WriteArg,c
  2177                           
  2178                           ;DS18B20.c: 23: if (WriteArg==1)
  2179  007322  0401               	decf	write_Bit@WriteArg,w,c
  2180  007324  A4D8               	btfss	status,2,c
  2181  007326  D00B               	goto	l71
  2182                           
  2183                           ;DS18B20.c: 24: {
  2184                           ;DS18B20.c: 25: TRISA0=0;
  2185  007328  9092               	bcf	3986,0,c	;volatile
  2186                           
  2187                           ;DS18B20.c: 26: LATA0=0;
  2188  00732A  9089               	bcf	3977,0,c	;volatile
  2189                           
  2190                           ;DS18B20.c: 27: _delay((unsigned long)((6)*(20000000/4000000.0)));
  2191  00732C  0E0A               	movlw	10
  2192  00732E                     u1477:
  2193  00732E  2EE8               	decfsz	wreg,f,c
  2194  007330  D7FE               	goto	u1477
  2195                           
  2196                           ;DS18B20.c: 28: TRISA0=0;
  2197  007332  9092               	bcf	3986,0,c	;volatile
  2198                           
  2199                           ;DS18B20.c: 29: LATA0=1;
  2200  007334  8089               	bsf	3977,0,c	;volatile
  2201                           
  2202                           ;DS18B20.c: 30: _delay((unsigned long)((64)*(20000000/4000000.0)));
  2203  007336  0E6A               	movlw	106
  2204  007338                     u1487:
  2205  007338  2EE8               	decfsz	wreg,f,c
  2206  00733A  D7FE               	goto	u1487
  2207  00733C  D00A               	goto	L3
  2208  00733E                     l71:
  2209                           
  2210                           ;DS18B20.c: 32: else
  2211                           ;DS18B20.c: 33: {
  2212                           ;DS18B20.c: 34: TRISA0=0;
  2213  00733E  9092               	bcf	3986,0,c	;volatile
  2214                           
  2215                           ;DS18B20.c: 35: LATA0=0;
  2216  007340  9089               	bcf	3977,0,c	;volatile
  2217                           
  2218                           ;DS18B20.c: 36: _delay((unsigned long)((60)*(20000000/4000000.0)));
  2219  007342  0E64               	movlw	100
  2220  007344                     u1497:
  2221  007344  2EE8               	decfsz	wreg,f,c
  2222  007346  D7FE               	goto	u1497
  2223                           
  2224                           ;DS18B20.c: 37: TRISA0=0;
  2225  007348  9092               	bcf	3986,0,c	;volatile
  2226                           
  2227                           ;DS18B20.c: 38: LATA0=1;
  2228  00734A  8089               	bsf	3977,0,c	;volatile
  2229                           
  2230                           ;DS18B20.c: 39: _delay((unsigned long)((10)*(20000000/4000000.0)));
  2231  00734C  0E10               	movlw	16
  2232  00734E                     u1507:
  2233  00734E  2EE8               	decfsz	wreg,f,c
  2234  007350  D7FE               	goto	u1507
  2235  007352                     L3:
  2236  007352  D000               	nop2		;nop
  2237  007354  D000               	goto	l73
  2238  007356                     l73:
  2239  007356  0012               	return		;funcret
  2240  007358                     __end_of_write_Bit:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           intcon	equ	0xFF2
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           indf1	equ	0xFE7
  2250                           postdec1	equ	0xFE5
  2251                           fsr1h	equ	0xFE2
  2252                           fsr1l	equ	0xFE1
  2253                           indf2	equ	0xFDF
  2254                           fsr2h	equ	0xFDA
  2255                           fsr2l	equ	0xFD9
  2256                           status	equ	0xFD8
  2257                           
  2258 ;; *************** function _init_sensor *****************
  2259 ;; Defined at:
  2260 ;;		line 5 in file "DS18B20/DS18B20.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  reponse         1    1[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2277 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;;		_address_Device
  2285 ;;		_search_Devices
  2286 ;;		_read_temp
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text12
  2291  00740A                     __ptext12:
  2292                           	opt stack 0
  2293  00740A                     _init_sensor:
  2294                           	opt stack 29
  2295                           
  2296                           ;DS18B20.c: 7: unsigned char reponse=1;
  2297                           
  2298                           ;incstack = 0
  2299  00740A  0E01               	movlw	1
  2300  00740C  6E02               	movwf	init_sensor@reponse,c
  2301                           
  2302                           ;DS18B20.c: 8: TRISA0=0;
  2303  00740E  9092               	bcf	3986,0,c	;volatile
  2304                           
  2305                           ;DS18B20.c: 9: LATA0=0;
  2306  007410  9089               	bcf	3977,0,c	;volatile
  2307                           
  2308                           ;DS18B20.c: 10: _delay((unsigned long)((480)*(20000000/4000000.0)));
  2309  007412  0E04               	movlw	4
  2310  007414  6E01               	movwf	??_init_sensor& (0+255),c
  2311  007416  0E1C               	movlw	28
  2312  007418                     u1517:
  2313  007418  2EE8               	decfsz	wreg,f,c
  2314  00741A  D7FE               	goto	u1517
  2315  00741C  2E01               	decfsz	??_init_sensor& (0+255),f,c
  2316  00741E  D7FC               	goto	u1517
  2317  007420  D000               	nop2	
  2318                           
  2319                           ;DS18B20.c: 11: LATA0=1;
  2320  007422  8089               	bsf	3977,0,c	;volatile
  2321                           
  2322                           ;DS18B20.c: 12: _delay((unsigned long)((64)*(20000000/4000000.0)));
  2323  007424  0E6A               	movlw	106
  2324  007426                     u1527:
  2325  007426  2EE8               	decfsz	wreg,f,c
  2326  007428  D7FE               	goto	u1527
  2327  00742A  D000               	nop2		;nop
  2328                           
  2329                           ;DS18B20.c: 13: TRISA0=1;
  2330  00742C  8092               	bsf	3986,0,c	;volatile
  2331                           
  2332                           ;DS18B20.c: 14: reponse= RA0;
  2333  00742E  0E00               	movlw	0
  2334  007430  B080               	btfsc	3968,0,c	;volatile
  2335  007432  0E01               	movlw	1
  2336  007434  6E02               	movwf	init_sensor@reponse,c
  2337                           
  2338                           ;DS18B20.c: 15: _delay((unsigned long)((416)*(20000000/4000000.0)));
  2339  007436  0E03               	movlw	3
  2340  007438  6E01               	movwf	??_init_sensor& (0+255),c
  2341  00743A  0EB2               	movlw	178
  2342  00743C                     u1537:
  2343  00743C  2EE8               	decfsz	wreg,f,c
  2344  00743E  D7FE               	goto	u1537
  2345  007440  2E01               	decfsz	??_init_sensor& (0+255),f,c
  2346  007442  D7FC               	goto	u1537
  2347  007444  D000               	nop2	
  2348                           
  2349                           ;DS18B20.c: 16: TRISA0=0;
  2350  007446  9092               	bcf	3986,0,c	;volatile
  2351                           
  2352                           ;DS18B20.c: 17: LATA0=1;
  2353  007448  8089               	bsf	3977,0,c	;volatile
  2354                           
  2355                           ;DS18B20.c: 18: return reponse;
  2356  00744A  5002               	movf	init_sensor@reponse,w,c
  2357  00744C  D000               	goto	l68
  2358  00744E                     l68:
  2359  00744E  0012               	return		;funcret
  2360  007450                     __end_of_init_sensor:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           intcon	equ	0xFF2
  2367                           postinc0	equ	0xFEE
  2368                           wreg	equ	0xFE8
  2369                           indf1	equ	0xFE7
  2370                           postdec1	equ	0xFE5
  2371                           fsr1h	equ	0xFE2
  2372                           fsr1l	equ	0xFE1
  2373                           indf2	equ	0xFDF
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function ___ftmul *****************
  2379 ;; Defined at:
  2380 ;;		line 62 in file "/Applications/microchip/xc8/v1.34/sources/common/ftmul.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  f1              3   12[COMRAM] float 
  2383 ;;  f2              3   15[COMRAM] float 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  2386 ;;  sign            1   26[COMRAM] unsigned char 
  2387 ;;  cntr            1   25[COMRAM] unsigned char 
  2388 ;;  exp             1   21[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  3   12[COMRAM] float 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2398 ;;      Params:         6       0       0       0       0       0       0       0       0
  2399 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2400 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2401 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2402 ;;Total ram usage:       15 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    1
  2405 ;; This function calls:
  2406 ;;		___ftpack
  2407 ;; This function is called by:
  2408 ;;		_read_temp
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text13
  2413  007A40                     __ptext13:
  2414                           	opt stack 0
  2415  007A40                     ___ftmul:
  2416                           	opt stack 28
  2417                           
  2418                           ;incstack = 0
  2419  007A40  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  2420  007A44  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2421  007A46  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2422  007A48  340E               	rlcf	___ftmul@f1+1,w,c
  2423  007A4A  3613               	rlcf	??___ftmul& (0+255),f,c
  2424  007A4C  E301               	bnc	u861
  2425  007A4E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2426  007A50                     u861:
  2427  007A50  5013               	movf	??___ftmul,w,c
  2428  007A52  6E16               	movwf	___ftmul@exp,c
  2429  007A54  5016               	movf	___ftmul@exp,w,c
  2430  007A56  A4D8               	btfss	status,2,c
  2431  007A58  D002               	goto	l1784
  2432  007A5A  D00E               	goto	l1786
  2433  007A5C  D06C               	goto	l654
  2434  007A5E                     l1784:
  2435  007A5E  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  2436  007A62  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2437  007A64  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2438  007A66  3411               	rlcf	___ftmul@f2+1,w,c
  2439  007A68  3613               	rlcf	??___ftmul& (0+255),f,c
  2440  007A6A  E301               	bnc	u881
  2441  007A6C  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2442  007A6E                     u881:
  2443  007A6E  5013               	movf	??___ftmul,w,c
  2444  007A70  6E1B               	movwf	___ftmul@sign,c
  2445  007A72  501B               	movf	___ftmul@sign,w,c
  2446  007A74  A4D8               	btfss	status,2,c
  2447  007A76  D007               	goto	l1790
  2448  007A78                     l1786:
  2449  007A78  0E00               	movlw	0
  2450  007A7A  6E0D               	movwf	?___ftmul,c
  2451  007A7C  0E00               	movlw	0
  2452  007A7E  6E0E               	movwf	?___ftmul+1,c
  2453  007A80  0E00               	movlw	0
  2454  007A82  6E0F               	movwf	?___ftmul+2,c
  2455  007A84  D058               	goto	l654
  2456  007A86                     l1790:
  2457  007A86  501B               	movf	___ftmul@sign,w,c
  2458  007A88  0F7B               	addlw	123
  2459  007A8A  2616               	addwf	___ftmul@exp,f,c
  2460  007A8C  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  2461  007A90  5012               	movf	___ftmul@f2+2,w,c
  2462  007A92  1A1B               	xorwf	___ftmul@sign,f,c
  2463  007A94  0E80               	movlw	128
  2464  007A96  161B               	andwf	___ftmul@sign,f,c
  2465  007A98  8E0E               	bsf	___ftmul@f1+1,7,c
  2466  007A9A  8E11               	bsf	___ftmul@f2+1,7,c
  2467  007A9C  0EFF               	movlw	255
  2468  007A9E  1610               	andwf	___ftmul@f2,f,c
  2469  007AA0  0EFF               	movlw	255
  2470  007AA2  1611               	andwf	___ftmul@f2+1,f,c
  2471  007AA4  0E00               	movlw	0
  2472  007AA6  1612               	andwf	___ftmul@f2+2,f,c
  2473  007AA8  0E00               	movlw	0
  2474  007AAA  6E17               	movwf	___ftmul@f3_as_product,c
  2475  007AAC  0E00               	movlw	0
  2476  007AAE  6E18               	movwf	___ftmul@f3_as_product+1,c
  2477  007AB0  0E00               	movlw	0
  2478  007AB2  6E19               	movwf	___ftmul@f3_as_product+2,c
  2479  007AB4  0E07               	movlw	7
  2480  007AB6  6E1A               	movwf	___ftmul@cntr,c
  2481  007AB8  D000               	goto	l1804
  2482  007ABA                     l1804:
  2483  007ABA  A00D               	btfss	___ftmul@f1,0,c
  2484  007ABC  D007               	goto	l1808
  2485  007ABE  5010               	movf	___ftmul@f2,w,c
  2486  007AC0  2617               	addwf	___ftmul@f3_as_product,f,c
  2487  007AC2  5011               	movf	___ftmul@f2+1,w,c
  2488  007AC4  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2489  007AC6  5012               	movf	___ftmul@f2+2,w,c
  2490  007AC8  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2491  007ACA  D000               	goto	l1808
  2492  007ACC                     l1808:
  2493  007ACC  90D8               	bcf	status,0,c
  2494  007ACE  320F               	rrcf	___ftmul@f1+2,f,c
  2495  007AD0  320E               	rrcf	___ftmul@f1+1,f,c
  2496  007AD2  320D               	rrcf	___ftmul@f1,f,c
  2497  007AD4  90D8               	bcf	status,0,c
  2498  007AD6  3610               	rlcf	___ftmul@f2,f,c
  2499  007AD8  3611               	rlcf	___ftmul@f2+1,f,c
  2500  007ADA  3612               	rlcf	___ftmul@f2+2,f,c
  2501  007ADC  2E1A               	decfsz	___ftmul@cntr,f,c
  2502  007ADE  D7ED               	goto	l1804
  2503  007AE0  D000               	goto	l1812
  2504  007AE2                     l1812:
  2505  007AE2  0E09               	movlw	9
  2506  007AE4  6E1A               	movwf	___ftmul@cntr,c
  2507  007AE6  D000               	goto	l1814
  2508  007AE8                     l1814:
  2509  007AE8  A00D               	btfss	___ftmul@f1,0,c
  2510  007AEA  D007               	goto	l1818
  2511  007AEC  5010               	movf	___ftmul@f2,w,c
  2512  007AEE  2617               	addwf	___ftmul@f3_as_product,f,c
  2513  007AF0  5011               	movf	___ftmul@f2+1,w,c
  2514  007AF2  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2515  007AF4  5012               	movf	___ftmul@f2+2,w,c
  2516  007AF6  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2517  007AF8  D000               	goto	l1818
  2518  007AFA                     l1818:
  2519  007AFA  90D8               	bcf	status,0,c
  2520  007AFC  320F               	rrcf	___ftmul@f1+2,f,c
  2521  007AFE  320E               	rrcf	___ftmul@f1+1,f,c
  2522  007B00  320D               	rrcf	___ftmul@f1,f,c
  2523  007B02  90D8               	bcf	status,0,c
  2524  007B04  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  2525  007B06  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  2526  007B08  3217               	rrcf	___ftmul@f3_as_product,f,c
  2527  007B0A  2E1A               	decfsz	___ftmul@cntr,f,c
  2528  007B0C  D7ED               	goto	l1814
  2529  007B0E  D000               	goto	l1822
  2530  007B10                     l1822:
  2531  007B10  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2532  007B14  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2533  007B18  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2534  007B1C  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2535  007B20  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2536  007B24  EC52  F03C         	call	___ftpack	;wreg free
  2537  007B28  C001  F00D         	movff	?___ftpack,?___ftmul
  2538  007B2C  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2539  007B30  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2540  007B34  D000               	goto	l654
  2541  007B36                     l654:
  2542  007B36  0012               	return		;funcret
  2543  007B38                     __end_of___ftmul:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           intcon	equ	0xFF2
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           indf1	equ	0xFE7
  2553                           postdec1	equ	0xFE5
  2554                           fsr1h	equ	0xFE2
  2555                           fsr1l	equ	0xFE1
  2556                           indf2	equ	0xFDF
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function ___awtoft *****************
  2562 ;; Defined at:
  2563 ;;		line 32 in file "/Applications/microchip/xc8/v1.34/sources/common/awtoft.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  c               2    8[COMRAM] int 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  sign            1   11[COMRAM] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  3    8[COMRAM] float 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2577 ;;      Params:         3       0       0       0       0       0       0       0       0
  2578 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2580 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2581 ;;Total ram usage:        4 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		___ftpack
  2586 ;; This function is called by:
  2587 ;;		_read_temp
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text14
  2592  007392                     __ptext14:
  2593                           	opt stack 0
  2594  007392                     ___awtoft:
  2595                           	opt stack 28
  2596                           
  2597                           ;incstack = 0
  2598  007392  0E00               	movlw	0
  2599  007394  6E0C               	movwf	___awtoft@sign,c
  2600  007396  AE0A               	btfss	___awtoft@c+1,7,c
  2601  007398  D007               	goto	l1878
  2602  00739A  6C09               	negf	___awtoft@c,c
  2603  00739C  1E0A               	comf	___awtoft@c+1,f,c
  2604  00739E  B0D8               	btfsc	status,0,c
  2605  0073A0  2A0A               	incf	___awtoft@c+1,f,c
  2606  0073A2  0E01               	movlw	1
  2607  0073A4  6E0C               	movwf	___awtoft@sign,c
  2608  0073A6  D000               	goto	l1878
  2609  0073A8                     l1878:
  2610  0073A8  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2611  0073AC  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2612  0073B0  6A03               	clrf	___ftpack@arg+2,c
  2613  0073B2  0E8E               	movlw	142
  2614  0073B4  6E04               	movwf	___ftpack@exp,c
  2615  0073B6  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2616  0073BA  EC52  F03C         	call	___ftpack	;wreg free
  2617  0073BE  C001  F009         	movff	?___ftpack,?___awtoft
  2618  0073C2  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2619  0073C6  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2620  0073CA  D000               	goto	l477
  2621  0073CC                     l477:
  2622  0073CC  0012               	return		;funcret
  2623  0073CE                     __end_of___awtoft:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           intcon	equ	0xFF2
  2630                           postinc0	equ	0xFEE
  2631                           wreg	equ	0xFE8
  2632                           indf1	equ	0xFE7
  2633                           postdec1	equ	0xFE5
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           indf2	equ	0xFDF
  2637                           fsr2h	equ	0xFDA
  2638                           fsr2l	equ	0xFD9
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function ___ftpack *****************
  2642 ;; Defined at:
  2643 ;;		line 62 in file "/Applications/microchip/xc8/v1.34/sources/common/float.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  arg             3    0[COMRAM] unsigned um
  2646 ;;  exp             1    3[COMRAM] unsigned char 
  2647 ;;  sign            1    4[COMRAM] unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  3    0[COMRAM] float 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         5       0       0       0       0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2661 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2663 ;;Total ram usage:        8 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		___awtoft
  2669 ;;		___ftmul
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text15
  2674  0078A4                     __ptext15:
  2675                           	opt stack 0
  2676  0078A4                     ___ftpack:
  2677                           	opt stack 28
  2678                           
  2679                           ;incstack = 0
  2680  0078A4  5004               	movf	___ftpack@exp,w,c
  2681  0078A6  B4D8               	btfsc	status,2,c
  2682  0078A8  D005               	goto	l1640
  2683  0078AA  5001               	movf	___ftpack@arg,w,c
  2684  0078AC  1002               	iorwf	___ftpack@arg+1,w,c
  2685  0078AE  1003               	iorwf	___ftpack@arg+2,w,c
  2686  0078B0  A4D8               	btfss	status,2,c
  2687  0078B2  D00E               	goto	l1646
  2688  0078B4                     l1640:
  2689  0078B4  0E00               	movlw	0
  2690  0078B6  6E01               	movwf	?___ftpack,c
  2691  0078B8  0E00               	movlw	0
  2692  0078BA  6E02               	movwf	?___ftpack+1,c
  2693  0078BC  0E00               	movlw	0
  2694  0078BE  6E03               	movwf	?___ftpack+2,c
  2695  0078C0  D053               	goto	l567
  2696  0078C2  D006               	goto	l1646
  2697  0078C4                     l1644:
  2698  0078C4  2A04               	incf	___ftpack@exp,f,c
  2699  0078C6  90D8               	bcf	status,0,c
  2700  0078C8  3203               	rrcf	___ftpack@arg+2,f,c
  2701  0078CA  3202               	rrcf	___ftpack@arg+1,f,c
  2702  0078CC  3201               	rrcf	___ftpack@arg,f,c
  2703  0078CE  D000               	goto	l1646
  2704  0078D0                     l1646:
  2705  0078D0  0E00               	movlw	0
  2706  0078D2  1401               	andwf	___ftpack@arg,w,c
  2707  0078D4  6E06               	movwf	??___ftpack& (0+255),c
  2708  0078D6  0E00               	movlw	0
  2709  0078D8  1402               	andwf	___ftpack@arg+1,w,c
  2710  0078DA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2711  0078DC  0EFE               	movlw	254
  2712  0078DE  1403               	andwf	___ftpack@arg+2,w,c
  2713  0078E0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2714  0078E2  5006               	movf	??___ftpack,w,c
  2715  0078E4  1007               	iorwf	??___ftpack+1,w,c
  2716  0078E6  1008               	iorwf	??___ftpack+2,w,c
  2717  0078E8  B4D8               	btfsc	status,2,c
  2718  0078EA  D00E               	goto	l1652
  2719  0078EC  D7EB               	goto	l1644
  2720  0078EE  D00C               	goto	l1652
  2721  0078F0                     l1648:
  2722  0078F0  2A04               	incf	___ftpack@exp,f,c
  2723  0078F2  0E01               	movlw	1
  2724  0078F4  2601               	addwf	___ftpack@arg,f,c
  2725  0078F6  0E00               	movlw	0
  2726  0078F8  2202               	addwfc	___ftpack@arg+1,f,c
  2727  0078FA  0E00               	movlw	0
  2728  0078FC  2203               	addwfc	___ftpack@arg+2,f,c
  2729  0078FE  90D8               	bcf	status,0,c
  2730  007900  3203               	rrcf	___ftpack@arg+2,f,c
  2731  007902  3202               	rrcf	___ftpack@arg+1,f,c
  2732  007904  3201               	rrcf	___ftpack@arg,f,c
  2733  007906  D000               	goto	l1652
  2734  007908                     l1652:
  2735  007908  0E00               	movlw	0
  2736  00790A  1401               	andwf	___ftpack@arg,w,c
  2737  00790C  6E06               	movwf	??___ftpack& (0+255),c
  2738  00790E  0E00               	movlw	0
  2739  007910  1402               	andwf	___ftpack@arg+1,w,c
  2740  007912  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2741  007914  0EFF               	movlw	255
  2742  007916  1403               	andwf	___ftpack@arg+2,w,c
  2743  007918  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2744  00791A  5006               	movf	??___ftpack,w,c
  2745  00791C  1007               	iorwf	??___ftpack+1,w,c
  2746  00791E  1008               	iorwf	??___ftpack+2,w,c
  2747  007920  B4D8               	btfsc	status,2,c
  2748  007922  D008               	goto	l1656
  2749  007924  D7E5               	goto	l1648
  2750  007926  D006               	goto	l1656
  2751  007928                     l1654:
  2752  007928  0604               	decf	___ftpack@exp,f,c
  2753  00792A  90D8               	bcf	status,0,c
  2754  00792C  3601               	rlcf	___ftpack@arg,f,c
  2755  00792E  3602               	rlcf	___ftpack@arg+1,f,c
  2756  007930  3603               	rlcf	___ftpack@arg+2,f,c
  2757  007932  D000               	goto	l1656
  2758  007934                     l1656:
  2759  007934  BE02               	btfsc	___ftpack@arg+1,7,c
  2760  007936  D004               	goto	l578
  2761  007938  0E02               	movlw	2
  2762  00793A  6004               	cpfslt	___ftpack@exp,c
  2763  00793C  D7F5               	goto	l1654
  2764  00793E  D000               	goto	l578
  2765  007940                     l578:
  2766  007940  B004               	btfsc	___ftpack@exp,0,c
  2767  007942  D002               	goto	l1662
  2768  007944  9E02               	bcf	___ftpack@arg+1,7,c
  2769  007946  D000               	goto	l1662
  2770  007948                     l1662:
  2771  007948  90D8               	bcf	status,0,c
  2772  00794A  3204               	rrcf	___ftpack@exp,f,c
  2773  00794C  5004               	movf	___ftpack@exp,w,c
  2774  00794E  1203               	iorwf	___ftpack@arg+2,f,c
  2775  007950  5005               	movf	___ftpack@sign,w,c
  2776  007952  B4D8               	btfsc	status,2,c
  2777  007954  D002               	goto	l1668
  2778  007956  8E03               	bsf	___ftpack@arg+2,7,c
  2779  007958  D000               	goto	l1668
  2780  00795A                     l1668:
  2781  00795A  C001  F001         	movff	___ftpack@arg,?___ftpack
  2782  00795E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2783  007962  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2784  007966  D000               	goto	l567
  2785  007968                     l567:
  2786  007968  0012               	return		;funcret
  2787  00796A                     __end_of___ftpack:
  2788                           	opt stack 0
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           intcon	equ	0xFF2
  2794                           postinc0	equ	0xFEE
  2795                           wreg	equ	0xFE8
  2796                           indf1	equ	0xFE7
  2797                           postdec1	equ	0xFE5
  2798                           fsr1h	equ	0xFE2
  2799                           fsr1l	equ	0xFE1
  2800                           indf2	equ	0xFDF
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _nrf_txmode *****************
  2806 ;; Defined at:
  2807 ;;		line 152 in file "NRF_24L01/nRF2401.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    2
  2828 ;; This function calls:
  2829 ;;		_nrf_SPI_RW_Reg
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text16
  2836  0071C2                     __ptext16:
  2837                           	opt stack 0
  2838  0071C2                     _nrf_txmode:
  2839                           	opt stack 28
  2840                           
  2841                           ;nRF2401.c: 153: PORTCbits.RC0 = 0;
  2842                           
  2843                           ;incstack = 0
  2844  0071C2  9082               	bcf	3970,0,c	;volatile
  2845                           
  2846                           ;nRF2401.c: 155: nrf_SPI_RW_Reg(0x20 + 0x00, 0x0E);
  2847  0071C4  0E0E               	movlw	14
  2848  0071C6  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2849  0071C8  0E20               	movlw	32
  2850  0071CA  ECFF  F038         	call	_nrf_SPI_RW_Reg
  2851                           
  2852                           ;nRF2401.c: 157: PORTCbits.RC0 = 1;
  2853  0071CE  8082               	bsf	3970,0,c	;volatile
  2854  0071D0  0012               	return		;funcret
  2855  0071D2                     __end_of_nrf_txmode:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           indf1	equ	0xFE7
  2865                           postdec1	equ	0xFE5
  2866                           fsr1h	equ	0xFE2
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _nrf_send *****************
  2874 ;; Defined at:
  2875 ;;		line 16 in file "NRF_24L01/nRF2401.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  tx_buf          2    7[COMRAM] PTR unsigned char 
  2878 ;;		 -> main@tx_buf(32), 
  2879 ;;  rx_buf          2    9[COMRAM] PTR unsigned char 
  2880 ;;		 -> main@rx_buf(32), 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  i               2   11[COMRAM] int 
  2883 ;;  status          1   13[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      unsigned char 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2893 ;;      Params:         4       0       0       0       0       0       0       0       0
  2894 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2896 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        7 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    2
  2900 ;; This function calls:
  2901 ;;		_nrf_SPI_RW_Reg
  2902 ;;		_nrf_SPI_Read_Buf
  2903 ;;		_nrf_SPI_Write_Buf
  2904 ;;		_nrf_getStatus
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text17
  2911  00759A                     __ptext17:
  2912                           	opt stack 0
  2913  00759A                     _nrf_send:
  2914                           	opt stack 28
  2915                           
  2916                           ;nRF2401.c: 17: char status;
  2917                           ;nRF2401.c: 18: int i;
  2918                           ;nRF2401.c: 20: nrf_SPI_RW_Reg(0xE1,0);
  2919                           
  2920                           ;incstack = 0
  2921  00759A  0E00               	movlw	0
  2922  00759C  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2923  00759E  0EE1               	movlw	225
  2924  0075A0  ECFF  F038         	call	_nrf_SPI_RW_Reg
  2925                           
  2926                           ;nRF2401.c: 22: status = nrf_getStatus();
  2927  0075A4  ECF4  F038         	call	_nrf_getStatus	;wreg free
  2928  0075A8  6E0E               	movwf	nrf_send@status,c
  2929                           
  2930                           ;nRF2401.c: 23: nrf_SPI_RW_Reg(0x20 + 0x07, status);
  2931  0075AA  C00E  F002         	movff	nrf_send@status,nrf_SPI_RW_Reg@value
  2932  0075AE  0E27               	movlw	39
  2933  0075B0  ECFF  F038         	call	_nrf_SPI_RW_Reg
  2934                           
  2935                           ;nRF2401.c: 24: nrf_SPI_Write_Buf(0xA0,tx_buf,32);
  2936  0075B4  C008  F002         	movff	nrf_send@tx_buf,nrf_SPI_Write_Buf@pBuf
  2937  0075B8  C009  F003         	movff	nrf_send@tx_buf+1,nrf_SPI_Write_Buf@pBuf+1
  2938  0075BC  0E20               	movlw	32
  2939  0075BE  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
  2940  0075C0  0EA0               	movlw	160
  2941  0075C2  EC41  F039         	call	_nrf_SPI_Write_Buf
  2942                           
  2943                           ;nRF2401.c: 27: PORTCbits.RC0 = 1;
  2944  0075C6  8082               	bsf	3970,0,c	;volatile
  2945                           
  2946                           ;nRF2401.c: 28: for(i=0; i<2000; i++);
  2947  0075C8  0E00               	movlw	0
  2948  0075CA  6E0D               	movwf	nrf_send@i+1,c
  2949  0075CC  0E00               	movlw	0
  2950  0075CE  6E0C               	movwf	nrf_send@i,c
  2951  0075D0                     l2086:
  2952  0075D0  BE0D               	btfsc	nrf_send@i+1,7,c
  2953  0075D2  D008               	goto	l2090
  2954  0075D4  0ED0               	movlw	208
  2955  0075D6  5C0C               	subwf	nrf_send@i,w,c
  2956  0075D8  0E07               	movlw	7
  2957  0075DA  580D               	subwfb	nrf_send@i+1,w,c
  2958  0075DC  B0D8               	btfsc	status,0,c
  2959  0075DE  D005               	goto	l159
  2960  0075E0  D001               	goto	l2090
  2961  0075E2  D003               	goto	l159
  2962  0075E4                     l2090:
  2963  0075E4  4A0C               	infsnz	nrf_send@i,f,c
  2964  0075E6  2A0D               	incf	nrf_send@i+1,f,c
  2965  0075E8  D7F3               	goto	l2086
  2966  0075EA                     l159:
  2967                           
  2968                           ;nRF2401.c: 29: PORTCbits.RC0 = 0;
  2969  0075EA  9082               	bcf	3970,0,c	;volatile
  2970                           
  2971                           ;nRF2401.c: 31: status = nrf_getStatus();
  2972  0075EC  ECF4  F038         	call	_nrf_getStatus	;wreg free
  2973  0075F0  6E0E               	movwf	nrf_send@status,c
  2974                           
  2975                           ;nRF2401.c: 32: if(status & 0x40) {
  2976  0075F2  AC0E               	btfss	nrf_send@status,6,c
  2977  0075F4  D015               	goto	l2110
  2978                           
  2979                           ;nRF2401.c: 33: nrf_SPI_RW_Reg(0x20 + 0x07, 0x40);
  2980  0075F6  0E40               	movlw	64
  2981  0075F8  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2982  0075FA  0E27               	movlw	39
  2983  0075FC  ECFF  F038         	call	_nrf_SPI_RW_Reg
  2984                           
  2985                           ;nRF2401.c: 34: nrf_SPI_Read_Buf(0x61,rx_buf,2);
  2986  007600  C00A  F002         	movff	nrf_send@rx_buf,nrf_SPI_Read_Buf@pBuf
  2987  007604  C00B  F003         	movff	nrf_send@rx_buf+1,nrf_SPI_Read_Buf@pBuf+1
  2988  007608  0E02               	movlw	2
  2989  00760A  6E04               	movwf	nrf_SPI_Read_Buf@bytes,c
  2990  00760C  0E61               	movlw	97
  2991  00760E  ECAC  F039         	call	_nrf_SPI_Read_Buf
  2992                           
  2993                           ;nRF2401.c: 35: nrf_SPI_RW_Reg(0xE2,0);
  2994  007612  0E00               	movlw	0
  2995  007614  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  2996  007616  0EE2               	movlw	226
  2997  007618  ECFF  F038         	call	_nrf_SPI_RW_Reg
  2998                           
  2999                           ;nRF2401.c: 36: return 0x01;
  3000  00761C  0E01               	movlw	1
  3001                           
  3002                           ;nRF2401.c: 37: } else {
  3003  00761E  D002               	goto	l161
  3004  007620                     l2110:
  3005                           
  3006                           ;nRF2401.c: 38: return 0x00;
  3007  007620  0E00               	movlw	0
  3008  007622  D000               	goto	l161
  3009  007624                     l161:
  3010  007624  0012               	return		;funcret
  3011  007626                     __end_of_nrf_send:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           intcon	equ	0xFF2
  3018                           postinc0	equ	0xFEE
  3019                           wreg	equ	0xFE8
  3020                           indf1	equ	0xFE7
  3021                           postdec1	equ	0xFE5
  3022                           fsr1h	equ	0xFE2
  3023                           fsr1l	equ	0xFE1
  3024                           indf2	equ	0xFDF
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _nrf_getStatus *****************
  3030 ;; Defined at:
  3031 ;;		line 6 in file "NRF_24L01/nRF2401.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  status          1    0[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      unsigned char 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_nrf_send
  3055 ;;		_nrf_send_noack
  3056 ;;		_nrf_receive
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text18
  3061  0071E8                     __ptext18:
  3062                           	opt stack 0
  3063  0071E8                     _nrf_getStatus:
  3064                           	opt stack 29
  3065                           
  3066                           ;nRF2401.c: 7: unsigned char status;
  3067                           ;nRF2401.c: 8: PORTCbits.RC1 = 0;
  3068                           
  3069                           ;incstack = 0
  3070  0071E8  9282               	bcf	3970,1,c	;volatile
  3071                           
  3072                           ;nRF2401.c: 9: SSPBUF = 0xFF;
  3073  0071EA  68C9               	setf	4041,c	;volatile
  3074                           
  3075                           ;nRF2401.c: 10: while(!SSPSTATbits.BF);
  3076  0071EC  D000               	goto	l152
  3077  0071EE                     l152:
  3078  0071EE  A0C7               	btfss	4039,0,c	;volatile
  3079  0071F0  D7FE               	goto	l152
  3080                           
  3081                           ;nRF2401.c: 11: status = SSPBUF;
  3082  0071F2  CFC9 F001          	movff	4041,nrf_getStatus@status	;volatile
  3083                           
  3084                           ;nRF2401.c: 12: PORTCbits.RC1 = 1;
  3085  0071F6  8282               	bsf	3970,1,c	;volatile
  3086                           
  3087                           ;nRF2401.c: 13: return status;
  3088  0071F8  5001               	movf	nrf_getStatus@status,w,c
  3089  0071FA  D000               	goto	l155
  3090  0071FC                     l155:
  3091  0071FC  0012               	return		;funcret
  3092  0071FE                     __end_of_nrf_getStatus:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           intcon	equ	0xFF2
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           indf1	equ	0xFE7
  3102                           postdec1	equ	0xFE5
  3103                           fsr1h	equ	0xFE2
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _nrf_SPI_Read_Buf *****************
  3111 ;; Defined at:
  3112 ;;		line 285 in file "NRF_24L01/nRF2401.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  reg             1    wreg     unsigned char 
  3115 ;;  pBuf            2    1[COMRAM] PTR unsigned char 
  3116 ;;		 -> main@rx_buf(32), 
  3117 ;;  bytes           1    3[COMRAM] unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  reg             1    5[COMRAM] unsigned char 
  3120 ;;  i               1    6[COMRAM] unsigned char 
  3121 ;;  status          1    4[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      unsigned char 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3131 ;;      Params:         3       0       0       0       0       0       0       0       0
  3132 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3134 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3135 ;;Total ram usage:        6 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    1
  3138 ;; This function calls:
  3139 ;;		_nrf_SPI_RW
  3140 ;; This function is called by:
  3141 ;;		_nrf_send
  3142 ;;		_nrf_receive
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text19
  3147  007358                     __ptext19:
  3148                           	opt stack 0
  3149  007358                     _nrf_SPI_Read_Buf:
  3150                           	opt stack 28
  3151                           
  3152                           ;incstack = 0
  3153                           ;nrf_SPI_Read_Buf@reg stored from wreg
  3154  007358  6E06               	movwf	nrf_SPI_Read_Buf@reg,c
  3155                           
  3156                           ;nRF2401.c: 286: unsigned char status,i;
  3157                           ;nRF2401.c: 288: PORTCbits.RC1 = 0;
  3158  00735A  9282               	bcf	3970,1,c	;volatile
  3159                           
  3160                           ;nRF2401.c: 289: status = nrf_SPI_RW(reg);
  3161  00735C  5006               	movf	nrf_SPI_Read_Buf@reg,w,c
  3162  00735E  ECE9  F038         	call	_nrf_SPI_RW
  3163  007362  6E05               	movwf	nrf_SPI_Read_Buf@status,c
  3164                           
  3165                           ;nRF2401.c: 291: for(i=0;i<bytes;i++) {
  3166  007364  0E00               	movlw	0
  3167  007366  6E07               	movwf	nrf_SPI_Read_Buf@i,c
  3168  007368  D00E               	goto	l1748
  3169  00736A                     l1744:
  3170                           
  3171                           ;nRF2401.c: 292: pBuf[i] = nrf_SPI_RW(0xFF);
  3172  00736A  5007               	movf	nrf_SPI_Read_Buf@i,w,c
  3173  00736C  0D01               	mullw	1
  3174  00736E  50F3               	movf	prodl,w,c
  3175  007370  2402               	addwf	nrf_SPI_Read_Buf@pBuf,w,c
  3176  007372  6ED9               	movwf	fsr2l,c
  3177  007374  50F4               	movf	prodh,w,c
  3178  007376  2003               	addwfc	nrf_SPI_Read_Buf@pBuf+1,w,c
  3179  007378  6EDA               	movwf	fsr2h,c
  3180  00737A  0EFF               	movlw	255
  3181  00737C  ECE9  F038         	call	_nrf_SPI_RW
  3182  007380  6EDF               	movwf	indf2,c
  3183  007382  2A07               	incf	nrf_SPI_Read_Buf@i,f,c
  3184  007384  D000               	goto	l1748
  3185  007386                     l1748:
  3186  007386  5004               	movf	nrf_SPI_Read_Buf@bytes,w,c
  3187  007388  5C07               	subwf	nrf_SPI_Read_Buf@i,w,c
  3188  00738A  A0D8               	btfss	status,0,c
  3189  00738C  D7EE               	goto	l1744
  3190                           
  3191                           ;nRF2401.c: 293: }
  3192                           ;nRF2401.c: 295: PORTCbits.RC1 = 1;
  3193  00738E  8282               	bsf	3970,1,c	;volatile
  3194                           
  3195                           ;nRF2401.c: 297: return(status);
  3196                           ;	Return value of _nrf_SPI_Read_Buf is never used
  3197  007390  0012               	return		;funcret
  3198  007392                     __end_of_nrf_SPI_Read_Buf:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           prodh	equ	0xFF4
  3205                           prodl	equ	0xFF3
  3206                           intcon	equ	0xFF2
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           indf1	equ	0xFE7
  3210                           postdec1	equ	0xFE5
  3211                           fsr1h	equ	0xFE2
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           fsr2h	equ	0xFDA
  3215                           fsr2l	equ	0xFD9
  3216                           status	equ	0xFD8
  3217                           
  3218 ;; *************** function _nrf_init *****************
  3219 ;; Defined at:
  3220 ;;		line 85 in file "NRF_24L01/nRF2401.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  Test            5    0        unsigned char [5]
  3225 ;;  status          1    7[COMRAM] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;		None               void
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3235 ;;      Params:         0       0       0       0       0       0       0       0       0
  3236 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3238 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3239 ;;Total ram usage:        1 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    2
  3242 ;; This function calls:
  3243 ;;		_OpenSPI
  3244 ;;		_nrf_SPI_RW_Reg
  3245 ;;		_nrf_SPI_Read
  3246 ;;		_nrf_SPI_Write_Buf
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text20
  3253  00796A                     __ptext20:
  3254                           	opt stack 0
  3255  00796A                     _nrf_init:
  3256                           	opt stack 28
  3257                           
  3258                           ;nRF2401.c: 86: char status=0;
  3259                           
  3260                           ;incstack = 0
  3261  00796A  0E00               	movlw	0
  3262  00796C  6E08               	movwf	nrf_init@status,c
  3263                           
  3264                           ;nRF2401.c: 87: unsigned char Test[5];
  3265                           ;nRF2401.c: 88: OpenSPI(0b00000010, 0b00000000, 0b00000000);
  3266  00796E  0E00               	movlw	0
  3267  007970  6E01               	movwf	OpenSPI@bus_mode,c
  3268  007972  0E00               	movlw	0
  3269  007974  6E02               	movwf	OpenSPI@smp_phase,c
  3270  007976  0E02               	movlw	2
  3271  007978  EC75  F03A         	call	_OpenSPI
  3272                           
  3273                           ;nRF2401.c: 90: PORTCbits.RC0 = 1;
  3274  00797C  8082               	bsf	3970,0,c	;volatile
  3275                           
  3276                           ;nRF2401.c: 91: PORTCbits.RC1 = 1;
  3277  00797E  8282               	bsf	3970,1,c	;volatile
  3278                           
  3279                           ;nRF2401.c: 93: PORTCbits.RC0 = 0;
  3280  007980  9082               	bcf	3970,0,c	;volatile
  3281                           
  3282                           ;nRF2401.c: 95: nrf_SPI_Write_Buf(0x20 + 0x10, TX_ADDRESS, 5);
  3283  007982  0E41               	movlw	low _TX_ADDRESS
  3284  007984  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
  3285  007986  0E00               	movlw	high _TX_ADDRESS
  3286  007988  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
  3287  00798A  0E05               	movlw	5
  3288  00798C  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
  3289  00798E  0E30               	movlw	48
  3290  007990  EC41  F039         	call	_nrf_SPI_Write_Buf
  3291                           
  3292                           ;nRF2401.c: 97: nrf_SPI_Write_Buf(0x20 + 0x0A, TX_ADDRESS, 5);
  3293  007994  0E41               	movlw	low _TX_ADDRESS
  3294  007996  6E02               	movwf	nrf_SPI_Write_Buf@pBuf,c
  3295  007998  0E00               	movlw	high _TX_ADDRESS
  3296  00799A  6E03               	movwf	nrf_SPI_Write_Buf@pBuf+1,c
  3297  00799C  0E05               	movlw	5
  3298  00799E  6E04               	movwf	nrf_SPI_Write_Buf@bytes,c
  3299  0079A0  0E2A               	movlw	42
  3300  0079A2  EC41  F039         	call	_nrf_SPI_Write_Buf
  3301                           
  3302                           ;nRF2401.c: 109: nrf_SPI_RW_Reg(0x50,0x73);
  3303  0079A6  0E73               	movlw	115
  3304  0079A8  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3305  0079AA  0E50               	movlw	80
  3306  0079AC  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3307                           
  3308                           ;nRF2401.c: 111: nrf_SPI_RW_Reg(0x20 + 0x1D, 0x06);
  3309  0079B0  0E06               	movlw	6
  3310  0079B2  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3311  0079B4  0E3D               	movlw	61
  3312  0079B6  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3313                           
  3314                           ;nRF2401.c: 113: nrf_SPI_RW_Reg(0x20 + 0x1C, 0b111111);
  3315  0079BA  0E3F               	movlw	63
  3316  0079BC  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3317  0079BE  0E3C               	movlw	60
  3318  0079C0  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3319                           
  3320                           ;nRF2401.c: 115: nrf_SPI_RW_Reg(0x20 + 0x01, 0b111111);
  3321  0079C4  0E3F               	movlw	63
  3322  0079C6  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3323  0079C8  0E21               	movlw	33
  3324  0079CA  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3325                           
  3326                           ;nRF2401.c: 117: nrf_SPI_RW_Reg(0x20 + 0x02, 0b0001);
  3327  0079CE  0E01               	movlw	1
  3328  0079D0  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3329  0079D2  0E22               	movlw	34
  3330  0079D4  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3331                           
  3332                           ;nRF2401.c: 119: nrf_SPI_RW_Reg(0x20 + 0x04, 0x12);
  3333  0079D8  0E12               	movlw	18
  3334  0079DA  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3335  0079DC  0E24               	movlw	36
  3336  0079DE  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3337                           
  3338                           ;nRF2401.c: 121: nrf_SPI_RW_Reg(0x20 + 0x05, 40);
  3339  0079E2  0E28               	movlw	40
  3340  0079E4  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3341  0079E6  0E25               	movlw	37
  3342  0079E8  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3343                           
  3344                           ;nRF2401.c: 123: nrf_SPI_RW_Reg(0x20 + 0x11, 32);
  3345  0079EC  0E20               	movlw	32
  3346  0079EE  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3347  0079F0  0E31               	movlw	49
  3348  0079F2  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3349                           
  3350                           ;nRF2401.c: 125: nrf_SPI_RW_Reg(0x20 + 0x12, 32);
  3351  0079F6  0E20               	movlw	32
  3352  0079F8  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3353  0079FA  0E32               	movlw	50
  3354  0079FC  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3355                           
  3356                           ;nRF2401.c: 127: nrf_SPI_RW_Reg(0x20 + 0x06, 0x07);
  3357  007A00  0E07               	movlw	7
  3358  007A02  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3359  007A04  0E26               	movlw	38
  3360  007A06  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3361                           
  3362                           ;nRF2401.c: 129: nrf_SPI_RW_Reg(0xE2,0);
  3363  007A0A  0E00               	movlw	0
  3364  007A0C  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3365  007A0E  0EE2               	movlw	226
  3366  007A10  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3367                           
  3368                           ;nRF2401.c: 131: nrf_SPI_RW_Reg(0xE1,0);
  3369  007A14  0E00               	movlw	0
  3370  007A16  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3371  007A18  0EE1               	movlw	225
  3372  007A1A  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3373                           
  3374                           ;nRF2401.c: 133: status=nrf_SPI_Read(STATUS);
  3375  007A1E  50D8               	movf	status,w,c	;volatile
  3376  007A20  EC0B  F039         	call	_nrf_SPI_Read
  3377  007A24  6E08               	movwf	nrf_init@status,c
  3378                           
  3379                           ;nRF2401.c: 135: nrf_SPI_RW_Reg(0x20 + STATUS, status);
  3380  007A26  C008  F002         	movff	nrf_init@status,nrf_SPI_RW_Reg@value
  3381  007A2A  50D8               	movf	status,w,c	;volatile
  3382  007A2C  0F20               	addlw	32
  3383  007A2E  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3384                           
  3385                           ;nRF2401.c: 137: nrf_SPI_RW_Reg(0x20 + 0x03, 0x3);
  3386  007A32  0E03               	movlw	3
  3387  007A34  6E02               	movwf	nrf_SPI_RW_Reg@value,c
  3388  007A36  0E23               	movlw	35
  3389  007A38  ECFF  F038         	call	_nrf_SPI_RW_Reg
  3390                           
  3391                           ;nRF2401.c: 139: PORTCbits.RC0 = 1;
  3392  007A3C  8082               	bsf	3970,0,c	;volatile
  3393  007A3E  0012               	return		;funcret
  3394  007A40                     __end_of_nrf_init:
  3395                           	opt stack 0
  3396                           tblptru	equ	0xFF8
  3397                           tblptrh	equ	0xFF7
  3398                           tblptrl	equ	0xFF6
  3399                           tablat	equ	0xFF5
  3400                           prodh	equ	0xFF4
  3401                           prodl	equ	0xFF3
  3402                           intcon	equ	0xFF2
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           indf1	equ	0xFE7
  3406                           postdec1	equ	0xFE5
  3407                           fsr1h	equ	0xFE2
  3408                           fsr1l	equ	0xFE1
  3409                           indf2	equ	0xFDF
  3410                           fsr2h	equ	0xFDA
  3411                           fsr2l	equ	0xFD9
  3412                           status	equ	0xFD8
  3413                           
  3414 ;; *************** function _nrf_SPI_Write_Buf *****************
  3415 ;; Defined at:
  3416 ;;		line 308 in file "NRF_24L01/nRF2401.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  reg             1    wreg     unsigned char 
  3419 ;;  pBuf            2    1[COMRAM] PTR unsigned char 
  3420 ;;		 -> TX_ADDRESS(5), main@tx_buf(32), 
  3421 ;;  bytes           1    3[COMRAM] unsigned char 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  reg             1    5[COMRAM] unsigned char 
  3424 ;;  i               1    6[COMRAM] unsigned char 
  3425 ;;  status          1    4[COMRAM] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      unsigned char 
  3428 ;; Registers used:
  3429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3435 ;;      Params:         3       0       0       0       0       0       0       0       0
  3436 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3438 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3439 ;;Total ram usage:        6 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    1
  3442 ;; This function calls:
  3443 ;;		_nrf_SPI_RW
  3444 ;; This function is called by:
  3445 ;;		_nrf_send
  3446 ;;		_nrf_init
  3447 ;;		_nrf_send_noack
  3448 ;;		_nrf_receive
  3449 ;;		_nrf_setTxAddr
  3450 ;;		_nrf_setRxAddr
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text21
  3455  007282                     __ptext21:
  3456                           	opt stack 0
  3457  007282                     _nrf_SPI_Write_Buf:
  3458                           	opt stack 28
  3459                           
  3460                           ;incstack = 0
  3461                           ;nrf_SPI_Write_Buf@reg stored from wreg
  3462  007282  6E06               	movwf	nrf_SPI_Write_Buf@reg,c
  3463                           
  3464                           ;nRF2401.c: 309: unsigned char status,i;
  3465                           ;nRF2401.c: 311: PORTCbits.RC1 = 0;
  3466  007284  9282               	bcf	3970,1,c	;volatile
  3467                           
  3468                           ;nRF2401.c: 312: status = nrf_SPI_RW(reg);
  3469  007286  5006               	movf	nrf_SPI_Write_Buf@reg,w,c
  3470  007288  ECE9  F038         	call	_nrf_SPI_RW
  3471  00728C  6E05               	movwf	nrf_SPI_Write_Buf@status,c
  3472                           
  3473                           ;nRF2401.c: 313: for(i=0;i<bytes; i++) {
  3474  00728E  0E00               	movlw	0
  3475  007290  6E07               	movwf	nrf_SPI_Write_Buf@i,c
  3476  007292  D00B               	goto	l1736
  3477  007294                     l1730:
  3478                           
  3479                           ;nRF2401.c: 314: nrf_SPI_RW(*pBuf);
  3480  007294  C002  FFD9         	movff	nrf_SPI_Write_Buf@pBuf,fsr2l
  3481  007298  C003  FFDA         	movff	nrf_SPI_Write_Buf@pBuf+1,fsr2h
  3482  00729C  50DF               	movf	indf2,w,c
  3483  00729E  ECE9  F038         	call	_nrf_SPI_RW
  3484                           
  3485                           ;nRF2401.c: 315: *pBuf++;
  3486  0072A2  4A02               	infsnz	nrf_SPI_Write_Buf@pBuf,f,c
  3487  0072A4  2A03               	incf	nrf_SPI_Write_Buf@pBuf+1,f,c
  3488  0072A6  2A07               	incf	nrf_SPI_Write_Buf@i,f,c
  3489  0072A8  D000               	goto	l1736
  3490  0072AA                     l1736:
  3491  0072AA  5004               	movf	nrf_SPI_Write_Buf@bytes,w,c
  3492  0072AC  5C07               	subwf	nrf_SPI_Write_Buf@i,w,c
  3493  0072AE  A0D8               	btfss	status,0,c
  3494  0072B0  D7F1               	goto	l1730
  3495                           
  3496                           ;nRF2401.c: 316: }
  3497                           ;nRF2401.c: 317: PORTCbits.RC1 = 1;
  3498  0072B2  8282               	bsf	3970,1,c	;volatile
  3499                           
  3500                           ;nRF2401.c: 318: return(status);
  3501                           ;	Return value of _nrf_SPI_Write_Buf is never used
  3502  0072B4  0012               	return		;funcret
  3503  0072B6                     __end_of_nrf_SPI_Write_Buf:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           indf1	equ	0xFE7
  3515                           postdec1	equ	0xFE5
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _nrf_SPI_Read *****************
  3524 ;; Defined at:
  3525 ;;		line 266 in file "NRF_24L01/nRF2401.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  reg             1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  reg             1    1[COMRAM] unsigned char 
  3530 ;;  reg_val         1    2[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         0       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:        2 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    1
  3547 ;; This function calls:
  3548 ;;		_nrf_SPI_RW
  3549 ;; This function is called by:
  3550 ;;		_nrf_init
  3551 ;;		_nrf_receive
  3552 ;;		_nrf_enablePipe
  3553 ;;		_nrf_disablePipe
  3554 ;;		_nrf_readRegister
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text22
  3559  007216                     __ptext22:
  3560                           	opt stack 0
  3561  007216                     _nrf_SPI_Read:
  3562                           	opt stack 28
  3563                           
  3564                           ;incstack = 0
  3565                           ;nrf_SPI_Read@reg stored from wreg
  3566  007216  6E02               	movwf	nrf_SPI_Read@reg,c
  3567                           
  3568                           ;nRF2401.c: 267: unsigned char reg_val;
  3569                           ;nRF2401.c: 269: PORTCbits.RC1 = 0;
  3570  007218  9282               	bcf	3970,1,c	;volatile
  3571                           
  3572                           ;nRF2401.c: 270: nrf_SPI_RW(reg);
  3573  00721A  5002               	movf	nrf_SPI_Read@reg,w,c
  3574  00721C  ECE9  F038         	call	_nrf_SPI_RW
  3575                           
  3576                           ;nRF2401.c: 271: reg_val = nrf_SPI_RW(0);
  3577  007220  0E00               	movlw	0
  3578  007222  ECE9  F038         	call	_nrf_SPI_RW
  3579  007226  6E03               	movwf	nrf_SPI_Read@reg_val,c
  3580                           
  3581                           ;nRF2401.c: 272: PORTCbits.RC1 = 1;
  3582  007228  8282               	bsf	3970,1,c	;volatile
  3583                           
  3584                           ;nRF2401.c: 274: return(reg_val);
  3585  00722A  5003               	movf	nrf_SPI_Read@reg_val,w,c
  3586  00722C  D000               	goto	l216
  3587  00722E                     l216:
  3588  00722E  0012               	return		;funcret
  3589  007230                     __end_of_nrf_SPI_Read:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           intcon	equ	0xFF2
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           indf1	equ	0xFE7
  3601                           postdec1	equ	0xFE5
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           indf2	equ	0xFDF
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _nrf_SPI_RW_Reg *****************
  3610 ;; Defined at:
  3611 ;;		line 248 in file "NRF_24L01/nRF2401.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  reg             1    wreg     unsigned char 
  3614 ;;  value           1    1[COMRAM] unsigned char 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  reg             1    3[COMRAM] unsigned char 
  3617 ;;  status          1    2[COMRAM] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3627 ;;      Params:         1       0       0       0       0       0       0       0       0
  3628 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3630 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3631 ;;Total ram usage:        3 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    1
  3634 ;; This function calls:
  3635 ;;		_nrf_SPI_RW
  3636 ;; This function is called by:
  3637 ;;		_nrf_send
  3638 ;;		_nrf_init
  3639 ;;		_nrf_txmode
  3640 ;;		_nrf_send_noack
  3641 ;;		_nrf_receive
  3642 ;;		_nrf_rxmode
  3643 ;;		_nrf_powerdown
  3644 ;;		_nrf_enablePipe
  3645 ;;		_nrf_disablePipe
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text23
  3650  0071FE                     __ptext23:
  3651                           	opt stack 0
  3652  0071FE                     _nrf_SPI_RW_Reg:
  3653                           	opt stack 28
  3654                           
  3655                           ;incstack = 0
  3656                           ;nrf_SPI_RW_Reg@reg stored from wreg
  3657  0071FE  6E04               	movwf	nrf_SPI_RW_Reg@reg,c
  3658                           
  3659                           ;nRF2401.c: 249: unsigned char status;
  3660                           ;nRF2401.c: 251: PORTCbits.RC1 = 0;
  3661  007200  9282               	bcf	3970,1,c	;volatile
  3662                           
  3663                           ;nRF2401.c: 252: status = nrf_SPI_RW(reg);
  3664  007202  5004               	movf	nrf_SPI_RW_Reg@reg,w,c
  3665  007204  ECE9  F038         	call	_nrf_SPI_RW
  3666  007208  6E03               	movwf	nrf_SPI_RW_Reg@status,c
  3667                           
  3668                           ;nRF2401.c: 253: nrf_SPI_RW(value);
  3669  00720A  5002               	movf	nrf_SPI_RW_Reg@value,w,c
  3670  00720C  ECE9  F038         	call	_nrf_SPI_RW
  3671                           
  3672                           ;nRF2401.c: 254: PORTCbits.RC1 = 1;
  3673  007210  8282               	bsf	3970,1,c	;volatile
  3674  007212  D000               	goto	l213
  3675  007214                     l213:
  3676  007214  0012               	return		;funcret
  3677  007216                     __end_of_nrf_SPI_RW_Reg:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           prodh	equ	0xFF4
  3684                           prodl	equ	0xFF3
  3685                           intcon	equ	0xFF2
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           indf1	equ	0xFE7
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _nrf_SPI_RW *****************
  3698 ;; Defined at:
  3699 ;;		line 233 in file "NRF_24L01/nRF2401.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  data            1    wreg     unsigned char 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  data            1    0[COMRAM] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      unsigned char 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        1 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_nrf_SPI_RW_Reg
  3723 ;;		_nrf_SPI_Read
  3724 ;;		_nrf_SPI_Read_Buf
  3725 ;;		_nrf_SPI_Write_Buf
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text24
  3730  0071D2                     __ptext24:
  3731                           	opt stack 0
  3732  0071D2                     _nrf_SPI_RW:
  3733                           	opt stack 28
  3734                           
  3735                           ;incstack = 0
  3736                           ;nrf_SPI_RW@data stored from wreg
  3737  0071D2  6E01               	movwf	nrf_SPI_RW@data,c
  3738                           
  3739                           ;nRF2401.c: 234: SSPBUF = data;
  3740  0071D4  C001  FFC9         	movff	nrf_SPI_RW@data,4041	;volatile
  3741                           
  3742                           ;nRF2401.c: 235: while(!SSPSTATbits.BF);
  3743  0071D8  D000               	goto	l207
  3744  0071DA                     l207:
  3745  0071DA  A0C7               	btfss	4039,0,c	;volatile
  3746  0071DC  D7FE               	goto	l207
  3747                           
  3748                           ;nRF2401.c: 236: data = SSPBUF;
  3749  0071DE  CFC9 F001          	movff	4041,nrf_SPI_RW@data	;volatile
  3750                           
  3751                           ;nRF2401.c: 237: return(data);
  3752  0071E2  5001               	movf	nrf_SPI_RW@data,w,c
  3753  0071E4  D000               	goto	l210
  3754  0071E6                     l210:
  3755  0071E6  0012               	return		;funcret
  3756  0071E8                     __end_of_nrf_SPI_RW:
  3757                           	opt stack 0
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           postinc0	equ	0xFEE
  3766                           wreg	equ	0xFE8
  3767                           indf1	equ	0xFE7
  3768                           postdec1	equ	0xFE5
  3769                           fsr1h	equ	0xFE2
  3770                           fsr1l	equ	0xFE1
  3771                           indf2	equ	0xFDF
  3772                           fsr2h	equ	0xFDA
  3773                           fsr2l	equ	0xFD9
  3774                           status	equ	0xFD8
  3775                           
  3776 ;; *************** function _OpenSPI *****************
  3777 ;; Defined at:
  3778 ;;		line 14 in file "/Applications/microchip/xc8/v1.34/sources/pic18/plib/SPI/spi_open.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  sync_mode       1    wreg     unsigned char 
  3781 ;;  bus_mode        1    0[COMRAM] unsigned char 
  3782 ;;  smp_phase       1    1[COMRAM] unsigned char 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  sync_mode       1    2[COMRAM] unsigned char 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;		None               void
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3794 ;;      Params:         2       0       0       0       0       0       0       0       0
  3795 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3797 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3798 ;;Total ram usage:        3 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_nrf_init
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text25
  3808  0074EA                     __ptext25:
  3809                           	opt stack 0
  3810  0074EA                     _OpenSPI:
  3811                           	opt stack 29
  3812                           
  3813                           ;incstack = 0
  3814                           ;OpenSPI@sync_mode stored from wreg
  3815  0074EA  6E03               	movwf	OpenSPI@sync_mode,c
  3816  0074EC  0E3F               	movlw	63
  3817  0074EE  16C7               	andwf	4039,f,c	;volatile
  3818  0074F0  0E00               	movlw	0
  3819  0074F2  6EC6               	movwf	4038,c	;volatile
  3820  0074F4  5003               	movf	OpenSPI@sync_mode,w,c
  3821  0074F6  12C6               	iorwf	4038,f,c	;volatile
  3822  0074F8  5002               	movf	OpenSPI@smp_phase,w,c
  3823  0074FA  12C7               	iorwf	4039,f,c	;volatile
  3824  0074FC  D005               	goto	l1770
  3825  0074FE                     l246:
  3826  0074FE  8CC7               	bsf	4039,6,c	;volatile
  3827  007500  D013               	goto	l1774
  3828  007502                     l248:
  3829  007502  8CC7               	bsf	4039,6,c	;volatile
  3830  007504                     l249:
  3831  007504  88C6               	bsf	4038,4,c	;volatile
  3832  007506  D010               	goto	l1774
  3833  007508                     l1770:
  3834  007508  5001               	movf	OpenSPI@bus_mode,w,c
  3835                           
  3836                           ; Switch size 1, requested type "space"
  3837                           ; Number of cases is 3, Range of values is 0 to 3
  3838                           ; switch strategies available:
  3839                           ; Name         Instructions Cycles
  3840                           ; simple_byte           10     6 (average)
  3841                           ;	Chosen strategy is simple_byte
  3842  00750A  0A00               	xorlw	0	; case 0
  3843  00750C  B4D8               	btfsc	status,2,c
  3844  00750E  D7F7               	goto	l246
  3845  007510  0A02               	xorlw	2	; case 2
  3846  007512  B4D8               	btfsc	status,2,c
  3847  007514  D7F6               	goto	l248
  3848  007516  0A01               	xorlw	1	; case 3
  3849  007518  B4D8               	btfsc	status,2,c
  3850  00751A  D7F4               	goto	l249
  3851  00751C  D005               	goto	l1774
  3852  00751E                     l252:
  3853  00751E  8A92               	bsf	3986,5,c	;volatile
  3854  007520                     l254:
  3855  007520  8293               	bsf	3987,1,c	;volatile
  3856  007522  D00A               	goto	l253
  3857  007524                     l255:
  3858  007524  9293               	bcf	3987,1,c	;volatile
  3859  007526  D008               	goto	l253
  3860  007528                     l1774:
  3861  007528  5003               	movf	OpenSPI@sync_mode,w,c
  3862                           
  3863                           ; Switch size 1, requested type "space"
  3864                           ; Number of cases is 2, Range of values is 4 to 5
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            7     4 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  00752A  0A04               	xorlw	4	; case 4
  3870  00752C  B4D8               	btfsc	status,2,c
  3871  00752E  D7F7               	goto	l252
  3872  007530  0A01               	xorlw	1	; case 5
  3873  007532  B4D8               	btfsc	status,2,c
  3874  007534  D7F5               	goto	l254
  3875  007536  D7F6               	goto	l255
  3876  007538                     l253:
  3877  007538  8093               	bsf	3987,0,c	;volatile
  3878  00753A  9E94               	bcf	3988,7,c	;volatile
  3879  00753C  8AC6               	bsf	4038,5,c	;volatile
  3880  00753E  0012               	return		;funcret
  3881  007540                     __end_of_OpenSPI:
  3882                           	opt stack 0
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           postinc0	equ	0xFEE
  3891                           wreg	equ	0xFE8
  3892                           indf1	equ	0xFE7
  3893                           postdec1	equ	0xFE5
  3894                           fsr1h	equ	0xFE2
  3895                           fsr1l	equ	0xFE1
  3896                           indf2	equ	0xFDF
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function _fill_SendBuff *****************
  3902 ;; Defined at:
  3903 ;;		line 71 in file "main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  temperature     3    0[COMRAM] float 
  3906 ;;  buffer          2    3[COMRAM] PTR unsigned char 
  3907 ;;		 -> main@tx_buf(32), 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  i               1    5[COMRAM] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;		None               void
  3912 ;; Registers used:
  3913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3919 ;;      Params:         5       0       0       0       0       0       0       0       0
  3920 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3922 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3923 ;;Total ram usage:        6 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text26
  3933  007540                     __ptext26:
  3934                           	opt stack 0
  3935  007540                     _fill_SendBuff:
  3936                           	opt stack 30
  3937                           
  3938                           ;main.c: 72: unsigned char i;
  3939                           ;main.c: 74: for(i = 0; i< sizeof(float); i++){
  3940                           
  3941                           ;incstack = 0
  3942  007540  0E00               	movlw	0
  3943  007542  6E06               	movwf	fill_SendBuff@i,c
  3944  007544                     l2056:
  3945  007544  0E02               	movlw	2
  3946  007546  6406               	cpfsgt	fill_SendBuff@i,c
  3947  007548  D001               	goto	l2060
  3948  00754A  D014               	goto	l2066
  3949  00754C                     l2060:
  3950                           
  3951                           ;main.c: 75: buffer[i] = temp_union.value[i];
  3952  00754C  5006               	movf	fill_SendBuff@i,w,c
  3953  00754E  0D01               	mullw	1
  3954  007550  0E3E               	movlw	low _temp_union
  3955  007552  24F3               	addwf	prodl,w,c
  3956  007554  6ED9               	movwf	fsr2l,c
  3957  007556  0E00               	movlw	high _temp_union
  3958  007558  20F4               	addwfc	prodh,w,c
  3959  00755A  6EDA               	movwf	fsr2h,c
  3960  00755C  5006               	movf	fill_SendBuff@i,w,c
  3961  00755E  0D01               	mullw	1
  3962  007560  50F3               	movf	prodl,w,c
  3963  007562  2404               	addwf	fill_SendBuff@buffer,w,c
  3964  007564  6EE1               	movwf	fsr1l,c
  3965  007566  50F4               	movf	prodh,w,c
  3966  007568  2005               	addwfc	fill_SendBuff@buffer+1,w,c
  3967  00756A  6EE2               	movwf	fsr1h,c
  3968  00756C  CFDF FFE7          	movff	indf2,indf1
  3969  007570  2A06               	incf	fill_SendBuff@i,f,c
  3970  007572  D7E8               	goto	l2056
  3971  007574                     l2066:
  3972                           
  3973                           ;main.c: 76: }
  3974                           ;main.c: 77: for( i = sizeof(float) ; i < 32 ; i++){
  3975  007574  0E03               	movlw	3
  3976  007576  6E06               	movwf	fill_SendBuff@i,c
  3977  007578                     l2068:
  3978  007578  0E1F               	movlw	31
  3979  00757A  6406               	cpfsgt	fill_SendBuff@i,c
  3980  00757C  D001               	goto	l2072
  3981  00757E  D00C               	goto	l53
  3982  007580                     l2072:
  3983                           
  3984                           ;main.c: 78: buffer[i] = 0;
  3985  007580  5006               	movf	fill_SendBuff@i,w,c
  3986  007582  0D01               	mullw	1
  3987  007584  50F3               	movf	prodl,w,c
  3988  007586  2404               	addwf	fill_SendBuff@buffer,w,c
  3989  007588  6ED9               	movwf	fsr2l,c
  3990  00758A  50F4               	movf	prodh,w,c
  3991  00758C  2005               	addwfc	fill_SendBuff@buffer+1,w,c
  3992  00758E  6EDA               	movwf	fsr2h,c
  3993  007590  0E00               	movlw	0
  3994  007592  6EDF               	movwf	indf2,c
  3995  007594  2A06               	incf	fill_SendBuff@i,f,c
  3996  007596  D7F0               	goto	l2068
  3997  007598                     l53:
  3998  007598  0012               	return		;funcret
  3999  00759A                     __end_of_fill_SendBuff:
  4000                           	opt stack 0
  4001  0000                     tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           prodh	equ	0xFF4
  4006                           prodl	equ	0xFF3
  4007                           intcon	equ	0xFF2
  4008                           postinc0	equ	0xFEE
  4009                           wreg	equ	0xFE8
  4010                           indf1	equ	0xFE7
  4011                           postdec1	equ	0xFE5
  4012                           fsr1h	equ	0xFE2
  4013                           fsr1l	equ	0xFE1
  4014                           indf2	equ	0xFDF
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           intcon	equ	0xFF2
  4025                           postinc0	equ	0xFEE
  4026                           wreg	equ	0xFE8
  4027                           indf1	equ	0xFE7
  4028                           postdec1	equ	0xFE5
  4029                           fsr1h	equ	0xFE2
  4030                           fsr1l	equ	0xFE1
  4031                           indf2	equ	0xFDF
  4032                           fsr2h	equ	0xFDA
  4033                           fsr2l	equ	0xFD9
  4034                           status	equ	0xFD8
  4035                           
  4036                           	psect	rparam
  4037  0000                     tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           postdec1	equ	0xFE5
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      69
    BANK0           160     67      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nrf_SPI_Write_Buf@pBuf	PTR unsigned char  size(2) Largest target is 32
		 -> TX_ADDRESS(COMRAM[5]), main@tx_buf(BANK0[32]), 

    nrf_SPI_Read_Buf@pBuf	PTR unsigned char  size(2) Largest target is 32
		 -> main@rx_buf(BANK0[32]), 

    nrf_send@rx_buf	PTR unsigned char  size(2) Largest target is 32
		 -> main@rx_buf(BANK0[32]), 

    nrf_send@tx_buf	PTR unsigned char  size(2) Largest target is 32
		 -> main@tx_buf(BANK0[32]), 

    address_Device@Adress	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    fill_SendBuff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@tx_buf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_read_temp
    _search_Devices->___awdiv
    _read_temp->___ftmul
    _read_Byte->_read_Bit
    _delay750ms->_delay100ms
    _delay750ms->_delay50ms
    _address_Device->_write_Byte
    _write_Byte->_write_Bit
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _nrf_txmode->_nrf_SPI_RW_Reg
    _nrf_send->_nrf_SPI_Read_Buf
    _nrf_send->_nrf_SPI_Write_Buf
    _nrf_SPI_Read_Buf->_nrf_SPI_RW
    _nrf_init->_nrf_SPI_Write_Buf
    _nrf_SPI_Write_Buf->_nrf_SPI_RW
    _nrf_SPI_Read->_nrf_SPI_RW
    _nrf_SPI_RW_Reg->_nrf_SPI_RW

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    70      5   13493
                                             40 COMRAM     5     0      5
                                              0 BANK0     67    67      0
                          _delay50ms
                         _delay750ms
                      _fill_SendBuff
                        _init_sensor
                           _nrf_init
                           _nrf_send
                         _nrf_txmode
                          _read_temp
                     _search_Devices
 ---------------------------------------------------------------------------------
 (1) _search_Devices                                      25    25      0    1166
                                              8 COMRAM    25    25      0
                            ___awdiv
                        _init_sensor
                           _read_Bit
                          _write_Bit
                         _write_Byte
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     406
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_temp                                           13    10      3    4573
                                             27 COMRAM    13    10      3
                           ___awtoft
                            ___ftmul
                     _address_Device
                         _delay750ms
                        _init_sensor
                          _read_Byte
                         _write_Byte
 ---------------------------------------------------------------------------------
 (2) _read_Byte                                            3     3      0      95
                                              1 COMRAM     3     3      0
                           _read_Bit
 ---------------------------------------------------------------------------------
 (2) _read_Bit                                             1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay750ms                                           0     0      0       0
                         _delay100ms
                          _delay50ms
 ---------------------------------------------------------------------------------
 (3) _delay50ms                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _delay100ms                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _address_Device                                       4     2      2     311
                                              4 COMRAM     4     2      2
                        _init_sensor
                         _write_Byte
 ---------------------------------------------------------------------------------
 (2) _write_Byte                                           3     3      0      91
                                              1 COMRAM     3     3      0
                          _write_Bit
 ---------------------------------------------------------------------------------
 (3) _write_Bit                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_sensor                                          2     2      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2141
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    1773
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _nrf_txmode                                           0     0      0    1527
                     _nrf_SPI_RW_Reg
 ---------------------------------------------------------------------------------
 (1) _nrf_send                                             7     3      4    3053
                                              7 COMRAM     7     3      4
                     _nrf_SPI_RW_Reg
                   _nrf_SPI_Read_Buf
                  _nrf_SPI_Write_Buf
                      _nrf_getStatus
 ---------------------------------------------------------------------------------
 (2) _nrf_getStatus                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Read_Buf                                     6     3      3     376
                                              1 COMRAM     6     3      3
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (1) _nrf_init                                             6     6      0    2720
                                              7 COMRAM     1     1      0
                            _OpenSPI
                     _nrf_SPI_RW_Reg
                       _nrf_SPI_Read
                  _nrf_SPI_Write_Buf
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Write_Buf                                    6     3      3     885
                                              1 COMRAM     6     3      3
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_Read                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _nrf_SPI_RW_Reg                                       3     2      1    1527
                                              1 COMRAM     3     2      1
                         _nrf_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _nrf_SPI_RW                                           1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI                                              3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _fill_SendBuff                                        6     1      5     308
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay50ms
   _delay750ms
     _delay100ms
     _delay50ms
   _fill_SendBuff
   _init_sensor
   _nrf_init
     _OpenSPI
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
     _nrf_SPI_Read
       _nrf_SPI_RW
     _nrf_SPI_Write_Buf
       _nrf_SPI_RW
   _nrf_send
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
     _nrf_SPI_Read_Buf
       _nrf_SPI_RW
     _nrf_SPI_Write_Buf
       _nrf_SPI_RW
     _nrf_getStatus
   _nrf_txmode
     _nrf_SPI_RW_Reg
       _nrf_SPI_RW
   _read_temp
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     _address_Device
       _init_sensor
       _write_Byte
         _write_Bit
     _delay750ms
       _delay100ms
       _delay50ms
     _init_sensor
     _read_Byte
       _read_Bit
     _write_Byte
       _write_Bit
   _search_Devices
     ___awdiv
     _init_sensor
     _read_Bit
     _write_Bit
     _write_Byte
       _write_Bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      43       5       41.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      45       1       72.6%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      11        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Oct 16 12:45:26 2015

                        _SSPSTATbits 000FC7                                   l43 7896  
                                 l53 7598                                   l71 733E  
                                 l73 7356                                   l81 7280  
                                 l68 744E                                   l93 7496  
                                 l78 72E8                                   l87 7408  
                       ___awdiv@sign 0006                          __CFG_BOR$ON 000000  
                        __CFG_BORV$3 000000                    nrf_SPI_RW_Reg@reg 0004  
                     nrf_send@rx_buf 000A                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                       _search_Devices 7B38  
                     nrf_send@tx_buf 0008                       nrf_send@status 000E  
                        __CFG_LVP$ON 000000  search_Devices@CurrentConflictBitPos 0016  
                        __CFG_WDT$ON 000000                                  l102 7CFE  
                                l210 71E6                                  l213 7214  
                                l118 7754                                  l207 71DA  
                                l216 722E                                  l152 71EE  
                                l161 7624                                  l155 71FC  
                                l252 751E                                  l253 7538  
                                l254 7520                                  l246 74FE  
                                l255 7524                                  l159 75EA  
                                l248 7502                                  l249 7504  
                                l452 76BA                                  l477 73CC  
                                l654 7B36                                  l567 7968  
                                l578 7940                         __CFG_CPB$OFF 000000  
                                _RA0 007C00                                  _RA1 007C01  
                       __CFG_CPD$OFF 000000                                  u861 7A50  
                                u881 7A6E                                  u990 7B56  
                                prod 000FF3                                  wreg 000FE8  
                       __CFG_FOSC$HS 000000                           _TX_ADDRESS 0041  
                               l2002 7C66                                 l2012 7C9C  
                               l2004 7C6C                                 l2110 7620  
                               l2022 7CFA                                 l2008 7C88  
                               l2018 7CEA                                 l2060 754C  
                               l2072 7580                                 l2056 7544  
                               l2066 7574                                 l2090 75E4  
                               l2154 789A                                 l2146 7846  
                               l2068 7578                                 l2086 75D0  
                               l1702 747C                                 l1640 78B4  
                               l1730 7294                                 l1652 7908  
                               l1644 78C4                                 l1812 7AE2  
                               l1804 7ABA                                 l1662 7948  
                               l1654 7928                                 l1646 78D0  
                               l1822 7B10                                 l1814 7AE8  
                               l1736 72AA                                 l1744 736A  
                               l1656 7934                                 l1648 78F0  
                               l1808 7ACC                                 l1680 73EE  
                               l1840 764E                                 l1770 7508  
                               l1818 7AFA                                 l1594 72C0  
                               l1850 7676                                 l1834 763C  
                               l1748 7386                                 l1668 795A  
                               l1676 73DA                                 l1940 7B58  
                               l1774 7528                                 l1790 7A86  
                               l1598 72D4                                 l1846 7664  
                               l1862 76A0                                 l1942 7B64  
                               l1784 7A5E                                 l1688 7404  
                               l1848 766E                                 l1952 7B90  
                               l1786 7A78                                 l1698 7468  
                               l1866 76B0                                 l1858 7694  
                               l1970 7BC8                                 l1946 7B78  
                               l1980 7BE2                                 l1964 7BB2  
                               l1878 73A8                                 l1974 7BD6  
                               l1958 7B9E                                 l1992 7C12  
                               l1984 7BEE                                 l1976 7BDE  
                               l1988 7C08                                 u1100 7C7C  
                               u1080 7C32                                 u1307 7266  
                               u1317 7276                                 u1085 7C2E  
                               u1407 778C                                 u1327 749E  
                               u1417 779C                                 u1337 74AE  
                               u1507 734E                                 u1427 77AC  
                               u1347 74BE                                 u1517 7418  
                               u1437 77BC                                 u1357 74CE  
                               u1527 7426                                 u1447 77CC  
                               u1367 74DE                                 u1537 743C  
                               u1457 77DC                                 u1377 775C  
                               u1297 725C                                 u1467 77EC  
                               u1387 776C                                 u1477 732E  
                               u1397 777C                                 u1487 7338  
                               u1497 7344                      ??_fill_SendBuff 0006  
                               _main 77F8                         ___ftpack@arg 0001  
                       ___ftpack@exp 0004                                 fsr2h 000FDA  
                               indf1 000FE7                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               prodh 000FF4                                 prodl 000FF3  
                               start 0002                        __CFG_IESO$OFF 000000  
                nrf_SPI_RW_Reg@value 0002                        __CFG_MCLRE$ON 000000  
                       ___ftmul@cntr 001A                         ___param_bank 000010  
                       ___ftmul@sign 001B             fill_SendBuff@temperature 0001  
                    __end_of_OpenSPI 7540               __end_of_search_Devices 7D00  
                      __CFG_PLLDIV$5 000000                       __CFG_CCP2MX$ON 000000  
                              ?_main 0029                      __end_of___awdiv 76BC  
                    __end_of___ftmul 7B38                      ___awdiv@divisor 0003  
                              _LATA0 007C48                    nrf_SPI_Read_Buf@i 0007  
                    ___awdiv@counter 0005                        __CFG_USBDIV$1 000000  
                      __CFG_PWRT$OFF 000000                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                         ?_init_sensor 0001  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                     __CFG_EBTRB$OFF 000000                        ___awtoft@sign 000C  
                   ??_address_Device 0007                __end_of_nrf_getStatus 71FE  
                      ___ftpack@sign 0005                                tablat 000FF5  
                              status 000FD8                       nrf_SPI_RW@data 0001  
                     __CFG_ICPRT$OFF 000000                 nrf_SPI_RW_Reg@status 0003  
                     __CFG_PBADEN$ON 000000                main@nrf24l01_response 00A2  
                    __initialization 72EA                         __end_of_main 78A4  
                    ?_search_Devices 0001                               ??_main 002E  
                    search_Devices@i 0019                      search_Devices@j 001E  
                    search_Devices@k 001B                        __activetblptr 000002  
                   ??_nrf_SPI_RW_Reg 0003                               _ADCON1 000FC1  
                   ___awdiv@dividend 0001                     __end_of___awtoft 73CE  
                   __end_of___ftpack 796A                               _TRISA0 007C90  
                             _STATUS 000FD8                               _SSPBUF 000FC9  
   search_Devices@LastConflictBitNum 0015                     _nrf_SPI_Read_Buf 7358  
                          ??_OpenSPI 0003                       __CFG_XINST$OFF 000000  
                          ??___awdiv 0005                       __CFG_STVREN$ON 000000  
                          ??___ftmul 0013                     __end_of_read_Bit 7282  
                             clear_0 72F0                     ___awdiv@quotient 0007  
              ___ftmul@f3_as_product 0017                     __end_of_nrf_init 7A40  
                   __end_of_nrf_send 7626                         __pdataCOMRAM 0041  
                      ?_nrf_SPI_Read 0001                   search_Devices@mask 0017  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           __accesstop 0060  
            __end_of__initialization 7316               nrf_SPI_Write_Buf@bytes 0004  
                nrf_getStatus@status 0001                        ___rparam_used 000001  
                         ___awtoft@c 0009                           ___ftmul@f1 000D  
                         ___ftmul@f2 0010                       __pcstackCOMRAM 0001  
                    nrf_SPI_Read@reg 0002                   __size_of_delay50ms 0052  
                     ??_nrf_SPI_Read 0002                           _delay100ms 7756  
               __size_of_init_sensor 0046                           _delay750ms 7230  
                 __size_of_read_Byte 003C                   __size_of_read_temp 009A  
                nrf_SPI_Read@reg_val 0003                            ?___awtoft 0009  
                          ?___ftpack 0001                  nrf_SPI_Read_Buf@reg 0006  
         search_Devices@list_Devices 000D                              _SSPCON1 000FC6  
                            _SSPSTAT 000FC7                    __end_of_delay50ms 74EA  
                    __CFG_VREGEN$OFF 000000                            ?_read_Bit 0001  
              __end_of_fill_SendBuff 759A                   __size_of_write_Bit 0038  
                          ?_nrf_init 0001                              _OpenSPI 74EA  
                            __Hparam 0000                            ?_nrf_send 0008  
                   ??_search_Devices 0009                              __Lparam 0000  
                            ___awdiv 7626                              ___ftmul 7A40  
                            __pcinit 72EA                           ??___awtoft 000C  
                         ??___ftpack 0006                              __ramtop 0800  
                            __ptext0 77F8                              __ptext1 7B38  
                            __ptext2 7626                              __ptext3 76BC  
                            __ptext4 73CE                              __ptext5 7252  
                            __ptext6 7230                              __ptext7 7498  
                            __ptext8 7756                              __ptext9 7450  
                         _nrf_SPI_RW 71D2                    __end_of_read_Byte 740A  
           __end_of_nrf_SPI_Read_Buf 7392                    write_Bit@WriteArg 0001  
                  __end_of_read_temp 7756                  fill_SendBuff@buffer 0004  
              nrf_SPI_Read_Buf@bytes 0004                          ?_delay100ms 0001  
                        ?_delay750ms 0001                 end_of_initialization 7316  
                         ??_read_Bit 0001                        __Lmediumconst 0000  
                  _nrf_SPI_Write_Buf 7282                   nrf_SPI_Write_Buf@i 0007  
                         _nrf_txmode 71C2                   ?_nrf_SPI_Write_Buf 0002  
                         ??_nrf_init 0008                           ??_nrf_send 000C  
               __end_of_nrf_SPI_Read 7230                              postdec1 000FE5  
                            postinc0 000FEE                           _temp_union 003E  
                ??_nrf_SPI_Write_Buf 0005               __size_of_nrf_getStatus 0016  
                          _PORTCbits 000F82                    __end_of_write_Bit 7358  
                          _TRISAbits 000F92                            _TRISBbits 000F93  
                          _TRISCbits 000F94              nrf_SPI_Write_Buf@status 0005  
          __end_of_nrf_SPI_Write_Buf 72B6                           main@Sucess 00A0  
                         main@rx_buf 0060                           main@tx_buf 0080  
            __size_of_address_Device 0048                          ___ftmul@exp 0016  
                __size_of_delay100ms 00A2                   init_sensor@reponse 0002  
                         _write_Byte 72B6                  __size_of_delay750ms 0022  
                     read_Bit@result 0001                        __pidataCOMRAM 71BD  
                   OpenSPI@smp_phase 0002                          ?_nrf_SPI_RW 0001  
                start_initialization 72EA                     OpenSPI@sync_mode 0003  
                      _nrf_getStatus 71E8                        _DeviceAddress 002E  
                        ?_nrf_txmode 0001              __size_of_nrf_SPI_RW_Reg 0018  
                         read_Byte@i 0003                     __CFG_LPT1OSC$OFF 000000  
              nrf_SPI_Write_Buf@pBuf 0002                    __size_of___awtoft 003C  
                  __size_of___ftpack 00C6                          __pbssCOMRAM 002E  
                      ??_init_sensor 0001                        __pcstackBANK0 0060  
                     ?_nrf_getStatus 0001           __size_of_nrf_SPI_Write_Buf 0034  
              __size_of_nrf_SPI_Read 001A                            _delay50ms 7498  
                  __size_of_read_Bit 0030                  __size_of_nrf_SPI_RW 0016  
                           ?_OpenSPI 0001                    __size_of_nrf_init 00D6  
                  __size_of_nrf_send 008C                             ?___awdiv 0001  
                           ?___ftmul 000D                          ?_write_Byte 0001  
                  ?_nrf_SPI_Read_Buf 0002                  __size_of_nrf_txmode 0010  
                       _nrf_SPI_Read 7216                   ??_nrf_SPI_Read_Buf 0005  
                          _read_Byte 73CE                         ??_delay100ms 0001  
                       ??_delay750ms 0002                            _read_temp 76BC  
                __end_of_init_sensor 7450                 nrf_SPI_Read_Buf@pBuf 0002  
                         ?_delay50ms 0001                       _address_Device 7450  
                   __CFG_WDTPS$32768 000000                          write_Byte@i 0003  
                 __end_of_delay100ms 77F8                   __end_of_delay750ms 7252  
                    OpenSPI@bus_mode 0001               __size_of_fill_SendBuff 005A  
       search_Devices@InputBitStatus 001D                      ??_nrf_getStatus 0001  
                         ?_read_Byte 0001                            _write_Bit 7320  
                          copy_data0 730A                           ?_read_temp 001C  
                __size_of_write_Byte 0034               __end_of_address_Device 7498  
                     _nrf_SPI_RW_Reg 71FE                 read_temp@temperature 0021  
                           __Hrparam 0000                             __Lrparam 0000  
                   __size_of_OpenSPI 0056                     __size_of___awdiv 0096  
                      read_Byte@data 0002                 nrf_SPI_Write_Buf@reg 0006  
                   __size_of___ftmul 00F8                             ___awtoft 7392  
                           ___ftpack 78A4              __size_of_search_Devices 01C8  
                       ??_nrf_SPI_RW 0001                          _init_sensor 740A  
                           __ptext10 72B6                             __ptext11 7320  
                           __ptext20 796A                             __ptext12 740A  
                           __ptext21 7282                             __ptext13 7A40  
                           __ptext22 7216                             __ptext14 7392  
                           __ptext23 71FE                             __ptext15 78A4  
                           __ptext24 71D2                             __ptext16 71C2  
                           __ptext25 74EA                             __ptext17 759A  
                           __ptext26 7540                             __ptext18 71E8  
                           __ptext19 7358                           ?_write_Bit 0001  
                          nrf_send@i 000C                             _read_Bit 7252  
             __end_of_nrf_SPI_RW_Reg 7216                 address_Device@Adress 0005  
                      __size_of_main 00AC                      ?_address_Device 0005  
                        ??_delay50ms 0001                         ??_nrf_txmode 0005  
                      _fill_SendBuff 7540                             _nrf_init 796A  
                           _nrf_send 759A                   __end_of_nrf_SPI_RW 71E8  
                           main@argc 0029                             main@argv 002B  
             nrf_SPI_Read_Buf@status 0005                __CFG_CPUDIV$OSC1_PLL2 000000  
                         _INTCONbits 000FF2            search_Devices@SelectedBit 0018  
                 __end_of_nrf_txmode 71D2                          ??_read_Byte 0002  
                        ??_read_temp 001F                      ?_nrf_SPI_RW_Reg 0002  
                     ?_fill_SendBuff 0001                 search_Devices@bitnum 0020  
                         _OSCCONbits 000FD3                       nrf_init@status 0008  
                       ??_write_Byte 0002               read_temp@DeviceAddress 0028  
               main@ds18b20_response 00A1                       read_temp@temph 0025  
                     read_temp@templ 0024                          _SSPCON1bits 000FC6  
                        ??_write_Bit 0001                       write_Byte@data 0002  
                     fill_SendBuff@i 0006                        read_temp@temp 0026  
                 __end_of_write_Byte 72EA            __size_of_nrf_SPI_Read_Buf 003A  
                    address_Device@i 0007  
